[{"path":[]},{"path":"https://bemts-hhs.github.io/nemsqar/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement nicolas.foss@hhs.iowa.gov samuel.kordik@utsouthwestern.edu. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to nemsqar","title":"Contributing to nemsqar","text":"outlines propose change nemsqar. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to nemsqar","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to nemsqar","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to nemsqar","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"bemts-hhs/nemsqar\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to nemsqar","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to nemsqar","text":"Please note nemsqar project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 nemsqar authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with nemsqar","title":"Getting help with nemsqar","text":"Thanks using nemsqar! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with nemsqar","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with nemsqar","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with nemsqar","text":"Please don’t worry get immediate response, try get back soon possible. issues submitted via GitHub (email!) include reprex, help address concern quickly. Remember, reproduce problem, help fix . use reprex!","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Foss. Author, maintainer. Samuel Kordik. Author. Alyssa Green. Contributor. Iowa Department Health Human Services. Copyright holder.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Foss N, Kordik S (2025). nemsqar: National Emergency Medical Service Quality Alliance Measure Calculations. R package version 1.1.0, https://github.com/bemts-hhs/nemsqar.","code":"@Manual{,   title = {nemsqar: National Emergency Medical Service Quality Alliance Measure Calculations},   author = {Nicolas Foss and Samuel Kordik},   year = {2025},   note = {R package version 1.1.0},   url = {https://github.com/bemts-hhs/nemsqar}, }"},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"nemsqar-","dir":"","previous_headings":"","what":"National Emergency Medical Service Quality Alliance Measure Calculations","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"nemsqar R package designed automate calculation EMS quality metrics defined National EMS Quality Alliance (NEMSQA). focus enhancing EMS service performance reliable, evidence-based quality measures, nemsqar aims streamline metric calculation healthcare providers, EMS agencies, researchers dedicated improving patient outcomes.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"can install development version nemsqar : Additionally, may install current version nemsqar CRAN via:","code":"# install.packages(\"remotes\") remotes::install_github(\"bemts-hhs/nemsqar\") install.packages(\"nemsqar\")"},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"functionality","dir":"","previous_headings":"","what":"Functionality","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"nemsqar functions always automate calculation service’s performance (even system’s) currently approved list NEMSQA Measures (see ). Given large number functions, please check full package documentation resource .","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"about-nemsqa","dir":"","previous_headings":"","what":"About NEMSQA","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"National EMS Quality Alliance (NEMSQA) committed developing endorsing quality measures improve patient provider experiences within EMS healthcare systems. Originating EMS Compass Project (2014), NEMSQA evolved independent organization, tasked completing sustaining development impactful, evidence-based EMS quality measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"history-of-ems-quality-measure-development","dir":"","previous_headings":"About NEMSQA","what":"History of EMS Quality Measure Development","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"structured development EMS quality measures began EMS Compass Project, initiative funded National Highway Traffic Safety Administration (NHTSA) led National Association State EMS Officials (NASEMSO) establish relevant performance measures EMS agencies. Since , field advanced guidance NEMSQA, works create sustainable, practical, high-impact EMS quality measures collaborative, scientifically driven process. NEMSQA, please visit official website: nemsqa.org.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"nemsqa-measure-set","dir":"","previous_headings":"","what":"NEMSQA Measure Set","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"National EMS Quality Alliance (NEMSQA) Measure Set includes comprehensive list EMS quality measures developed approved national use. measures intended guide EMS agencies collecting data assess improve patient care. measures approved NEMSQA Measure Development Committee Board Trustees August 2019. Access full technical specifications measures available NEMSQA website creating user profile.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"key-for-developed-in-package-column","dir":"","previous_headings":"NEMSQA Measure Set","what":"Key for Developed in Package? Column","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"Developed package: ✔️ Slated future development: 🔧","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"Interested persons may reference following links resources via NEMSQA’s website. Note - materials may require free membership access. Measure Specification Table (NEMSQA)_2021: quick-reference table includes broad-view measure specifications (.e., numerator denominator criteria) measure. Project Summary Measure Narratives: overview EMS Compass 2.0 project narratives measure, include systems implications. Frequently Asked Questions: Answers commonly asked questions. NEMSQA Measure Technical Release Notes_2021: reference table documents changes made NEMSQA measures 2021 annual review. Fact Sheet: info page explaining agencies systems migrate EMS Compass legacy/candidate measures National EMS Quality Alliance Measure Set.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"thanks","dir":"","previous_headings":"","what":"Thanks!","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"big loud thanks Sheree Murphy NEMSQA, Peter Geissert Oregon EMS & Trauma Systems, Jeffrey Jarvis medical director Metropolitan Area EMS Authority (Fort Worth, Texas), Marshall Washick (Washington D.C. Fire) input consultation!","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-01 Calculation — airway_01","title":"Airway-01 Calculation — airway_01","text":"Calculates NEMSQA Airway-01 measure. Calculates proportion times first endotracheal intubation attempt successful peri-intubation hypoxia hypotension.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-01 Calculation — airway_01","text":"","code":"airway_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   earrest_01_col,   eresponse_05_col,   evitals_01_col,   evitals_06_col,   evitals_12_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col,   eprocedures_05_col,   eprocedures_06_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-01 Calculation — airway_01","text":"df dataframe tibble containing EMS data row represents observation columns represent features. patient_scene_table data.frame tibble containing least epatient, escene, earrest.01 fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. arrest_table data.frame tibble containing least earrest fields needed measure's calculations. procedures_table dataframe tibble containing least eProcedures fields needed. vitals_table dataframe tibble containing least eVitals fields needed. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minutes\"). earrest_01_col Column representing whether patient arrest. eresponse_05_col Column contains eResponse.05. evitals_01_col Date-time POSIXct column containing vital signs date/time evitals_06_col Numeric column containing systolic blood pressure values evitals_12_col Numeric column containing pulse oximetry values. eprocedures_01_col Date-time POSIXct column procedures eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column containing procedure codes without procedure names. eprocedures_05_col Column containing count many times procedure attempted. eprocedures_06_col Column indicating whether procedure successful. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-01 Calculation — airway_01","text":"data.frame summarizing results two population groups (Adults Peds) following columns: pop: Population type (Adults Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-01 Calculation — airway_01","text":"Samuel Kordik, BBA, BS, Nicolas Foss Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-01 Calculation — airway_01","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 22:59:00\",     \"2025-01-05 11:58:00\", \"2025-02-01 18:57:00\", \"2025-01-01 04:58:00\",     \"2025-06-01 12:57:00\", \"2025-01-01 23:05:00\", \"2025-01-05 12:04:00\",     \"2025-02-01 19:03:00\", \"2025-01-01 05:02:00\", \"2025-06-01 13:01:00\")),     evitals_06 = rep(c(90, 100, 102, 103, 104), 2),     evitals_12 = rep(c(90, 91, 92, 93, 94), 2)    )  # arrest table   arrest_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     earrest_01 = rep(\"No\", 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2),     eprocedures_05 = rep(1, 10),     eprocedures_06 = rep(9923003, 10)    )  # Run the function # Return 95% confidence intervals using the Wilson method airway_01(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          arrest_table = arrest_table,          response_table = response_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          eprocedures_05_col = eprocedures_05,          eprocedures_06_col = eprocedures_06,          earrest_01_col = earrest_01,          evitals_01_col = evitals_01,          evitals_06_col = evitals_06,          evitals_12_col = evitals_12,          confidence_interval = TRUE          ) #>  #> ── Airway-01 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Airway-01 ── #>  #> Running `airway_01_population()`  [Working on 1 of 19 tasks] ●●●───────────────… #> Running `airway_01_population()`  [Working on 2 of 19 tasks] ●●●●──────────────… #> Running `airway_01_population()`  [Working on 3 of 19 tasks] ●●●●●●────────────… #> Running `airway_01_population()`  [Working on 4 of 19 tasks] ●●●●●●●───────────… #> Running `airway_01_population()`  [Working on 5 of 19 tasks] ●●●●●●●●●─────────… #> Running `airway_01_population()`  [Working on 6 of 19 tasks] ●●●●●●●●●●────────… #> Running `airway_01_population()`  [Working on 7 of 19 tasks] ●●●●●●●●●●●●──────… #> Running `airway_01_population()`  [Working on 8 of 19 tasks] ●●●●●●●●●●●●●●────… #> Running `airway_01_population()`  [Working on 9 of 19 tasks] ●●●●●●●●●●●●●●●───… #> Running `airway_01_population()`  [Working on 10 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 11 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 12 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 13 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 14 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 15 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 16 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 17 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 18 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 19 of 19 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Airway-01 ── #>  #>  #> ✔ Function completed in 0.45s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 2 × 8 #>   measure   pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Airway-01 Adults         2           2     1 100%          0.198        1 #> 2 Airway-01 Peds           3           3     1 100%          0.310        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-01 Population — airway_01_population","title":"Airway-01 Population — airway_01_population","text":"function processes analyzes dataset generate populations interest needed perform calculations obtain performance data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-01 Population — airway_01_population","text":"","code":"airway_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   earrest_01_col,   eresponse_05_col,   evitals_01_col,   evitals_06_col,   evitals_12_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col,   eprocedures_05_col,   eprocedures_06_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-01 Population — airway_01_population","text":"df dataframe tibble contianing EMS data row represents observation columns represent features. patient_scene_table data.frame tibble containing least epatient, escene, earrest.01 fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. arrest_table data.frame tibble containing least earrest fields needed measure's calculations. procedures_table dataframe tibble containing least eProcedures fields needed. vitals_table dataframe tibble containing least eVitals fields needed. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minutes\"). earrest_01_col Column representing whether patient arrest. eresponse_05_col Column contains eResponse.05. evitals_01_col Date-time POSIXct column containing vital signs date/time evitals_06_col Numeric column containing systolic blood pressure values evitals_12_col Numeric column containing pulse oximetry values. eprocedures_01_col Date-time POSIXct column procedures eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column containing procedure codes without procedure names. eprocedures_05_col Column containing count many times procedure attempted. eprocedures_06_col Column indicating whether procedure successful.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-01 Population — airway_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-01 Population — airway_01_population","text":"Samuel Kordik, BBA, BS, Nicolas Foss Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-01 Population — airway_01_population","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 22:59:00\",     \"2025-01-05 11:58:00\", \"2025-02-01 18:57:00\", \"2025-01-01 04:58:00\",     \"2025-06-01 12:57:00\", \"2025-01-01 23:05:00\", \"2025-01-05 12:04:00\",     \"2025-02-01 19:03:00\", \"2025-01-01 05:02:00\", \"2025-06-01 13:01:00\")),     evitals_06 = rep(c(90, 100, 102, 103, 104), 2),     evitals_12 = rep(c(90, 91, 92, 93, 94), 2)    )  # arrest table   arrest_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     earrest_01 = rep(\"No\", 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2),     eprocedures_05 = rep(1, 10),     eprocedures_06 = rep(9923003, 10)    )  # Run the function result <- airway_01_population(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          arrest_table = arrest_table,          response_table = response_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          eprocedures_05_col = eprocedures_05,          eprocedures_06_col = eprocedures_06,          earrest_01_col = earrest_01,          evitals_01_col = evitals_01,          evitals_06_col = evitals_06,          evitals_12_col = evitals_12          ) #> Running `airway_01_population()`  [Working on 1 of 19 tasks] ●●●───────────────… #> Running `airway_01_population()`  [Working on 2 of 19 tasks] ●●●●──────────────… #> Running `airway_01_population()`  [Working on 3 of 19 tasks] ●●●●●●────────────… #> Running `airway_01_population()`  [Working on 4 of 19 tasks] ●●●●●●●───────────… #> Running `airway_01_population()`  [Working on 5 of 19 tasks] ●●●●●●●●●─────────… #> Running `airway_01_population()`  [Working on 6 of 19 tasks] ●●●●●●●●●●────────… #> Running `airway_01_population()`  [Working on 7 of 19 tasks] ●●●●●●●●●●●●──────… #> Running `airway_01_population()`  [Working on 8 of 19 tasks] ●●●●●●●●●●●●●●────… #> Running `airway_01_population()`  [Working on 9 of 19 tasks] ●●●●●●●●●●●●●●●───… #> Running `airway_01_population()`  [Working on 10 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 11 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 12 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 13 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 14 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 15 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 16 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 17 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 18 of 19 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_01_population()`  [Working on 19 of 19 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 19 × 2 #>    filter                                                                  count #>    <chr>                                                                   <int> #>  1 Invasive airway procedures                                                  5 #>  2 Successful invasive airway procedures                                       5 #>  3 First attempt successful invasive airway procedures                         5 #>  4 911 calls                                                                   5 #>  5 Excluded cardiac arrests                                                    0 #>  6 Excluded newborns                                                           0 #>  7 All initial population successful intubation with no hypoxia                5 #>  8 All initial population successful intubation with no hypotension            5 #>  9 Initial population ages >= 10 yrs successful intubation with no hypoxi…     2 #> 10 Initial population ages 1-9 yrs successful intubation with no hypoxia/…     3 #> 11 Initial population ages < 1 yrs & > 28 days successful intubation with…     0 #> 12 Initial population ages < 28 days successful intubation with no hypoxi…     0 #> 13 All initial population successful intubation with no hypoxia or hypoxi…     5 #> 14 Adults successful intubation no hypoxia or hypotension                      2 #> 15 Peds successful intubation no hypoxia or hypotension                        3 #> 16 Adults denominator                                                          2 #> 17 Peds denominator                                                            3 #> 18 Initial Population                                                          5 #> 19 Total procedures in dataset                                                 5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-05 Calculation — airway_05","title":"Airway-05 Calculation — airway_05","text":"Calculates NEMSQA Airway-05 measure. Calculates proportion endotracheal intubation attempts adequate oxygenation.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-05 Calculation — airway_05","text":"","code":"airway_05(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   earrest_01_col,   eresponse_05_col,   evitals_01_col,   evitals_12_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-05 Calculation — airway_05","text":"df dataframe tibble containing EMS data row represents observation columns represent features. Default NULL. patient_scene_table data.frame tibble containing least epatient, escene, earrest.01 fields fact table. Default NULL. response_table data.frame tibble containing least eresponse fields needed measure's calculations. Default NULL. arrest_table data.frame tibble containing least earrest fields needed measure's calculations. Default NULL. procedures_table dataframe tibble containing least eProcedures fields needed. Default NULL. vitals_table dataframe tibble containing least eVitals fields needed. Default NULL. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. Default NULL. patient_DOB_col Column contains patient's date birth. Default NULL. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minutes\"). earrest_01_col Column representing whether patient arrest. eresponse_05_col Column contains eResponse.05. evitals_01_col Date-time POSIXct column containing vital signs date/time evitals_12_col Numeric column containing pulse oximetry values. eprocedures_01_col Date-time POSIXct column procedures eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column containing procedure codes without procedure names. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-05 Calculation — airway_05","text":"data.frame summarizing results two population groups (Adults Peds) following columns: pop: Population type (Adults Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-05 Calculation — airway_05","text":"Samuel Kordik, BBA, BS, Nicolas Foss Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-05 Calculation — airway_05","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 22:59:00\",     \"2025-01-05 11:58:00\", \"2025-02-01 18:57:00\", \"2025-01-01 04:58:00\",     \"2025-06-01 12:57:00\", \"2025-01-01 23:05:00\", \"2025-01-05 12:04:00\",     \"2025-02-01 19:03:00\", \"2025-01-01 05:02:00\", \"2025-06-01 13:01:00\")),     evitals_12 = rep(c(94, 95, 96, 97, 98), 2)    )  # arrest table   arrest_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     earrest_01 = rep(\"No\", 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2)    )  # Run the function # Return 95% confidence intervals using the Wilson method airway_05(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          arrest_table = arrest_table,          response_table = response_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          earrest_01_col = earrest_01,          evitals_01_col = evitals_01,          evitals_12_col = evitals_12,          confidence_interval = TRUE          ) #>  #> ── Airway-05 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Airway-05 ── #>  #> Running `airway_05_population()`  [Working on 1 of 15 tasks] ●●●───────────────… #> Running `airway_05_population()`  [Working on 2 of 15 tasks] ●●●●●─────────────… #> Running `airway_05_population()`  [Working on 3 of 15 tasks] ●●●●●●●───────────… #> Running `airway_05_population()`  [Working on 4 of 15 tasks] ●●●●●●●●●─────────… #> Running `airway_05_population()`  [Working on 5 of 15 tasks] ●●●●●●●●●●●───────… #> Running `airway_05_population()`  [Working on 6 of 15 tasks] ●●●●●●●●●●●●●─────… #> Running `airway_05_population()`  [Working on 7 of 15 tasks] ●●●●●●●●●●●●●●●───… #> Running `airway_05_population()`  [Working on 8 of 15 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `airway_05_population()`  [Working on 9 of 15 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 10 of 15 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 11 of 15 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 12 of 15 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 13 of 15 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 14 of 15 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 15 of 15 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Airway-05 ── #>  #>  #> ✔ Function completed in 0.27s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 2 × 8 #>   measure   pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>      <dbl>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Airway-05 Adults         2           2     1 100%          0.198        1 #> 2 Airway-05 Peds           3           3     1 100%          0.310        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-05 Population — airway_05_population","title":"Airway-05 Population — airway_05_population","text":"function processes analyzes dataset generate populations interest needed perform calculations obtain performance data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-05 Population — airway_05_population","text":"","code":"airway_05_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   earrest_01_col,   eresponse_05_col,   evitals_01_col,   evitals_12_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-05 Population — airway_05_population","text":"df dataframe tibble contianing EMS data row represents observation columns represent features. Default NULL. patient_scene_table data.frame tibble containing least epatient, escene, earrest.01 fields fact table. Default NULL. response_table data.frame tibble containing least eresponse fields needed measure's calculations. Default NULL. arrest_table data.frame tibble containing least earrest fields needed measure's calculations. Default NULL. procedures_table dataframe tibble containing least eProcedures fields needed. Default NULL. vitals_table dataframe tibble containing least eVitals fields needed. Default NULL. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minutes\"). earrest_01_col Column representing whether patient arrest. eresponse_05_col Column contains eResponse.05. evitals_01_col Date-time POSIXct column containing vital signs date/time evitals_12_col Numeric column containing pulse oximetry values. eprocedures_01_col Date-time POSIXct column procedures eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column containing procedure codes without procedure names.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-05 Population — airway_05_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-05 Population — airway_05_population","text":"Samuel Kordik, BBA, BS, Nicolas Foss Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-05 Population — airway_05_population","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 22:59:00\",     \"2025-01-05 11:58:00\", \"2025-02-01 18:57:00\", \"2025-01-01 04:58:00\",     \"2025-06-01 12:57:00\", \"2025-01-01 23:05:00\", \"2025-01-05 12:04:00\",     \"2025-02-01 19:03:00\", \"2025-01-01 05:02:00\", \"2025-06-01 13:01:00\")),     evitals_12 = rep(c(90, 91, 92, 93, 94), 2)    )  # arrest table   arrest_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     earrest_01 = rep(\"No\", 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2)    )  # Run the function result <- airway_05_population(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          arrest_table = arrest_table,          response_table = response_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          earrest_01_col = earrest_01,          evitals_01_col = evitals_01,          evitals_12_col = evitals_12          ) #> Running `airway_05_population()`  [Working on 1 of 15 tasks] ●●●───────────────… #> Running `airway_05_population()`  [Working on 2 of 15 tasks] ●●●●●─────────────… #> Running `airway_05_population()`  [Working on 3 of 15 tasks] ●●●●●●●───────────… #> Running `airway_05_population()`  [Working on 4 of 15 tasks] ●●●●●●●●●─────────… #> Running `airway_05_population()`  [Working on 5 of 15 tasks] ●●●●●●●●●●●───────… #> Running `airway_05_population()`  [Working on 6 of 15 tasks] ●●●●●●●●●●●●●─────… #> Running `airway_05_population()`  [Working on 7 of 15 tasks] ●●●●●●●●●●●●●●●───… #> Running `airway_05_population()`  [Working on 8 of 15 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `airway_05_population()`  [Working on 9 of 15 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 10 of 15 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 11 of 15 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 12 of 15 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 13 of 15 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 14 of 15 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_05_population()`  [Working on 15 of 15 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 11 × 2 #>    filter                                                        count #>    <chr>                                                         <dbl> #>  1 Invasive airway procedures                                        5 #>  2 911 calls                                                         5 #>  3 Excluded cardiac arrests                                          0 #>  4 Excluded newborns                                                 0 #>  5 All initial population intubation with adequate oxygen levels     1 #>  6 Adults intubation with adequate oxygen levels                     1 #>  7 Peds intubation with adequate oxygen levels                       0 #>  8 Adults denominator                                                2 #>  9 Peds denominator                                                  3 #> 10 Initial Population                                                5 #> 11 Total procedures in dataset                                       5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-18 Calculation — airway_18","title":"Airway-18 Calculation — airway_18","text":"function processes analyzes dataset calculate \"Airway-18\" NEMSQA metric. includes cleaning transforming several columns related patient data, airway procedures, vital signs, returns cleaned dataset relevant calculations. final calculation assessment successful last invasive airway procedures performed EMS response originating 911 request waveform capnography used tube placement confirmation.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-18 Calculation — airway_18","text":"","code":"airway_18(   df = NULL,   patient_scene_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   airway_table = NULL,   response_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col,   eprocedures_06_col,   eairway_02_col = NULL,   eairway_04_col = NULL,   evitals_01_col,   evitals_16_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-18 Calculation — airway_18","text":"df data frame tibble containing dataset processed. Default NULL. patient_scene_table data frame tibble containing ePatient eScene fields fact table. Default NULL. procedures_table data frame tibble containing eProcedures fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing eVitals fields needed measure's calculations. Default NULL. airway_table data frame tibble containing eAirway fields needed measure's calculations. Default NULL. response_table data frame tibble containing eResponse fields needed measure's calculations. Default NULL. erecord_01_col Column name containing unique patient record identifier. incident_date_col Column name containing incident date. Default NULL. patient_DOB_col Column name containing patient's date birth. Default NULL. epatient_15_col Column name patient information (exact purpose unclear). epatient_16_col Column name patient information (exact purpose unclear). eresponse_05_col Column name emergency response codes. eprocedures_01_col Column name procedure times related data. eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column name procedure codes. eprocedures_06_col Column name procedure success codes. eairway_02_col Column name airway procedure data (datetime). Default NULL. eairway_04_col Column name airway procedure data. Default NULL. evitals_01_col Column name vital signs data (datetime). evitals_16_col Column name additional vital signs data. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-18 Calculation — airway_18","text":"data.frame summarizing results two population groups (Adults Peds) following columns: pop: Population type (Adults Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-18 Calculation — airway_18","text":"Nicolas Foss, Ed.D., MS, Samuel Kordik, BBA, BS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-18 Calculation — airway_18","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 23:02:00\",     \"2025-01-05 12:03:00\", \"2025-02-01 19:04:00\", \"2025-01-01 05:05:00\",     \"2025-06-01 13:01:00\", \"2025-01-01 23:02:00\",     \"2025-01-05 12:03:00\", \"2025-02-01 19:04:00\", \"2025-01-01 05:05:00\",     \"2025-06-01 13:06:00\")),     evitals_16 = rep(c(5, 6, 7, 8, 9), 2)    )    # airway table   airway_table <- tibble::tibble(   erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),   eairway_02 = rep(lubridate::as_datetime(c(\"2025-01-01 23:05:00\",     \"2025-01-05 12:02:00\", \"2025-02-01 19:03:00\", \"2025-01-01 05:04:00\",     \"2025-06-01 13:06:00\")), 2),   eairway_04 = rep(4004019, 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2),     eprocedures_06 = rep(9923003, 10)    )  # Run the function # Return 95% confidence intervals using the Wilson method airway_18(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          response_table = response_table,          airway_table = airway_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          eprocedures_06_col = eprocedures_06,          evitals_01_col = evitals_01,          evitals_16_col = evitals_16,          eairway_02_col = eairway_02,          eairway_04_col = eairway_04,          confidence_interval = TRUE          ) #>  #> ── Airway-18 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Airway-18 ── #>  #> Running `airway_18_population()`  [Working on 1 of 13 tasks] ●●●───────────────… #> Running `airway_18_population()`  [Working on 2 of 13 tasks] ●●●●●●────────────… #> Running `airway_18_population()`  [Working on 3 of 13 tasks] ●●●●●●●●──────────… #> Running `airway_18_population()`  [Working on 4 of 13 tasks] ●●●●●●●●●●────────… #> Running `airway_18_population()`  [Working on 5 of 13 tasks] ●●●●●●●●●●●●●─────… #> Running `airway_18_population()`  [Working on 6 of 13 tasks] ●●●●●●●●●●●●●●●───… #> Running `airway_18_population()`  [Working on 7 of 13 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `airway_18_population()`  [Working on 8 of 13 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `airway_18_population()`  [Working on 9 of 13 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `airway_18_population()`  [Working on 10 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_18_population()`  [Working on 11 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_18_population()`  [Working on 12 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_18_population()`  [Working on 13 of 13 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Airway-18 ── #>  #>  #> ✔ Function completed in 0.23s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 2 × 8 #>   measure   pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Airway-18 Adults         2           2     1 100%          0.198        1 #> 2 Airway-18 Peds           3           3     1 100%          0.310        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-18 Populations — airway_18_population","title":"Airway-18 Populations — airway_18_population","text":"function processes analyzes dataset generate populations interest needed perform calculations obtain performance data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-18 Populations — airway_18_population","text":"","code":"airway_18_population(   df = NULL,   patient_scene_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   airway_table = NULL,   response_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col,   eprocedures_06_col,   eairway_02_col = NULL,   eairway_04_col = NULL,   evitals_01_col,   evitals_16_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-18 Populations — airway_18_population","text":"df data frame tibble containing dataset processed. Default NULL. patient_scene_table data frame tibble containing ePatient eScene fields fact table. Default NULL. procedures_table data frame tibble containing eProcedures fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing eVitals fields needed measure's calculations. Default NULL. airway_table data frame tibble containing eAirway fields needed measure's calculations. Default NULL. response_table data frame tibble containing eResponse fields needed measure's calculations. Default NULL. erecord_01_col Column name containing unique patient record identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name patient information (exact purpose unclear). epatient_16_col Column name patient information (exact purpose unclear). eresponse_05_col Column name emergency response codes. eprocedures_01_col Column name procedure times related data. eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column name procedure codes. eprocedures_06_col Column name procedure success codes. eairway_02_col Column name airway procedure data (datetime). Default NULL. eairway_04_col Column name airway procedure data. Default NULL. evitals_01_col Column name vital signs data (datetime). evitals_16_col Column name additional vital signs data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-18 Populations — airway_18_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-18 Populations — airway_18_population","text":"Nicolas Foss, Ed.D., MS Nicolas Foss, Ed.D., MS, Samuel Kordik, BBA, BS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-18 Populations — airway_18_population","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 23:02:00\",     \"2025-01-05 12:03:00\", \"2025-02-01 19:04:00\", \"2025-01-01 05:05:00\",     \"2025-06-01 13:01:00\", \"2025-01-01 23:02:00\",     \"2025-01-05 12:03:00\", \"2025-02-01 19:04:00\", \"2025-01-01 05:05:00\",     \"2025-06-01 13:06:00\")),     evitals_16 = rep(c(5, 6, 7, 8, 9), 2)    )    # airway table   airway_table <- tibble::tibble(   erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),   eairway_02 = rep(lubridate::as_datetime(c(\"2025-01-01 23:05:00\",     \"2025-01-05 12:02:00\", \"2025-02-01 19:03:00\", \"2025-01-01 05:04:00\",     \"2025-06-01 13:06:00\")), 2),   eairway_04 = rep(4004019, 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2),     eprocedures_06 = rep(9923003, 10)    )  # Run the function result <- airway_18_population(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          response_table = response_table,          airway_table = airway_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          eprocedures_06_col = eprocedures_06,          evitals_01_col = evitals_01,          evitals_16_col = evitals_16,          eairway_02_col = eairway_02,          eairway_04_col = eairway_04          ) #> Running `airway_18_population()`  [Working on 1 of 13 tasks] ●●●───────────────… #> Running `airway_18_population()`  [Working on 2 of 13 tasks] ●●●●●●────────────… #> Running `airway_18_population()`  [Working on 3 of 13 tasks] ●●●●●●●●──────────… #> Running `airway_18_population()`  [Working on 4 of 13 tasks] ●●●●●●●●●●────────… #> Running `airway_18_population()`  [Working on 5 of 13 tasks] ●●●●●●●●●●●●●─────… #> Running `airway_18_population()`  [Working on 6 of 13 tasks] ●●●●●●●●●●●●●●●───… #> Running `airway_18_population()`  [Working on 7 of 13 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `airway_18_population()`  [Working on 8 of 13 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `airway_18_population()`  [Working on 9 of 13 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `airway_18_population()`  [Working on 10 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_18_population()`  [Working on 11 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_18_population()`  [Working on 12 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `airway_18_population()`  [Working on 13 of 13 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 12 × 2 #>    filter                                                                  count #>    <chr>                                                                   <dbl> #>  1 Invasive airway procedures                                                  5 #>  2 Successful invasive airway procedures                                       5 #>  3 911 calls                                                                   5 #>  4 Successful invasive airway procedures performed after EMS arrival           5 #>  5 Waveform ETCO2 used                                                         5 #>  6 Airway device placement confirmed after airway procedure                    5 #>  7 Vitals taken after airway procedure where waveform ETCO2 >= 5               5 #>  8 Waveform ETCO2 >= 5                                                         6 #>  9 Successful invasive airway procedures with waveform ETCO2 confirmed po…     5 #> 10 Adults denominator                                                          2 #> 11 Peds denominator                                                            3 #> 12 Total procedures in dataset                                                 5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Asthma-01 Calculation — asthma_01","title":"Asthma-01 Calculation — asthma_01","text":"Calculates NEMSQA Asthma-01 measure. Calculates key statistics related asthma-related incidents EMS dataset, specifically focusing cases 911 called respiratory distress, certain medications administered. function segments data age adult pediatric populations, computing proportion cases received beta-agonist treatment.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asthma-01 Calculation — asthma_01","text":"","code":"asthma_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   emedications_03_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asthma-01 Calculation — asthma_01","text":"df data.frame tibble containing EMS data. Default NULL. patient_scene_table data.frame tibble containing least ePatient eScene fields fact table. Default NULL. response_table data.frame tibble containing least eResponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing least eSituation fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing least eMedications fields needed measure's calculations. Default NULL. erecord_01_col column representing EMS record unique identifier. Default NULL. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minute\"). eresponse_05_col Column contains eResponse.05. esituation_11_col Column contains eSituation.11. esituation_12_col Column contains eSituation.12 values single comma-separated list. emedications_03_col Column contains eMedications.03 values single comma-separated list. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asthma-01 Calculation — asthma_01","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Asthma-01 Calculation — asthma_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Asthma-01 Calculation — asthma_01","text":"","code":"# Synthetic test data test_data <- tibble::tibble(   erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   epatient_15 = c(34, 5, 45, 2, 60),  # Ages   epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),   eresponse_05 = rep(2205001, 5),   esituation_11 = c(\"Respiratory Distress\", \"Respiratory Distress\",   \"Chest Pain\", \"Respiratory Distress\", \"Respiratory Distress\"),   esituation_12 = c(\"Asthma\", \"Asthma\", \"Other condition\", \"Asthma\", \"Asthma\"),   emedications_03 = c(\"Albuterol\", \"Albuterol\", \"Epinephrine\", \"None\",   \"Albuterol\") )  # Run the function # Return 95% confidence intervals using the Wilson method asthma_01(   df = test_data,   erecord_01_col = erecord_01,   epatient_15_col = epatient_15,   epatient_16_col = epatient_16,   eresponse_05_col = eresponse_05,   esituation_11_col = esituation_11,   esituation_12_col = esituation_12,   emedications_03_col = emedications_03,   confidence_interval = TRUE ) #>  #> ── Asthma-01 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Asthma-01 ── #>  #> Running `asthma_01_population()`  [Working on 1 of 10 tasks] ●●●●──────────────… #> Running `asthma_01_population()`  [Working on 2 of 10 tasks] ●●●●●●●───────────… #> Running `asthma_01_population()`  [Working on 3 of 10 tasks] ●●●●●●●●●●────────… #> Running `asthma_01_population()`  [Working on 4 of 10 tasks] ●●●●●●●●●●●●●─────… #> Running `asthma_01_population()`  [Working on 5 of 10 tasks] ●●●●●●●●●●●●●●●●──… #> Running `asthma_01_population()`  [Working on 6 of 10 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `asthma_01_population()`  [Working on 7 of 10 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `asthma_01_population()`  [Working on 8 of 10 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `asthma_01_population()`  [Working on 9 of 10 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `asthma_01_population()`  [Working on 10 of 10 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Asthma-01 ── #>  #>  #> ✔ Function completed in 0.16s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 3 × 8 #>   measure   pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Asthma-01 Adults         2           2  1    100%         0.198     1     #> 2 Asthma-01 Peds           1           1  1    100%         0.0546    1     #> 3 Asthma-01 All            3           4  0.75 75%          0.219     0.987"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Asthma-01 Populations — asthma_01_population","title":"Asthma-01 Populations — asthma_01_population","text":"Filters data target populations Asthma-01, categorizes records identify needed information calculations. Identifies key categories related asthma-related incidents EMS dataset, specifically focusing cases 911 called respiratory distress, certain medications administered. function segments data age adult pediatric populations, computing proportion cases received beta-agonist treatment.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asthma-01 Populations — asthma_01_population","text":"","code":"asthma_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   emedications_03_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asthma-01 Populations — asthma_01_population","text":"df data.frame tibble containing EMS data. Default NULL. patient_scene_table data.frame tibble containing least ePatient eScene fields fact table. Default NULL. response_table data.frame tibble containing least eResponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing least eSituation fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing least eMedications fields needed measure's calculations. Default NULL. erecord_01_col column representing EMS record unique identifier. Default NULL. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minute\"). eresponse_05_col Column contains eResponse.05. esituation_11_col Column contains eSituation.11 provider primary impression data. esituation_12_col Column contains eSituation.12 values (possible single comma-separated list), provider secondary impression data. emedications_03_col Column contains eMedications.03 values single comma-separated list.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asthma-01 Populations — asthma_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Asthma-01 Populations — asthma_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Asthma-01 Populations — asthma_01_population","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning  # patient table patient_table <- tibble::tibble(    erecord_01 = 1:3,   incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\")),   patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-01-01\")),   epatient_15 = c(25, 5, 2),   epatient_16 = c(\"years\", \"years\", \"months\")  )  # response table response_table <- tibble::tibble(    erecord_01 = 1:3,   eresponse_05 = c(\"2205001\", \"2205009\", \"2205003\")  )  # situation table situation_table <- tibble::tibble(    erecord_01 = 1:3,   esituation_11 = c(\"weakness\", \"asthma\", \"bronchospasm\"),   esituation_12 = c(\"asthma\", \"weakness\", \"weakness\") )  # medications table medications_table <- tibble::tibble(    erecord_01 = 1:3,   emedications_03 = c(\"albuterol\", \"levalbuterol\", \"metaproterenol\")  )  # test the success of the function result <- asthma_01_population(patient_scene_table = patient_table,                                response_table = response_table,                                situation_table = situation_table,                                medications_table = medications_table,                                erecord_01_col = erecord_01,                                incident_date_col = incident_date,                                patient_DOB_col = patient_dob,                                epatient_15_col = epatient_15,                                epatient_16_col = epatient_16,                                eresponse_05_col = eresponse_05,                                esituation_11_col = esituation_11,                                esituation_12_col = esituation_12,                                emedications_03_col = emedications_03                                ) #> Running `asthma_01_population()`  [Working on 1 of 10 tasks] ●●●●──────────────… #> Running `asthma_01_population()`  [Working on 2 of 10 tasks] ●●●●●●●───────────… #> Running `asthma_01_population()`  [Working on 3 of 10 tasks] ●●●●●●●●●●────────… #> Running `asthma_01_population()`  [Working on 4 of 10 tasks] ●●●●●●●●●●●●●─────… #> Running `asthma_01_population()`  [Working on 5 of 10 tasks] ●●●●●●●●●●●●●●●●──… #> Running `asthma_01_population()`  [Working on 6 of 10 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `asthma_01_population()`  [Working on 7 of 10 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `asthma_01_population()`  [Working on 8 of 10 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `asthma_01_population()`  [Working on 9 of 10 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `asthma_01_population()`  [Working on 10 of 10 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 7 × 2 #>   filter             count #>   <chr>              <int> #> 1 911 calls              3 #> 2 Asthma cases           2 #> 3 Beta agonist cases     3 #> 4 Adults denominator     1 #> 5 Peds denominator       1 #> 6 Initial population     2 #> 7 Total dataset          3"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypoglycemia-01 — hypoglycemia_01","title":"Hypoglycemia-01 — hypoglycemia_01","text":"hypoglycemia_01 function calculates NEMSQA measure evaluating often hypoglycemic patients altered mental status receive hypoglycemia treatment.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypoglycemia-01 — hypoglycemia_01","text":"","code":"hypoglycemia_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   medications_table = NULL,   procedures_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_18_col,   evitals_23_col,   evitals_26_col,   emedications_03_col,   eprocedures_03_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hypoglycemia-01 — hypoglycemia_01","text":"df data frame tibble containing emergency response records. Default NULL. patient_scene_table data.frame tibble containing least ePatient eScene fields fact table. Default NULL. response_table data.frame tibble containing least eResponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing least eSituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing least eVitals fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing least eMedications fields needed measure's calculations. Default NULL. procedures_table data.frame tibble containing least eProcedures fields needed measure's calculations. Default NULL. erecord_01_col Column representing unique record identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minute\"). eresponse_05_col Column containing response type codes. esituation_11_col Column primary impression fields, containing ICD-10 codes. esituation_12_col Column secondary impression fields, containing ICD-10 codes. evitals_18_col Column blood glucose levels. evitals_23_col Column Glasgow Coma Scale (GCS) scores. evitals_26_col Column AVPU alertness levels. emedications_03_col Column administered medications. eprocedures_03_col Column procedures performed. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hypoglycemia-01 — hypoglycemia_01","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hypoglycemia-01 — hypoglycemia_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hypoglycemia-01 — hypoglycemia_01","text":"","code":"# Synthetic test data test_data <- tibble::tibble(   erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   epatient_15 = c(34, 5, 45, 2, 60),  # Ages   epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),   eresponse_05 = rep(2205001, 5),   esituation_11 = c(rep(\"E13.64\", 3), rep(\"E16.2\", 2)),   esituation_12 = c(rep(\"E13.64\", 2), rep(\"E16.2\", 3)),   emedications_03 = c(372326, 376937,                       377980, 4850,                       4832),   evitals_18 = c(60, 59, 58, 57, 56),   evitals_23 = c(16, 15, 14, 13, 12),   evitals_26 = c(\"Alert\", \"Painful\", \"Verbal\", \"Unresponsive\", \"Alert\"),   eprocedures_03 = rep(\"710925007\", 5) )  # Run the function # Return 95% confidence intervals using the Wilson method hypoglycemia_01(   df = test_data,   erecord_01_col = erecord_01,   epatient_15_col = epatient_15,   epatient_16_col = epatient_16,   eresponse_05_col = eresponse_05,   esituation_11_col = esituation_11,   esituation_12_col = esituation_12,   emedications_03_col = emedications_03,   evitals_18_col = evitals_18,   evitals_23_col = evitals_23,   evitals_26_col = evitals_26,   eprocedures_03_col = eprocedures_03,   confidence_interval = TRUE ) #>  #> ── Hypoglycemia-01 ───────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Hypoglycemia-01 ── #>  #> Running `hypoglycemia_01_population()`  [Working on 1 of 17 tasks] ●●●─────────… #> Running `hypoglycemia_01_population()`  [Working on 2 of 17 tasks] ●●●●●───────… #> Running `hypoglycemia_01_population()`  [Working on 3 of 17 tasks] ●●●●●●──────… #> Running `hypoglycemia_01_population()`  [Working on 4 of 17 tasks] ●●●●●●●●────… #> Running `hypoglycemia_01_population()`  [Working on 5 of 17 tasks] ●●●●●●●●●●──… #> Running `hypoglycemia_01_population()`  [Working on 6 of 17 tasks] ●●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 7 of 17 tasks] ●●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 8 of 17 tasks] ●●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 9 of 17 tasks] ●●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 10 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 11 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 12 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 13 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 14 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 15 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 16 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 17 of 17 tasks] ●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Hypoglycemia-01 ── #>  #>  #> ✔ Function completed in 0.28s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 3 × 8 #>   measure         pop   numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>           <chr>     <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Hypoglycemia-01 Adul…         2           2     1 100%          0.198        1 #> 2 Hypoglycemia-01 Peds          2           2     1 100%          0.198        1 #> 3 Hypoglycemia-01 All           4           4     1 100%          0.396        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypoglycemia-01 Populations — hypoglycemia_01_population","title":"Hypoglycemia-01 Populations — hypoglycemia_01_population","text":"Filters data target populations Hypoglycemia-01, categorizes records identify needed information calculations. Identifies key categories related diabetes/hypoglycemia incidents EMS dataset, specifically focusing cases 911 called diabetes/hypoglycemia distress, certain medications administered, weight taken. function segments data pediatric populations, computing proportion cases documented weight.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypoglycemia-01 Populations — hypoglycemia_01_population","text":"","code":"hypoglycemia_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   medications_table = NULL,   procedures_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_18_col,   evitals_23_col,   evitals_26_col,   emedications_03_col,   eprocedures_03_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hypoglycemia-01 Populations — hypoglycemia_01_population","text":"df data frame tibble containing emergency response records. Default NULL. patient_scene_table data.frame tibble containing least epatient escene fields fact table. Default NULL. response_table data.frame tibble containing least eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing least esituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing least evitals fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing least emedications fields needed measure's calculations. Default NULL. procedures_table data.frame tibble containing least eprocedures fields needed measure's calculations. Default NULL. erecord_01_col Column representing unique record identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minute\"). eresponse_05_col Column containing response type codes. esituation_11_col Column primary impression fields, containing ICD-10 codes. esituation_12_col Column secondary impression fields, containing ICD-10 codes. evitals_18_col Column blood glucose levels. evitals_23_col Column Glasgow Coma Scale (GCS) scores. evitals_26_col Column AVPU alertness levels. emedications_03_col Column administered medications. eprocedures_03_col Column procedures performed.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hypoglycemia-01 Populations — hypoglycemia_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hypoglycemia-01 Populations — hypoglycemia_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hypoglycemia-01 Populations — hypoglycemia_01_population","text":"","code":"# create tables to test correct functioning  # patient table patient_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",   \"2025-01-01\", \"2025-06-01\")),   patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",   \"2023-01-01\", \"1970-06-01\")),   epatient_15 = c(25, 5, 2, 2, 55),  # Ages   epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")  )  # response table response_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   eresponse_05 = rep(2205001, 5)  )  # situation table situation_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   esituation_11 = c(rep(\"E13.64\", 3), rep(\"E16.2\", 2)),   esituation_12 = c(rep(\"E13.64\", 2), rep(\"E16.2\", 3)) )  # medications table medications_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   emedications_03 = c(372326, 376937, 377980, 4850, 4832),  )  # vitals table vitals_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   evitals_18 = c(60, 59, 58, 57, 56),   evitals_23 = c(16, 15, 14, 13, 12),   evitals_26 = c(\"Alert\", \"Painful\", \"Verbal\", \"Unresponsive\", \"Alert\")  )  # procedures table procedures_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   eprocedures_03 = rep(\"710925007\", 5)  )  # test the success of the function result <- hypoglycemia_01_population(patient_scene_table = patient_table,                             response_table = response_table,                             situation_table = situation_table,                             medications_table = medications_table,                             vitals_table = vitals_table,                             procedures_table = procedures_table,                             erecord_01_col = erecord_01,                             incident_date_col = incident_date,                             patient_DOB_col = patient_dob,                             epatient_15_col = epatient_15,                             epatient_16_col = epatient_16,                             eresponse_05_col = eresponse_05,                             esituation_11_col = esituation_11,                             esituation_12_col = esituation_12,                             emedications_03_col = emedications_03,                             evitals_18_col = evitals_18,                             evitals_23_col = evitals_23,                             evitals_26_col = evitals_26,                             eprocedures_03_col = eprocedures_03                             ) #> Running `hypoglycemia_01_population()`  [Working on 1 of 17 tasks] ●●●─────────… #> Running `hypoglycemia_01_population()`  [Working on 2 of 17 tasks] ●●●●●───────… #> Running `hypoglycemia_01_population()`  [Working on 3 of 17 tasks] ●●●●●●──────… #> Running `hypoglycemia_01_population()`  [Working on 4 of 17 tasks] ●●●●●●●●────… #> Running `hypoglycemia_01_population()`  [Working on 5 of 17 tasks] ●●●●●●●●●●──… #> Running `hypoglycemia_01_population()`  [Working on 6 of 17 tasks] ●●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 7 of 17 tasks] ●●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 8 of 17 tasks] ●●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 9 of 17 tasks] ●●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 10 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 11 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 12 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 13 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 14 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 15 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 16 of 17 tasks] ●●●●●●●●●●●… #> Running `hypoglycemia_01_population()`  [Working on 17 of 17 tasks] ●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 7 × 2 #>   filter                                                              count #>   <chr>                                                               <int> #> 1 Diabetes/Hypoglycemia and Verbal, Painful, Unresponsive or GCS < 15     4 #> 2 Altered mental status and low blood glucose                             0 #> 3 911 calls                                                               5 #> 4 Adults denominator                                                      1 #> 5 Peds denominator                                                        3 #> 6 Initial population                                                      4 #> 7 Total dataset                                                           5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqa_binomial_confint.html","id":null,"dir":"Reference","previous_headings":"","what":"Wilson and Clopper-Pearson Confidence Intervals for Binomial Proportions — nemsqa_binomial_confint","title":"Wilson and Clopper-Pearson Confidence Intervals for Binomial Proportions — nemsqa_binomial_confint","text":"Computes confidence intervals binomial proportions using either Wilson Clopper-Pearson method. function supports vectorized operations allows optional correction continuity. Wilson interval computed using stats::prop.test(), Clopper-Pearson interval computed using stats::binom.test().","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqa_binomial_confint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wilson and Clopper-Pearson Confidence Intervals for Binomial Proportions — nemsqa_binomial_confint","text":"","code":"nemsqa_binomial_confint(   data = NULL,   x,   n,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqa_binomial_confint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wilson and Clopper-Pearson Confidence Intervals for Binomial Proportions — nemsqa_binomial_confint","text":"data optional tibble data.frame containing variables x n. provided, x n column names. x Numeric vector column name (data provided) representing number successes. n Numeric vector column name (data provided) representing total number trials. method Character string specifying confidence interval method. Must either \"wilson\" (default) \"clopper-pearson\". conf.level Numeric value 0 1 indicating confidence level. Defaults 0.95 (95% confidence interval). correct Logical, indicating whether apply continuity correction Wilson intervals. Defaults TRUE.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqa_binomial_confint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wilson and Clopper-Pearson Confidence Intervals for Binomial Proportions — nemsqa_binomial_confint","text":"tibble containing estimated proportion (prop), lower confidence interval (lower_ci), upper confidence interval (upper_ci), formatted proportion label (prop_label). data provided, columns appended data via dplyr::bind_cols().","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqa_binomial_confint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wilson and Clopper-Pearson Confidence Intervals for Binomial Proportions — nemsqa_binomial_confint","text":"Wilson confidence interval calculated using stats::prop.test(), provides improved approximation binomial proportion confidence interval avoiding instability Wald interval (Wilson, 1927). Clopper-Pearson interval, computed using stats::binom.test(), exact method based cumulative probabilities binomial distribution (Clopper & Pearson, 1934). use match.arg() within nemsqar::nemsqa_binomial_confint() allows users specify method using partial matching, meaning can enter just \"w\" instead \"wilson\" \"c\" instead \"clopper-pearson\".","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqa_binomial_confint.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wilson and Clopper-Pearson Confidence Intervals for Binomial Proportions — nemsqa_binomial_confint","text":"Clopper, C. J. & Pearson, E. S. (1934). use confidence fiducial limits illustrated case binomial. Biometrika, 26, 404–413. doi:10.2307/2331986. Wilson, E.B. (1927). Probable inference, law succession, statistical inference. Journal American Statistical Association, 22, 209–212. doi:10.2307/2276774.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqa_binomial_confint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wilson and Clopper-Pearson Confidence Intervals for Binomial Proportions — nemsqa_binomial_confint","text":"","code":"# Example without a data frame nemsqa_binomial_confint(data = NULL,                         x = c(5, 10, 20),                         n = c(50, 100, 200),                         method = \"wilson\"                         ) #> # A tibble: 3 × 4 #>    prop prop_label lower_ci upper_ci #>   <dbl> <chr>         <dbl>    <dbl> #> 1   0.1 10%          0.0374    0.226 #> 2   0.1 10%          0.0516    0.180 #> 3   0.1 10%          0.0637    0.152  # Example with a data.frame data <- data.frame(successes = c(5, 10, 20), trials = c(50, 100, 200)) nemsqa_binomial_confint(data,                         x = successes,                         n = trials,                         method = \"clopper-pearson\"                         ) #>   successes trials prop prop_label   lower_ci  upper_ci #> 1         5     50  0.1        10% 0.03327509 0.2181354 #> 2        10    100  0.1        10% 0.04900469 0.1762226 #> 3        20    200  0.1        10% 0.06215937 0.1502128"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"nemsqar: National Emergency Medical Service Quality Alliance Measure Calculations — nemsqar-package","title":"nemsqar: National Emergency Medical Service Quality Alliance Measure Calculations — nemsqar-package","text":"Designed automate calculation Emergency Medical Service (EMS) quality metrics, 'nemsqar' implements measures defined National EMS Quality Alliance (NEMSQA). providing reliable, evidence-based quality assessments, package supports EMS agencies, healthcare providers, researchers evaluating improving patient outcomes. Users can find details approved NEMSQA measures https://www.nemsqa.org/measures. Full technical specifications, including documentation pseudocode used develop 'nemsqar', available NEMSQA website creating user profile https://www.nemsqa.org.","code":""},{"path":[]},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nemsqar: National Emergency Medical Service Quality Alliance Measure Calculations — nemsqar-package","text":"Maintainer: Nicolas Foss nicolas.foss@hhs.iowa.gov Authors: Samuel Kordik samuel.kordik@utsouthwestern.edu (ORCID) contributors: Alyssa Green awhim@nemsqa.org [contributor] Iowa Department Health Human Services [copyright holder]","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_airway_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eAirway Fields in National EMS Information System — nemsqar_airway_table","title":"Synthetic Test Data for eAirway Fields in National EMS Information System — nemsqar_airway_table","text":"dataset provides completely synthetic test data airway-related fields National EMS Information System (NEMSIS). specific single function can used test multiple functions nemsqar package. Users encouraged experiment dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_airway_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eAirway Fields in National EMS Information System — nemsqar_airway_table","text":"","code":"data(nemsqar_airway_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_airway_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eAirway Fields in National EMS Information System — nemsqar_airway_table","text":"data frame 10,000 rows 8 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Airway Indications Invasive Management List (eAirway.01) List indications invasive airway management (character). Airway Device Placement Confirmation Date Time (eAirway.02) Timestamp airway device placement confirmation (datetime). Airway Device Confirmed (eAirway.03) Type airway device confirmed (character). Patient Airway Device Confirmed List (eAirway.03) List airway devices confirmed (character). Airway Device Placement Confirmed Method (eAirway.04) Primary method used confirm airway device placement (character). Airway Device Placement Confirmed Method List (eAirway.04) List methods used confirm airway device placement (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_airway_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eAirway Fields in National EMS Information System — nemsqar_airway_table","text":"","code":"data(nemsqar_airway_table) head(nemsqar_airway_table) #> # A tibble: 6 × 8 #>   Incident Patient Care Report Number -…¹ `Incident Date` Airway Indications F…² #>   <chr>                                   <date>          <chr>                  #> 1 NyXFBlJfnm-8333586176                   2023-05-27      Adequate Airway Refle… #> 2 XTLCINMLTP-8616021114                   2023-10-14      Apnea or Agonal Respi… #> 3 HfYjlIEQSk-9529756610                   2023-07-07      Adequate Airway Refle… #> 4 MOwVDhriyC-5915613206                   2023-05-13      Adequate Airway Refle… #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      Adequate Airway Refle… #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      Adequate Airway Refle… #> # ℹ abbreviated names: #> #   ¹​`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ²​`Airway Indications For Invasive Management List (eAirway.01)` #> # ℹ 5 more variables: #> #   `Airway Device Placement Confirmation Date Time (eAirway.02)` <dttm>, #> #   `Airway Device Being Confirmed (eAirway.03)` <chr>, #> #   `Patient Airway Device Being Confirmed List (eAirway.03)` <chr>, …"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_arrest_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eArrest Fields in National EMS Information System — nemsqar_arrest_table","title":"Synthetic Test Data for eArrest Fields in National EMS Information System — nemsqar_arrest_table","text":"dataset provides completely synthetic test data cardiac arrest-related fields National EMS Information System (NEMSIS). specific single function can used test multiple functions nemsqar package. Users encouraged experiment dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_arrest_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eArrest Fields in National EMS Information System — nemsqar_arrest_table","text":"","code":"data(nemsqar_arrest_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_arrest_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eArrest Fields in National EMS Information System — nemsqar_arrest_table","text":"data frame 10,000 rows 28 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Cardiac Arrest EMS Event Code (eArrest.01) Indicates whether cardiac arrest occurred EMS event (character). Cardiac Arrest Etiology Code (eArrest.02) Suspected cause cardiac arrest (character). Cardiac Arrest Indications Resuscitation Attempted EMS (eArrest.03) Whether resuscitation attempted EMS (character). Cardiac Arrest Indications Resuscitation Attempted EMS Code List (eArrest.03) Detailed reasons resuscitation decisions (character). Cardiac Arrest Witnessed (eArrest.04) witnessed cardiac arrest (character). Cardiac Arrest Witnessed List (eArrest.04) List witnesses cardiac arrest (character). Cardiac Arrest CPR Provided Prior EMS Arrival (3.4=eArrest.05/3.5=itArrest.105) Whether CPR provided EMS arrival (character). Cardiac Arrest Provided CPR Prior EMS (3.4=eArrest.06/3.5=itArrest.106) performed CPR EMS arrival (character). Cardiac Arrest Provided CPR Prior EMS Arrival Code List (3.4=eArrest.06/3.5=itArrest.106) List responders provided CPR EMS arrival (character). Cardiac Arrest AED Use Prior EMS Arrival (eArrest.07) Whether AED used EMS arrival (character). Cardiac Arrest Used AED Prior EMS (3.4=eArrest.08/3.5=itArrest.108) used AED EMS arrival (character). Cardiac Arrest Used AED Prior EMS Arrival Code List (3.4=eArrest.08/3.5=itArrest.108) List responders used AED EMS arrival (character). Cardiac Arrest Type CPR Provided List (eArrest.09) List types CPR performed (character). Cardiac Arrest First Monitored Arrest Rhythm Patient (eArrest.11) First recorded cardiac rhythm arrest (character). Cardiac Arrest First Monitored Arrest Rhythm Patient Code (eArrest.11) Coded representation first monitored cardiac rhythm (character). Cardiac Arrest Return Spontaneous Circulation (eArrest.12) Whether patient regained spontaneous circulation (character). Cardiac Arrest Return Spontaneous Circulation Code List (eArrest.12) List codes indicating ROSC status (character). Cardiac Arrest Date Time (eArrest.14) Timestamp cardiac arrest occurrence (datetime). Cardiac Arrest Resuscitation Discontinued Date Time (eArrest.15) Timestamp resuscitation discontinuation (datetime). Cardiac Arrest Reason CPR Resuscitation Discontinued (eArrest.16) Reason discontinuing resuscitation (character). Cardiac Arrest Rhythm Arrival Destination List (eArrest.17) Recorded cardiac rhythm upon arrival destination (character). Cardiac Arrest Patient Outcome End EMS Event (eArrest.18) Patient's condition end EMS event (character). Cardiac Arrest Initial CPR Date Time (eArrest.19) Timestamp initial CPR administration (datetime). Cardiac Arrest Initiated CPR Code (3.4=itArrest.008/3.5=eArrest.20) initiated CPR (character). Cardiac First Applied AED (3.4=itArrest.015/3.5=eArrest.21) first applied AED (character). Cardiac First Defibrillated Patient (3.4=itArrest.013/3.5=eArrest.22) performed first defibrillation (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_arrest_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eArrest Fields in National EMS Information System — nemsqar_arrest_table","text":"","code":"data(nemsqar_arrest_table) head(nemsqar_arrest_table) #> # A tibble: 6 × 28 #>   Incident Patient Care Report Number -…¹ `Incident Date` Cardiac Arrest Durin…² #>   <chr>                                   <date>          <chr>                  #> 1 NyXFBlJfnm-8333586176                   2023-05-27      No (3001001)           #> 2 XTLCINMLTP-8616021114                   2023-10-14      Yes, After EMS Arriva… #> 3 HfYjlIEQSk-9529756610                   2023-07-07      No (3001001)           #> 4 MOwVDhriyC-5915613206                   2023-05-13      Yes, Prior to EMS Arr… #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      No (3001001)           #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      Not Applicable (77010… #> # ℹ abbreviated names: #> #   ¹​`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ²​`Cardiac Arrest During EMS Event With Code (eArrest.01)` #> # ℹ 25 more variables: `Cardiac Arrest Etiology With Code (eArrest.02)` <chr>, #> #   `Cardiac Arrest Indications Resuscitation Attempted By EMS (eArrest.03)` <chr>, #> #   `Cardiac Arrest Indications Resuscitation Attempted By EMS With Code List (eArrest.03)` <chr>, #> #   `Cardiac Arrest Witnessed By (eArrest.04)` <chr>, …"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_disposition_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eDisposition Fields in National EMS Information System — nemsqar_disposition_table","title":"Synthetic Test Data for eDisposition Fields in National EMS Information System — nemsqar_disposition_table","text":"dataset provides completely synthetic test data evaluating disposition-related functions nemsqar package. includes key variables related patient disposition, transport mode, hospital capabilities, team pre-arrival alerts. dataset intended assist users testing expected input structure disposition-related measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_disposition_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eDisposition Fields in National EMS Information System — nemsqar_disposition_table","text":"","code":"data(nemsqar_disposition_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_disposition_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eDisposition Fields in National EMS Information System — nemsqar_disposition_table","text":"data frame 10,000 rows 13 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Disposition Position Patient Transport List (eDisposition.14) Position patient transport (character). Disposition Additional Transport Mode Descriptor (eDisposition.18) Additional transport mode details (character). Disposition Additional Transport Mode Descriptor List (eDisposition.18) List additional transport mode descriptors (character). Hospital Capability (3.4=itDisposition.105/3.5=eDisposition.23) Primary hospital capability associated incident (character). Hospital Capability List (3.4=itDisposition.105/3.5=eDisposition.23) List hospital capabilities destination facility (character). Disposition Team Pre Arrival Alert (eDisposition.24) Indicates whether pre-arrival alert triggered team (character). Disposition Destination Team Pre-arrival Alert Activation (eDisposition.24) Indicates specific type pre-arrival alert activated (character). Destination Trauma General Team Pre-arrival Activation (eDisposition.24) Indicates whether general trauma team activated pre-arrival (logical). Patient Evaluation/Care (3.4=itDisposition.100/3.5=eDisposition.28) Evaluation care provided patient (character). Transport Disposition (3.4=itDisposition.102/3.5=eDisposition.30) Final transport disposition patient (character). Disposition Incident Patient Disposition Code (3.4=eDisposition.12/3.5=itDisposition.112) Final disposition patient, including standardized codes (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_disposition_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic Test Data for eDisposition Fields in National EMS Information System — nemsqar_disposition_table","text":"Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_disposition_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eDisposition Fields in National EMS Information System — nemsqar_disposition_table","text":"","code":"data(nemsqar_disposition_table) head(nemsqar_disposition_table) #> # A tibble: 6 × 13 #>   Incident Patient Care Report Number -…¹ `Incident Date` Disposition Position…² #>   <chr>                                   <date>          <chr>                  #> 1 NyXFBlJfnm-8333586176                   2023-05-27      Fowlers (Semi-Upright… #> 2 XTLCINMLTP-8616021114                   2023-10-14      Fowlers (Semi-Upright… #> 3 HfYjlIEQSk-9529756610                   2023-07-07      Prone,Sitting          #> 4 MOwVDhriyC-5915613206                   2023-05-13      Semi-Fowlers,Trendele… #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      Lateral Left,Semi-Fow… #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      Fowlers (Semi-Upright… #> # ℹ abbreviated names: #> #   ¹​`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ²​`Disposition Position Of Patient During Transport List (eDisposition.14)` #> # ℹ 10 more variables: #> #   `Disposition Additional Transport Mode Descriptor (eDisposition.18)` <chr>, #> #   `Disposition Additional Transport Mode Descriptor List (eDisposition.18)` <chr>, #> #   `Hospital Capability (3.4=itDisposition.105/3.5=eDisposition.23)` <chr>, …"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_exam_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eExam Fields in National EMS Information System — nemsqar_exam_table","title":"Synthetic Test Data for eExam Fields in National EMS Information System — nemsqar_exam_table","text":"dataset provides completely synthetic test data evaluating patient examination-related functions nemsqar package. includes key variables related patient weight, assessment findings, lung chest examinations, neurological assessments. dataset intended assist users testing expected input structure examination-related measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_exam_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eExam Fields in National EMS Information System — nemsqar_exam_table","text":"","code":"data(nemsqar_exam_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_exam_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eExam Fields in National EMS Information System — nemsqar_exam_table","text":"data frame 10,000 rows 11 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Patient Weight Kilograms (eExam.01) Patient's weight kilograms (numeric). Patient Length Based Color (eExam.02) Color coding based patient length pediatric patients (character). Patient Assessment Date Time (eExam.03) Timestamp patient assessment (datetime). Patient Extremity Assessment Findings List (eExam.16) List findings related extremity assessment (character). Patient Neurological Assessment Findings List (eExam.20) List neurological assessment findings (character). Patient Lung Assessment Finding Location (3.4=itExam.099/3.5=eExam.22) Location lung assessment findings (character). Patient Lung Assessment Findings List (3.4=itExam.100/3.5=eExam.23) List lung assessment findings (character). Patient ChestExclusive Assessment Finding Location (3.4=itExam.101/3.5=eExam.24) Location chest-exclusive assessment findings (character). Patient ChestExclusive Assessment Findings List (3.4=itExam.102/3.5=eExam.25) List chest-exclusive assessment findings (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_exam_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic Test Data for eExam Fields in National EMS Information System — nemsqar_exam_table","text":"Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_exam_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eExam Fields in National EMS Information System — nemsqar_exam_table","text":"","code":"data(nemsqar_exam_table) head(nemsqar_exam_table) #> # A tibble: 6 × 11 #>   Incident Patient Care Report Number -…¹ `Incident Date` Patient Weight In Ki…² #>   <chr>                                   <date>                           <dbl> #> 1 NyXFBlJfnm-8333586176                   2023-05-27                       143.  #> 2 XTLCINMLTP-8616021114                   2023-10-14                       131.  #> 3 HfYjlIEQSk-9529756610                   2023-07-07                         8.3 #> 4 MOwVDhriyC-5915613206                   2023-05-13                       121   #> 5 ZCGOtLEPKw-7820135532                   2023-11-24                        79.9 #> 6 fEMvUCQCRQ-9052388486                   2023-01-12                        80.5 #> # ℹ abbreviated names: #> #   ¹​`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ²​`Patient Weight In Kilograms (eExam.01)` #> # ℹ 8 more variables: `Patient Length Based Color (eExam.02)` <chr>, #> #   `Patient Assessment Date Time (eExam.03)` <dttm>, #> #   `Patient Extremity Assessment Findings List (eExam.16)` <chr>, #> #   `Patient Neurological Assessment Findings List (eExam.20)` <chr>, …"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_injury_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eInjury Fields in National EMS Information System — nemsqar_injury_table","title":"Synthetic Test Data for eInjury Fields in National EMS Information System — nemsqar_injury_table","text":"dataset provides completely synthetic test data evaluating injury-related functions nemsqar package. includes key variables related cause injury, trauma triage criteria, vehicular risk factors, height falls. dataset intended assist users testing expected input structure injury-related measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_injury_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eInjury Fields in National EMS Information System — nemsqar_injury_table","text":"","code":"data(nemsqar_injury_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_injury_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eInjury Fields in National EMS Information System — nemsqar_injury_table","text":"data frame 10,000 rows 8 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Injury Cause Injury (eInjury.01) General description cause injury (character). Injury Cause Injury Description Code List (eInjury.01) Detailed description coding injury causes (character). Injury Trauma Center/Triage Criteria (Steps 1 2) List (eInjury.03) List trauma triage criteria met Steps 1 2 (character). Injury Vehicular Pedestrian Injury Risk Factor/Triage Criteria (Steps 3 4) (eInjury.04) Primary vehicular risk factors injury (character). Injury Vehicular Pedestrian Injury Risk Factor/Triage Criteria (Steps 3 4) List (eInjury.04) Detailed list vehicular pedestrian injury risk factors (character). Injury Height Fall Feet (eInjury.09) Height fall feet applicable (numeric).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_injury_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic Test Data for eInjury Fields in National EMS Information System — nemsqar_injury_table","text":"Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_injury_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eInjury Fields in National EMS Information System — nemsqar_injury_table","text":"","code":"data(nemsqar_injury_table) head(nemsqar_injury_table) #> # A tibble: 6 × 8 #>   Incident Patient Care Report Number -…¹ `Incident Date` Injury Cause of Inju…² #>   <chr>                                   <date>          <chr>                  #> 1 NyXFBlJfnm-8333586176                   2023-05-27      Other and unspecified… #> 2 XTLCINMLTP-8616021114                   2023-10-14      Stabbed/Cut by sharp … #> 3 HfYjlIEQSk-9529756610                   2023-07-07      Electrocution from el… #> 4 MOwVDhriyC-5915613206                   2023-05-13      Motorcycle driver inj… #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      Parachutist accident   #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      Fall from other furni… #> # ℹ abbreviated names: #> #   ¹​`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ²​`Injury Cause of Injury (eInjury.01)` #> # ℹ 5 more variables: #> #   `Injury Cause Of Injury Description And Code List (eInjury.01)` <chr>, #> #   `Injury Trauma Center/Triage Criteria (Steps 1 and 2) List (eInjury.03)` <chr>, #> #   `Injury Vehicular Pedestrian Or Other Injury Risk Factor/Triage Criteria (Steps 3 and 4) (eInjury.04)` <chr>, …"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_medications_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eMedications Fields in National EMS Information System — nemsqar_medications_table","title":"Synthetic Test Data for eMedications Fields in National EMS Information System — nemsqar_medications_table","text":"dataset provides completely synthetic test data evaluating medication-related functions nemsqar package. includes key variables related medication administration, timing, route, standardized coding. dataset designed assist users testing expected input structure medication-related measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_medications_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eMedications Fields in National EMS Information System — nemsqar_medications_table","text":"","code":"data(nemsqar_medications_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_medications_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eMedications Fields in National EMS Information System — nemsqar_medications_table","text":"data frame 10,000 rows 8 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Medication Administered Date Time (eMedications.01) Date time medication administered (datetime). Medication Administered Prior EMS Unit Care (eMedications.02) Indicator whether medication administered EMS arrival (character). Medication Given Administered Description RXCUI Code (eMedications.03) Name medication administered associated RXCUI code (character). Patient Medication Given Administered Description RXCUI Codes List (eMedications.03) List medications administered RXCUI codes (character). Medication Administered Route (eMedications.04) Method medication administered (character). Medication Administered Route Code (eMedications.04) Standardized code medication administration route (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_medications_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic Test Data for eMedications Fields in National EMS Information System — nemsqar_medications_table","text":"Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_medications_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eMedications Fields in National EMS Information System — nemsqar_medications_table","text":"","code":"data(nemsqar_medications_table) head(nemsqar_medications_table) #> # A tibble: 6 × 8 #>   Incident Patient Care Report Number -…¹ `Incident Date` Medication Administe…² #>   <chr>                                   <date>          <dttm>                 #> 1 NyXFBlJfnm-8333586176                   2023-05-27      2023-05-27 03:55:00    #> 2 XTLCINMLTP-8616021114                   2023-10-14      2023-10-14 08:58:00    #> 3 HfYjlIEQSk-9529756610                   2023-07-07      2023-07-07 10:22:00    #> 4 MOwVDhriyC-5915613206                   2023-05-13      2023-05-13 04:55:00    #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      2023-11-24 12:08:00    #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      2023-01-12 06:14:00    #> # ℹ abbreviated names: #> #   ¹​`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ²​`Medication Administered Date Time (eMedications.01)` #> # ℹ 5 more variables: #> #   `Medication Administered Prior To EMS Unit Care (eMedications.02)` <chr>, #> #   `Medication Given or Administered Description And RXCUI Code (eMedications.03)` <chr>, #> #   `Patient Medication Given or Administered Description And RXCUI Codes List (eMedications.03)` <chr>, …"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_patient_scene_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_patient_scene_table","title":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_patient_scene_table","text":"dataset provides synthetic patient information ePatient section National Emergency Medical Services Information System (NEMSIS). contains example patient demographics scene-related details can used testing various functions within nemsqar package. Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_patient_scene_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_patient_scene_table","text":"","code":"nemsqar_patient_scene_table"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_patient_scene_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_patient_scene_table","text":"tibble 10,000 rows 6 variables: Incident Patient Care Report Number - PCR (eRecord.01) (chr) Unique identifier patient care report. Incident Date (date) date EMS incident. Patient Age (ePatient.15) (dbl) Patient's age time incident. Patient Age Units (ePatient.16) (chr) units measurement patient age (e.g., Years, Months, Hours, etc.). Patient Date Birth (ePatient.17) (date) patient's date birth. Patient Gender (ePatient.13) (chr) patient's gender recorded EMS report.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_patient_scene_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_patient_scene_table","text":"data table entirely synthetic intended solely testing purposes. data represent real patients, incidents, outcomes used research operational decision-making.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_patient_scene_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_patient_scene_table","text":"","code":"data(nemsqar_patient_scene_table) dplyr::glimpse(nemsqar_patient_scene_table) #> Rows: 10,000 #> Columns: 6 #> $ `Incident Patient Care Report Number - PCR (eRecord.01)` <chr> \"NyXFBlJfnm-8… #> $ `Incident Date`                                          <date> 2023-12-20, … #> $ `Patient Age (ePatient.15)`                              <dbl> 98, 75, 24, 1… #> $ `Patient Age Units (ePatient.16)`                        <chr> \"Minutes\", \"D… #> $ `Patient Date Of Birth (ePatient.17)`                    <date> 2023-12-19, … #> $ `Patient Gender (ePatient.13)`                           <chr> \"Male to Fema…"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_procedures_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_procedures_table","title":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_procedures_table","text":"dataset provides synthetic procedure-related information eProcedures section National Emergency Medical Services Information System (NEMSIS). contains example procedure details can used testing various functions within nemsqar package. Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_procedures_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_procedures_table","text":"","code":"nemsqar_procedures_table"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_procedures_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_procedures_table","text":"tibble 10,000 rows 8 variables: Incident Patient Care Report Number - PCR (eRecord.01) (chr) Unique identifier patient care report. Incident Date (date) date EMS incident. Procedure Performed Date Time (eProcedures.01) (dttm) date time procedure performed. Procedure Performed Prior EMS Care (eProcedures.02) (chr) Indicates whether procedure performed EMS arrival. Procedure Performed Description Code (eProcedures.03) (chr) Description code performed procedure. Patient Attempted Procedure Descriptions Codes List (eProcedures.03) (chr) List attempted procedures descriptions codes. Procedure Number Attempts (eProcedures.05) (dbl) Number attempts made perform procedure. Procedure Successful (eProcedures.06) (chr) Indicates whether procedure successful.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_procedures_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_procedures_table","text":"data table entirely synthetic intended solely testing purposes. data represent real patients, incidents, outcomes used research operational decision-making.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_procedures_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_procedures_table","text":"","code":"data(nemsqar_procedures_table) dplyr::glimpse(nemsqar_procedures_table) #> Rows: 10,000 #> Columns: 8 #> $ `Incident Patient Care Report Number - PCR (eRecord.01)`                   <chr> … #> $ `Incident Date`                                                            <date> … #> $ `Procedure Performed Date Time (eProcedures.01)`                           <dttm> … #> $ `Procedure Performed Prior To EMS Care (eProcedures.02)`                   <chr> … #> $ `Procedure Performed Description And Code (eProcedures.03)`                <chr> … #> $ `Patient Attempted Procedure Descriptions And Codes List (eProcedures.03)` <chr> … #> $ `Procedure Number Of Attempts (eProcedures.05)`                            <dbl> … #> $ `Procedure Successful (eProcedures.06)`                                    <chr> …"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_response_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic eResponse Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_response_table","title":"Synthetic eResponse Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_response_table","text":"synthetic dataset representing eResponse section National Emergency Medical Services Information System (NEMSIS). dataset intended testing purposes contain real patient incident data. Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_response_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic eResponse Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_response_table","text":"","code":"data(nemsqar_response_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_response_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic eResponse Data from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_response_table","text":"tibble 10,000 rows 5 variables: Incident Patient Care Report Number - PCR (eRecord.01) Character. Unique identifier patient care report. Incident Date Date. date EMS incident. Response Type Service Requested Code (eResponse.05) Character. type service requested, including coded value. Response Type Scene Delay List (eResponse.10) Character. list delay types encountered scene. Response Additional Response Mode Descriptors List (eResponse.24) Character. list additional response mode descriptors.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_situation_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eSituation Fields in National EMS Information System — nemsqar_situation_table","title":"Synthetic Test Data for eSituation Fields in National EMS Information System — nemsqar_situation_table","text":"dataset provides completely synthetic test data evaluating situation-related functions nemsqar package. includes variables related patient complaints, symptoms, injury status, provider impressions. dataset designed assist users testing expected input structure situation-related measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_situation_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eSituation Fields in National EMS Information System — nemsqar_situation_table","text":"","code":"data(nemsqar_situation_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_situation_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eSituation Fields in National EMS Information System — nemsqar_situation_table","text":"data frame 10,000 rows 18 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Situation Symptom Onset Date Time (eSituation.01) Date time symptoms began (datetime). Situation Possible Injury Code (eSituation.02) Indicates whether injury possible, including coded response (character). Situation Complaint Type (eSituation.03) Classification patient's complaint (character). Situation Complaint Statement (eSituation.04) Primary complaint reported patient (character). Situation Primary Complaint Statement List (eSituation.04) List primary complaints (character). Situation Complaint Duration (eSituation.05) Duration complaint (numeric). Situation Complaint Duration Time Units (eSituation.06) Units time associated complaint duration (character). Situation Chief Complaint Anatomic Location (eSituation.07) Anatomic location primary complaint (character). Situation Chief Complaint Organ System (eSituation.08) Organ system affected chief complaint (character). Situation Primary Symptom (eSituation.09) Primary symptom reported patient, including ICD code (character). Situation Associated Symptom Description (eSituation.10) Description additional symptoms (character). Situation Associated Symptom ICD Code (eSituation.10) ICD code associated symptoms (character). Situation Associated Symptoms List (eSituation.10) List additional symptoms reported (character). Situation Provider Primary Impression Code Description (eSituation.11) Primary impression provider, including ICD code (character). Situation Provider Secondary Impression Description Code (eSituation.12) Secondary provider impression, including ICD code (character). Situation Provider Secondary Impression Description Code List (eSituation.12) List secondary provider impressions (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_situation_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic Test Data for eSituation Fields in National EMS Information System — nemsqar_situation_table","text":"Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_situation_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eSituation Fields in National EMS Information System — nemsqar_situation_table","text":"","code":"data(nemsqar_situation_table) head(nemsqar_situation_table) #> # A tibble: 6 × 18 #>   Incident Patient Care Report Number -…¹ `Incident Date` Situation Symptom On…² #>   <chr>                                   <date>          <dttm>                 #> 1 NyXFBlJfnm-8333586176                   2023-05-27      1720-05-24 03:52:00    #> 2 XTLCINMLTP-8616021114                   2023-10-14      2023-08-12 03:30:00    #> 3 HfYjlIEQSk-9529756610                   2023-07-07      2023-07-06 02:00:51    #> 4 MOwVDhriyC-5915613206                   2023-05-13      1953-05-12 05:28:00    #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      2023-09-20 06:56:00    #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      2020-08-12 08:51:28    #> # ℹ abbreviated names: #> #   ¹​`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ²​`Situation Symptom Onset Date Time (eSituation.01)` #> # ℹ 15 more variables: #> #   `Situation Possible Injury With Code (eSituation.02)` <chr>, #> #   `Situation Complaint Type (eSituation.03)` <chr>, #> #   `Situation Complaint Statement (eSituation.04)` <chr>, …"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_vitals_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_vitals_table","title":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_vitals_table","text":"dataset contains synthetic data eVitals section National Emergency Medical Services Information System (NEMSIS). designed testing functions within nemsqar package. data structure follows expected format eVitals fields produce meaningful clinical results.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_vitals_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_vitals_table","text":"","code":"nemsqar_vitals_table"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_vitals_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_vitals_table","text":"tibble 10,000 rows 19 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique incident identifier (character). Incident Date Date EMS incident (Date). Vitals Signs Taken Date Time (eVitals.01) Timestamp vital signs measurement (Datetime). Vitals ECG Type (eVitals.04) ECG type recorded (character). Vitals Systolic Blood Pressure SBP (eVitals.06) Systolic blood pressure (numeric). Vitals Diastolic Blood Pressure DBP (eVitals.07) Diastolic blood pressure (numeric). Vitals Heart Rate (eVitals.10) Heart rate beats per minute (numeric). Vitals Pulse Oximetry (eVitals.12) Oxygen saturation percentage (numeric). Vitals Respiratory Rate (eVitals.14) Respiratory rate breaths per minute (numeric). Vitals Respiratory Effort (eVitals.15) Observed respiratory effort (character). Vitals Carbon Dioxide CO2 (eVitals.16) End-tidal CO2 measurement (numeric). Vitals Blood Glucose Level (eVitals.18) Blood glucose level mg/dL (numeric). Vitals Glasgow Coma Score GCS Motor (eVitals.21) GCS motor response score (character). Vitals Total Glasgow Coma Score GCS (eVitals.23) Total Glasgow Coma Score (numeric). Vitals Level Responsiveness AVPU (eVitals.26) AVPU scale assessment (character). Vitals Pain Scale Score (eVitals.27) Pain scale score (numeric). Vitals Pain Scale Score Range Sort Order (eVitals.27) Sort order pain scale (numeric). Vitals Stroke Scale Score (eVitals.29) Stroke scale assessment result (character). Vitals Stroke Scale Type (eVitals.30) Type stroke scale used (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_vitals_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_vitals_table","text":"Users encouraged use dataset test functions, outputs may nonsensical, data solely intended demonstrate expected input structure.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_vitals_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) — nemsqar_vitals_table","text":"","code":"data(nemsqar_vitals_table) dplyr::glimpse(nemsqar_vitals_table) #> Rows: 10,000 #> Columns: 19 #> $ `Incident Patient Care Report Number - PCR (eRecord.01)` <chr> \"NyXFBlJfnm-8… #> $ `Incident Date`                                          <date> 2023-05-27, … #> $ `Vitals Signs Taken Date Time (eVitals.01)`              <dttm> 2023-05-27 0… #> $ `Vitals ECG Type (eVitals.04)`                           <chr> \"5 Lead\", \"Qu… #> $ `Vitals Systolic Blood Pressure SBP (eVitals.06)`        <dbl> 164, 159, 84,… #> $ `Vitals Diastolic Blood Pressure DBP (eVitals.07)`       <dbl> 180, 200, 61,… #> $ `Vitals Heart Rate (eVitals.10)`                         <dbl> 193, 218, 247… #> $ `Vitals Pulse Oximetry (eVitals.12)`                     <dbl> 91, 76, 18, 3… #> $ `Vitals Respiratory Rate (eVitals.14)`                   <dbl> 36, 69, 168, … #> $ `Vitals Respiratory Effort (eVitals.15)`                 <chr> \"Rapid\", \"Apn… #> $ `Vitals Carbon Dioxide CO2 (eVitals.16)`                 <dbl> 96, 24, 90, 1… #> $ `Vitals Blood Glucose Level (eVitals.18)`                <dbl> 90, 186, 9, 4… #> $ `Vitals Glasgow Coma Score GCS Motor (eVitals.21)`       <chr> \"Not Recorded… #> $ `Vitals Total Glasgow Coma Score GCS (eVitals.23)`       <dbl> 7, 8, 6, 5, 1… #> $ `Vitals Level Of Responsiveness AVPU (eVitals.26)`       <chr> \"Not Recorded… #> $ `Vitals Pain Scale Score (eVitals.27)`                   <dbl> 10, 0, 3, 9, … #> $ `Vitals Pain Scale Score Range Sort Order (eVitals.27)`  <dbl> 0, 3, 3, 1, 3… #> $ `Vitals Stroke Scale Score (eVitals.29)`                 <chr> \"Not Applicab… #> $ `Vitals Stroke Scale Type (eVitals.30)`                  <chr> \"Not Applicab…"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":null,"dir":"Reference","previous_headings":"","what":"Pediatrics-03B Calculation — pediatrics_03b","title":"Pediatrics-03B Calculation — pediatrics_03b","text":"function calculates pediatric metric focused EMS responses, specifically targeting responses involve patients 18 years age, certain weight-based medications administered. function filters EMS data identify relevant 911 responses narrows dataset cases involving children, calculating proportion cases documented weight among weight-based medications administered.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pediatrics-03B Calculation — pediatrics_03b","text":"","code":"pediatrics_03b(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   exam_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eexam_01_col,   eexam_02_col,   emedications_03_col,   emedications_04_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pediatrics-03B Calculation — pediatrics_03b","text":"df data frame tibble containing emergency response records. Default NULL. patient_scene_table data.frame tibble containing ePatient eScene fields fact table. Default NULL. response_table data.frame tibble containing eResponse fields needed measure's calculations. Default NULL. exam_table data.frame tibble containing eExam fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing eMedications fields needed measure's calculations. Default NULL. erecord_01_col Column unique EMS record identifiers. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column containing EMS response codes. eexam_01_col Column containing documented weight information. eexam_02_col Another column weight documentation, applicable. emedications_03_col Column indicating medication administration. emedications_04_col Column listing medications administered. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pediatrics-03B Calculation — pediatrics_03b","text":"data.frame summarizing results two population groups (Peds) following columns: pop: Population type (Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pediatrics-03B Calculation — pediatrics_03b","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pediatrics-03B Calculation — pediatrics_03b","text":"","code":"# Synthetic test data test_data <- tibble::tibble(   erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",   \"2025-06-01\", \"2025-12-15\")),   patient_dob = as.Date(c(\"2021-01-01\", \"2020-01-01\", \"2022-02-01\",   \"2023-06-01\", \"2019-12-15\")),   epatient_15 = c(4, 5, 3, 2, 6),  # Ages   epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"),   eresponse_05 = rep(2205001, 5),   emedications_03 = rep(\"stuff\", 5),   emedications_04 = c(\"Inhalation\", \"pill\", \"liquid\", \"pill\", \"liquid\"),   eexam_01 = c(60, 59, 58, 57, 56),   eexam_02 = c(\"Red\", \"Purple\", \"Grey\", \"Yellow\", \"Orange\") )  # Run the function # Return 95% confidence intervals using the Wilson method pediatrics_03b(   df = test_data,   erecord_01_col = erecord_01,   incident_date_col = incident_date,   patient_DOB_col = patient_dob,   epatient_15_col = epatient_15,   epatient_16_col = epatient_16,   eresponse_05_col = eresponse_05,   emedications_03_col = emedications_03,   emedications_04_col = emedications_04,   eexam_01_col = eexam_01,   eexam_02_col = eexam_02,   confidence_interval = TRUE ) #>  #> ── Pediatrics-03b ────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Pediatrics-03b ── #>  #> Running `pediatrics_03b_population()`  [Working on 1 of 9 tasks] ●●●●──────────… #> Running `pediatrics_03b_population()`  [Working on 2 of 9 tasks] ●●●●●●●●──────… #> Running `pediatrics_03b_population()`  [Working on 3 of 9 tasks] ●●●●●●●●●●●───… #> Running `pediatrics_03b_population()`  [Working on 4 of 9 tasks] ●●●●●●●●●●●●●●… #> Running `pediatrics_03b_population()`  [Working on 5 of 9 tasks] ●●●●●●●●●●●●●●… #> Running `pediatrics_03b_population()`  [Working on 6 of 9 tasks] ●●●●●●●●●●●●●●… #> Running `pediatrics_03b_population()`  [Working on 7 of 9 tasks] ●●●●●●●●●●●●●●… #> Running `pediatrics_03b_population()`  [Working on 8 of 9 tasks] ●●●●●●●●●●●●●●… #> Running `pediatrics_03b_population()`  [Working on 9 of 9 tasks] ●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Pediatrics-03b ── #>  #>  #> ✔ Function completed in 0.19s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 1 × 8 #>   measure        pop   numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>          <chr>     <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Pediatrics-03b Peds          4           4     1 100%          0.396        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Pediatrics-03B Populations — pediatrics_03b_population","title":"Pediatrics-03B Populations — pediatrics_03b_population","text":"Filters data target populations Pediatrics-03B, categorizes records identify needed information calculations. Identifies key categories related diabetes/hypoglycemia incidents EMS dataset, specifically focusing cases 911 called diabetes/hypoglycemia distress, certain medications administered, weight taken. function segments data pediatric populations, computing proportion cases documented weight.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pediatrics-03B Populations — pediatrics_03b_population","text":"","code":"pediatrics_03b_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   exam_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eexam_01_col,   eexam_02_col,   emedications_03_col,   emedications_04_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pediatrics-03B Populations — pediatrics_03b_population","text":"df data frame tibble containing emergency response records. Default NULL. patient_scene_table data.frame tibble containing ePatient eScene fields fact table. Default NULL. response_table data.frame tibble containing eResponse fields needed measure's calculations. Default NULL. exam_table data.frame tibble containing eExam fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing eMedications fields needed measure's calculations. Default NULL. erecord_01_col Column unique EMS record identifiers. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column containing EMS response codes. eexam_01_col Column containing documented weight information. eexam_02_col Another column weight documentation, applicable. emedications_03_col Column indicating medication administration. emedications_04_col Column listing medications administered.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pediatrics-03B Populations — pediatrics_03b_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pediatrics-03B Populations — pediatrics_03b_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pediatrics-03B Populations — pediatrics_03b_population","text":"","code":"# create tables to test correct functioning patient_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")  )  response_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   eresponse_05 = rep(2205001, 5)  )  exam_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   eexam_01 = c(60, 59, 58, 57, 56),   eexam_02 = c(\"Red\", \"Purple\", \"Grey\", \"Yellow\", \"Orange\") )  medications_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   emedications_03 = rep(\"stuff\", 5),   emedications_04 = c(\"Inhalation\", \"pill\", \"liquid\", \"pill\", \"liquid\"),  )  # test the success of the function  result <- pediatrics_03b_population(patient_scene_table = patient_table,                            response_table = response_table,                            exam_table = exam_table,                            medications_table = medications_table,                            erecord_01_col = erecord_01,                            incident_date_col = incident_date,                            patient_DOB_col = patient_dob,                            epatient_15_col = epatient_15,                            epatient_16_col = epatient_16,                            eresponse_05_col = eresponse_05,                            emedications_03_col = emedications_03,                            emedications_04_col = emedications_04,                            eexam_01_col = eexam_01,                            eexam_02_col = eexam_02                            ) #> Running `pediatrics_03b_population()`  [Working on 1 of 9 tasks] ●●●●──────────… #> Running `pediatrics_03b_population()`  [Working on 2 of 9 tasks] ●●●●●●●●──────… #> Running `pediatrics_03b_population()`  [Working on 3 of 9 tasks] ●●●●●●●●●●●───… #> Running `pediatrics_03b_population()`  [Working on 4 of 9 tasks] ●●●●●●●●●●●●●●… #> Running `pediatrics_03b_population()`  [Working on 5 of 9 tasks] ●●●●●●●●●●●●●●… #> Running `pediatrics_03b_population()`  [Working on 6 of 9 tasks] ●●●●●●●●●●●●●●… #> Running `pediatrics_03b_population()`  [Working on 7 of 9 tasks] ●●●●●●●●●●●●●●… #> Running `pediatrics_03b_population()`  [Working on 8 of 9 tasks] ●●●●●●●●●●●●●●… #> Running `pediatrics_03b_population()`  [Working on 9 of 9 tasks] ●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 6 × 2 #>   filter                count #>   <chr>                 <int> #> 1 Meds not missing          5 #> 2 Non-Weight Based Meds     1 #> 3 Documented Weight         5 #> 4 911 calls                 5 #> 5 Peds denominator          3 #> 6 Total dataset             5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Numeric Variables as Percentages — pretty_percent","title":"Format Numeric Variables as Percentages — pretty_percent","text":"function formats numeric variables percentages specified number decimal places. refines output removing unnecessary trailing zeros decimal point ensures percentage sign correctly applied without extraneous characters, resulting polished, human-readable percentage representation.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Numeric Variables as Percentages — pretty_percent","text":"","code":"pretty_percent(variable, n_decimal = 1)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Numeric Variables as Percentages — pretty_percent","text":"variable numeric vector representing proportions format percentages. values scale 0 1. n_decimal numeric value specifying number decimal places. Defaults 1.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Numeric Variables as Percentages — pretty_percent","text":"character vector containing formatted percentages.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format Numeric Variables as Percentages — pretty_percent","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Numeric Variables as Percentages — pretty_percent","text":"","code":"# Example usage: pretty_percent(0.12345)  # Default decimal places #> [1] \"12.3%\" pretty_percent(0.12345, n_decimal = 2)  # Two decimal places #> [1] \"12.35%\" pretty_percent(c(0.1, 0.25, 0.3333), n_decimal = 1)  # Vector input #> [1] \"10%\"   \"25%\"   \"33.3%\""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Respiratory-01 Calculation — respiratory_01","title":"Respiratory-01 Calculation — respiratory_01","text":"respiratory_01 function filters analyzes data related emergency 911 respiratory distress incidents, providing summary statistics adult pediatric populations. function uses specific data columns 911 response codes, primary secondary impressions, vital signs calculate proportion cases complete vital signs recorded, stratified age.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respiratory-01 Calculation — respiratory_01","text":"","code":"respiratory_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_12_col,   evitals_14_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Respiratory-01 Calculation — respiratory_01","text":"df data frame containing incident data row representing observation. patient_scene_table data.frame tibble containing least epatient escene fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. situation_table data.frame tibble containing least esituation fields needed measure's calculations. vitals_table data.frame tibble containing least evitals fields needed measure's calculations. erecord_01_col Unique Patient ID incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column name 911 response codes (e.g., 2205001, 2205003, 2205009). esituation_11_col Column name primary impression codes related respiratory distress. esituation_12_col Column name secondary impression codes related respiratory distress. evitals_12_col Column name first vital sign measurement. evitals_14_col Column name second vital sign measurement. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respiratory-01 Calculation — respiratory_01","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Respiratory-01 Calculation — respiratory_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respiratory-01 Calculation — respiratory_01","text":"","code":"# Synthetic test data test_data <- tibble::tibble(   erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   epatient_15 = c(34, 5, 45, 2, 60),  # Ages   epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),   eresponse_05 = rep(2205001, 5),   esituation_11 = c(rep(\"J80\", 3), rep(\"I50.9\", 2)),   esituation_12 = c(rep(\"J80\", 2), rep(\"I50.9\", 3)),   evitals_12 = c(60, 59, 58, 57, 56),   evitals_14 = c(16, 15, 14, 13, 12) )  # Run the function # Return 95% confidence intervals using the Wilson method respiratory_01(   df = test_data,   erecord_01_col = erecord_01,   epatient_15_col = epatient_15,   epatient_16_col = epatient_16,   eresponse_05_col = eresponse_05,   esituation_11_col = esituation_11,   esituation_12_col = esituation_12,   evitals_12_col = evitals_12,   evitals_14_col = evitals_14,   confidence_interval = TRUE ) #>  #> ── Respiratory-01 ────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Respiratory-01 ── #>  #> Running `respiratory_01_population()`  [Working on 1 of 13 tasks] ●●●──────────… #> Running `respiratory_01_population()`  [Working on 2 of 13 tasks] ●●●●●●───────… #> Running `respiratory_01_population()`  [Working on 3 of 13 tasks] ●●●●●●●●─────… #> Running `respiratory_01_population()`  [Working on 4 of 13 tasks] ●●●●●●●●●●───… #> Running `respiratory_01_population()`  [Working on 5 of 13 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 6 of 13 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 7 of 13 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 8 of 13 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 9 of 13 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 10 of 13 tasks] ●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 11 of 13 tasks] ●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 12 of 13 tasks] ●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 13 of 13 tasks] ●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Respiratory-01 ── #>  #>  #> ✔ Function completed in 0.22s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 3 × 8 #>   measure        pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>          <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Respiratory-01 Adults         3           3     1 100%          0.310        1 #> 2 Respiratory-01 Peds           2           2     1 100%          0.198        1 #> 3 Respiratory-01 All            5           5     1 100%          0.463        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Respiratory-01 Populations — respiratory_01_population","title":"Respiratory-01 Populations — respiratory_01_population","text":"respiratory_01_population function filters analyzes data related emergency 911 respiratory distress incidents, providing adult, pediatric, initial populations. function uses specific data columns 911 response codes, primary secondary impressions, vital signs filter dataset populations interest.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respiratory-01 Populations — respiratory_01_population","text":"","code":"respiratory_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_12_col,   evitals_14_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Respiratory-01 Populations — respiratory_01_population","text":"df data frame containing incident data row representing observation. patient_scene_table data.frame tibble containing least epatient escene fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. situation_table data.frame tibble containing least esituation fields needed measure's calculations. vitals_table data.frame tibble containing least evitals fields needed measure's calculations. erecord_01_col Unique Patient ID incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column name 911 response codes (e.g., 2205001, 2205003, 2205009). esituation_11_col Column name primary impression codes related respiratory distress. esituation_12_col Column name secondary impression codes related respiratory distress. evitals_12_col Column name first vital sign measurement. evitals_14_col Column name second vital sign measurement.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respiratory-01 Populations — respiratory_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Respiratory-01 Populations — respiratory_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respiratory-01 Populations — respiratory_01_population","text":"","code":"# create tables to test correct functioning  # patient table patient_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")  )  # response table response_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   eresponse_05 = rep(2205001, 5)  )  # situation table situation_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   esituation_11 = c(rep(\"J80\", 3), rep(\"I50.9\", 2)),   esituation_12 = c(rep(\"J80\", 2), rep(\"I50.9\", 3)) )  # vitals table vitals_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   evitals_12 = c(60, 59, 58, 57, 56),   evitals_14 = c(16, 15, 14, 13, 12)  )  # Run the function result <- respiratory_01_population(patient_scene_table = patient_table,                               response_table = response_table,                               situation_table = situation_table,                               vitals_table = vitals_table,                               erecord_01_col = erecord_01,                               incident_date_col = incident_date,                               patient_DOB_col = patient_dob,                               epatient_15_col = epatient_15,                               epatient_16_col = epatient_16,                               eresponse_05_col = eresponse_05,                               esituation_11_col = esituation_11,                               esituation_12_col = esituation_12,                               evitals_12_col = evitals_12,                               evitals_14_col = evitals_14                              ) #> Running `respiratory_01_population()`  [Working on 1 of 13 tasks] ●●●──────────… #> Running `respiratory_01_population()`  [Working on 2 of 13 tasks] ●●●●●●───────… #> Running `respiratory_01_population()`  [Working on 3 of 13 tasks] ●●●●●●●●─────… #> Running `respiratory_01_population()`  [Working on 4 of 13 tasks] ●●●●●●●●●●───… #> Running `respiratory_01_population()`  [Working on 5 of 13 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 6 of 13 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 7 of 13 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 8 of 13 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 9 of 13 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 10 of 13 tasks] ●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 12 of 13 tasks] ●●●●●●●●●●●●… #> Running `respiratory_01_population()`  [Working on 13 of 13 tasks] ●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 7 × 2 #>   filter                                    count #>   <chr>                                     <int> #> 1 Respiratory Distress                          5 #> 2 Pulse Oximetry and Respiratory Rate taken     5 #> 3 911 calls                                     5 #> 4 Adults denominator                            2 #> 5 Peds denominator                              3 #> 6 Initial population                            5 #> 7 Total dataset                                 5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":null,"dir":"Reference","previous_headings":"","what":"Respiratory-02 Calculation — respiratory_02","title":"Respiratory-02 Calculation — respiratory_02","text":"respiratory_02 function calculates metrics pediatric adult respiratory populations based pre-defined criteria, low oxygen saturation specific medication procedure codes. returns summary table overall, pediatric, adult populations, showing counts proportions.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respiratory-02 Calculation — respiratory_02","text":"","code":"respiratory_02(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   vitals_table = NULL,   medications_table = NULL,   procedures_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   evitals_12_col,   emedications_03_col,   eprocedures_03_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Respiratory-02 Calculation — respiratory_02","text":"df data frame containing incident data row representing observation. patient_scene_table data.frame tibble containing least epatient escene fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. vitals_table data.frame tibble containing least evitals fields needed measure's calculations. medications_table data.frame tibble containing emedications fields needed measure's calculations. procedures_table data.frame tibble containing eprocedures fields needed measure's calculations. erecord_01_col Column name eRecord.01, used form unique patient ID. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col integer Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column name response codes (e.g., incident type). evitals_12_col Column name oxygen saturation (SpO2) values. emedications_03_col Column name medication codes. eprocedures_03_col Column name procedure codes. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respiratory-02 Calculation — respiratory_02","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Respiratory-02 Calculation — respiratory_02","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respiratory-02 Calculation — respiratory_02","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     emedications_03 = c(\"Oxygen\", \"Oxygen\", \"Oxygen\", \"Oxygen\", \"Oxygen\"),     evitals_12 = c(60, 59, 58, 57, 56),     eprocedures_03 = rep(\"applicable thing\", 5)   )  # Run the function # Return 95% confidence intervals using the Wilson method   respiratory_02(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     emedications_03_col = emedications_03,     evitals_12_col = evitals_12,     eprocedures_03_col = eprocedures_03,     confidence_interval = TRUE   ) #>  #> ── Respiratory-02 ────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Respiratory-02 ── #>  #> Running `respiratory_02_population()`  [Completed 1 of 11 tasks] ●●●●──────────… #> Running `respiratory_02_population()`  [Completed 2 of 11 tasks] ●●●●●●────────… #> Running `respiratory_02_population()`  [Completed 3 of 11 tasks] ●●●●●●●●●─────… #> Running `respiratory_02_population()`  [Completed 4 of 11 tasks] ●●●●●●●●●●●●──… #> Running `respiratory_02_population()`  [Completed 5 of 11 tasks] ●●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 6 of 11 tasks] ●●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 7 of 11 tasks] ●●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 8 of 11 tasks] ●●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 9 of 11 tasks] ●●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 10 of 11 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 11 of 11 tasks] ●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Respiratory-02 ── #>  #>  #> ✔ Function completed in 0.2s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 3 × 8 #>   measure        pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>          <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Respiratory-02 Adults         3           3     1 100%          0.310        1 #> 2 Respiratory-02 Peds           2           2     1 100%          0.198        1 #> 3 Respiratory-02 All            5           5     1 100%          0.463        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Respiratory-02 Populations — respiratory_02_population","title":"Respiratory-02 Populations — respiratory_02_population","text":"respiratory_02_population function calculates metrics pediatric adult respiratory populations based pre-defined criteria, low oxygen saturation specific medication procedure codes. returns summary table overall, pediatric, adult populations, showing counts proportions.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respiratory-02 Populations — respiratory_02_population","text":"","code":"respiratory_02_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   vitals_table = NULL,   medications_table = NULL,   procedures_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   evitals_12_col,   emedications_03_col,   eprocedures_03_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Respiratory-02 Populations — respiratory_02_population","text":"df data frame containing incident data row representing observation. patient_scene_table data.frame tibble containing least epatient escene fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. vitals_table data.frame tibble containing least evitals fields needed measure's calculations. medications_table data.frame tibble containing emedications fields needed measure's calculations. procedures_table data.frame tibble containing eprocedures fields needed measure's calculations. erecord_01_col Column name eRecord.01, used form unique patient ID. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col integer Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column name response codes (e.g., incident type). evitals_12_col Column name oxygen saturation (SpO2) values. emedications_03_col Column name medication codes. eprocedures_03_col Column name procedure codes.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respiratory-02 Populations — respiratory_02_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Respiratory-02 Populations — respiratory_02_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respiratory-02 Populations — respiratory_02_population","text":"","code":"# create tables to test correct functioning # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # medications table   medications_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     emedications_03 = c(\"Oxygen\", \"Oxygen\", \"Oxygen\", \"Oxygen\", \"Oxygen\")    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_12 = c(60, 59, 58, 57, 56),    )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eprocedures_03 = rep(\"applicable thing\", 5)    )  # Run the function result <- respiratory_02_population(patient_scene_table = patient_table,                               response_table = response_table,                               medications_table = medications_table,                               vitals_table = vitals_table,                               procedures_table = procedures_table,                               erecord_01_col = erecord_01,                               incident_date_col = incident_date,                               patient_DOB_col = patient_dob,                               epatient_15_col = epatient_15,                               epatient_16_col = epatient_16,                               eresponse_05_col = eresponse_05,                               emedications_03_col = emedications_03,                               evitals_12_col = evitals_12,                               eprocedures_03_col = eprocedures_03                              ) #> Running `respiratory_02_population()`  [Completed 1 of 11 tasks] ●●●●──────────… #> Running `respiratory_02_population()`  [Completed 2 of 11 tasks] ●●●●●●────────… #> Running `respiratory_02_population()`  [Completed 3 of 11 tasks] ●●●●●●●●●─────… #> Running `respiratory_02_population()`  [Completed 4 of 11 tasks] ●●●●●●●●●●●●──… #> Running `respiratory_02_population()`  [Completed 5 of 11 tasks] ●●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 6 of 11 tasks] ●●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 7 of 11 tasks] ●●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 8 of 11 tasks] ●●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 9 of 11 tasks] ●●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 10 of 11 tasks] ●●●●●●●●●●●●●… #> Running `respiratory_02_population()`  [Completed 11 of 11 tasks] ●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 8 × 2 #>   filter                   count #>   <chr>                    <int> #> 1 Oxygen given as med          5 #> 2 Oxygen therapy procedure     0 #> 3 Pulse oximetry < 90          5 #> 4 911 calls                    5 #> 5 Adults denominator           2 #> 6 Peds denominator             3 #> 7 Initial population           5 #> 8 Total dataset                5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/results_summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate Measure Results — results_summarize","title":"Tabulate Measure Results — results_summarize","text":"Calculates measure numerator, denominator, proportions NEMSQA measure population (total, adult, pediatric). function returns summarized result table selected populations, optional confidence intervals proportions. function used throughout package calculate measure results different populations (e.g., total population, adults, pediatric groups) based given input data. population arguments (total_population, adult_population, peds_population) defaults NULL. population argument NULL, excluded results.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/results_summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate Measure Results — results_summarize","text":"","code":"results_summarize(   total_population = NULL,   adult_population = NULL,   peds_population = NULL,   measure_name,   population_names = c(\"all\", \"adults\", \"peds\"),   numerator_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/results_summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate Measure Results — results_summarize","text":"total_population dataframe tibble containing filtered calculated fields total population. Defaults NULL. adult_population dataframe tibble containing filtered calculated fields adult population. Defaults NULL. peds_population dataframe tibble containing filtered calculated fields pediatric population. Defaults NULL. measure_name string containing description measure calculated. population_names vector strings specifying populations (total, adult, peds) include result. Default includes populations. numerator_col tidyselect column containing numerator data measure (e.g., number cases). confidence_interval logical value indicating whether include confidence intervals result. Defaults FALSE. method string specifying method calculate confidence intervals. Options \"wilson\" \"clopper-pearson\". Default \"wilson\". conf.level numeric value indicating confidence level confidence intervals. Default 0.95 (95% confidence). correct logical value specifying whether apply continuity correction calculating confidence intervals. Default TRUE. ... (optional) Additional arguments passed summarize_measure function used calculating measure results.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/results_summarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate Measure Results — results_summarize","text":"tibble containing summarized measure results selected populations. output includes: measure: measure name. pop: population group (e.g., \"\", \"Adults\", \"Peds\"). numerator: count qualifying events. denominator: total number records population. prop: proportion qualifying events. prop_label: formatted percentage representation prop. lower_ci, upper_ci: lower upper confidence interval bounds (confidence_interval = TRUE). multiple populations specified, results combined single tibble using dplyr::bind_rows().","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/results_summarize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tabulate Measure Results — results_summarize","text":"Samuel Kordik, BBA, BS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-01 Calculation — safety_01","title":"Safety-01 Calculation — safety_01","text":"safety_01 function calculates proportion 911 responses \"lights sirens\" used EMS dataset. generates age-based population summaries, calculating count proportion \"lights sirens\" responses among incidents, within adult pediatric groups.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-01 Calculation — safety_01","text":"","code":"safety_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eresponse_24_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-01 Calculation — safety_01","text":"df data frame tibble containing EMS data. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. erecord_01_col Column name containing unique patient record identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column containing age. epatient_16_col Column age units. eresponse_05_col Column containing response mode codes (e.g., 911 response codes). eresponse_24_col Column detailing additional response descriptors text. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-01 Calculation — safety_01","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-01 Calculation — safety_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-01 Calculation — safety_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     eresponse_24 = rep(\"No Lights or Sirens\", 5)   )  # Run the function # Return 95% confidence intervals using the Wilson method   safety_01(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     eresponse_24_col = eresponse_24,     confidence_interval = TRUE   ) #>  #> ── Safety-01 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Safety-01 ── #>  #> Running `safety_01_population()`  [Working on 1 of 9 tasks] ●●●●───────────────… #> Running `safety_01_population()`  [Working on 2 of 9 tasks] ●●●●●●●●───────────… #> Running `safety_01_population()`  [Working on 3 of 9 tasks] ●●●●●●●●●●●────────… #> Running `safety_01_population()`  [Working on 4 of 9 tasks] ●●●●●●●●●●●●●●─────… #> Running `safety_01_population()`  [Working on 5 of 9 tasks] ●●●●●●●●●●●●●●●●●●─… #> Running `safety_01_population()`  [Working on 6 of 9 tasks] ●●●●●●●●●●●●●●●●●●●… #> Running `safety_01_population()`  [Working on 7 of 9 tasks] ●●●●●●●●●●●●●●●●●●●… #> Running `safety_01_population()`  [Working on 8 of 9 tasks] ●●●●●●●●●●●●●●●●●●●… #> Running `safety_01_population()`  [Working on 9 of 9 tasks] ●●●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Safety-01 ── #>  #>  #> ✔ Function completed in 0.16s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 3 × 8 #>   measure   pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Safety-01 Adults         3           3     1 100%         0.310         1 #> 2 Safety-01 Peds           1           1     1 100%         0.0546        1 #> 3 Safety-01 All            5           5     1 100%         0.463         1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-01 Populations — safety_01_population","title":"Safety-01 Populations — safety_01_population","text":"Filters data target populations Safety-01, categorizes records identify needed information calculations. Identifies key categories related 911 responses \"lights sirens\" used EMS dataset. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-01 Populations — safety_01_population","text":"","code":"safety_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eresponse_24_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-01 Populations — safety_01_population","text":"df data frame tibble containing EMS data. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. erecord_01_col Column name containing unique patient record identifier. incident_date_col Date POSIXct column indicating date incident. patient_DOB_col Date POSIXct column patient’s date birth epatient_15_col Column containing age. epatient_16_col Column age units. eresponse_05_col Column containing response mode codes (e.g., 911 response codes). eresponse_24_col Column detailing additional response descriptors text.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-01 Populations — safety_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-01 Populations — safety_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-01 Populations — safety_01_population","text":"","code":"# create tables to test correct functioning  # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5),     eresponse_24 = rep(\"No Lights or Sirens\", 5)    )  # Run the function result <- safety_01_population(patient_scene_table = patient_table,                               response_table = response_table,                               erecord_01_col = erecord_01,                               incident_date_col = incident_date,                               patient_DOB_col = patient_dob,                               epatient_15_col = epatient_15,                               epatient_16_col = epatient_16,                               eresponse_05_col = eresponse_05,                               eresponse_24_col = eresponse_24                         ) #> Running `safety_01_population()`  [Working on 1 of 9 tasks] ●●●●───────────────… #> Running `safety_01_population()`  [Working on 2 of 9 tasks] ●●●●●●●●───────────… #> Running `safety_01_population()`  [Working on 3 of 9 tasks] ●●●●●●●●●●●────────… #> Running `safety_01_population()`  [Working on 4 of 9 tasks] ●●●●●●●●●●●●●●─────… #> Running `safety_01_population()`  [Working on 5 of 9 tasks] ●●●●●●●●●●●●●●●●●●─… #> Running `safety_01_population()`  [Working on 6 of 9 tasks] ●●●●●●●●●●●●●●●●●●●… #> Running `safety_01_population()`  [Working on 7 of 9 tasks] ●●●●●●●●●●●●●●●●●●●… #> Running `safety_01_population()`  [Working on 8 of 9 tasks] ●●●●●●●●●●●●●●●●●●●… #> Running `safety_01_population()`  [Working on 9 of 9 tasks] ●●●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 6 × 2 #>   filter               count #>   <chr>                <int> #> 1 911 calls                5 #> 2 No lights and sirens     5 #> 3 Adults denominator       2 #> 4 Peds denominator         3 #> 5 Initial population       5 #> 6 Total dataset            5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-02 Calculation — safety_02","title":"Safety-02 Calculation — safety_02","text":"safety_02 function calculates Safety-02 metric, evaluating proportion emergency medical calls involving transport lights sirens used. function categorizes population adult pediatric groups based age, summarizes results total population count well.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-02 Calculation — safety_02","text":"","code":"safety_02(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   edisposition_18_col,   edisposition_28_col,   transport_disposition_cols,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-02 Calculation — safety_02","text":"df data frame row observation, column represents feature. patient_scene_table data.frame tibble containing epatient escene fields fact table. response_table data.frame tibble containing eresponse fields needed measure's calculations. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column giving response codes, identifying 911 responses. edisposition_18_col Column giving transport mode descriptors, including possible lights--sirens indicators. edisposition_28_col Column giving patient evaluation care categories EMS response. transport_disposition_cols One unquoted column names (edisposition.12, edisposition.30) containing transport disposition details. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-02 Calculation — safety_02","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-02 Calculation — safety_02","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-02 Calculation — safety_02","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     edisposition_18 = rep(4218015, 5),     edisposition_28 = rep(4228001, 5),     edisposition_30 = rep(4230001, 5)   )  # Run the function # Return 95% confidence intervals using the Wilson method   safety_02(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     edisposition_18_col = edisposition_18,     edisposition_28_col = edisposition_28,     transport_disposition_cols = edisposition_30,     confidence_interval = TRUE   ) #>  #> ── Safety-02 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Safety-02 ── #>  #> Running `safety_02_population()`  [Working on 1 of 11 tasks] ●●●●──────────────… #> Running `safety_02_population()`  [Working on 2 of 11 tasks] ●●●●●●────────────… #> Running `safety_02_population()`  [Working on 3 of 11 tasks] ●●●●●●●●●─────────… #> Running `safety_02_population()`  [Working on 4 of 11 tasks] ●●●●●●●●●●●●──────… #> Running `safety_02_population()`  [Working on 5 of 11 tasks] ●●●●●●●●●●●●●●●───… #> Running `safety_02_population()`  [Working on 6 of 11 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `safety_02_population()`  [Working on 7 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `safety_02_population()`  [Working on 8 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `safety_02_population()`  [Working on 9 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `safety_02_population()`  [Working on 10 of 11 tasks] ●●●●●●●●●●●●●●●●●… #> Running `safety_02_population()`  [Working on 11 of 11 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Safety-02 ── #>  #>  #> ✔ Function completed in 0.2s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 3 × 8 #>   measure   pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Safety-02 Adults         3           3     1 100%         0.310         1 #> 2 Safety-02 Peds           1           1     1 100%         0.0546        1 #> 3 Safety-02 All            5           5     1 100%         0.463         1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-02 Populations — safety_02_population","title":"Safety-02 Populations — safety_02_population","text":"Filters data target populations Safety-02, categorizes records identify needed information calculations. Identifies key categories related 911 request lights sirens used patient transport. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-02 Populations — safety_02_population","text":"","code":"safety_02_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   edisposition_18_col,   edisposition_28_col,   transport_disposition_cols )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-02 Populations — safety_02_population","text":"df data frame row observation, column represents feature. patient_scene_table data.frame tibble containing epatient escene fields fact table. response_table data.frame tibble containing eresponse fields needed measure's calculations. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column giving response codes, identifying 911 responses. edisposition_18_col Column giving transport mode descriptors, including possible lights--sirens indicators. edisposition_28_col Column giving patient evaluation care categories EMS response. transport_disposition_cols One unquoted column names (edisposition.12, edisposition.30) containing transport disposition details.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-02 Populations — safety_02_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-02 Populations — safety_02_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-02 Populations — safety_02_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_18 = rep(4218015, 5),     edisposition_28 = rep(4228001, 5),     edisposition_30 = rep(4230001, 5)   )    # test the success of the function   result <- safety_02_population(patient_scene_table = patient_table,                         response_table = response_table,                         disposition_table = disposition_table,                         erecord_01_col = erecord_01,                         incident_date_col = incident_date,                         patient_DOB_col = patient_dob,                         epatient_15_col = epatient_15,                         epatient_16_col = epatient_16,                         eresponse_05_col = eresponse_05,                         edisposition_18_col = edisposition_18,                         edisposition_28_col = edisposition_28,                         transport_disposition_cols = edisposition_30                         ) #> Running `safety_02_population()`  [Working on 1 of 11 tasks] ●●●●──────────────… #> Running `safety_02_population()`  [Working on 2 of 11 tasks] ●●●●●●────────────… #> Running `safety_02_population()`  [Working on 3 of 11 tasks] ●●●●●●●●●─────────… #> Running `safety_02_population()`  [Working on 4 of 11 tasks] ●●●●●●●●●●●●──────… #> Running `safety_02_population()`  [Working on 5 of 11 tasks] ●●●●●●●●●●●●●●●───… #> Running `safety_02_population()`  [Working on 6 of 11 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `safety_02_population()`  [Working on 7 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `safety_02_population()`  [Working on 8 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `safety_02_population()`  [Working on 9 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `safety_02_population()`  [Working on 10 of 11 tasks] ●●●●●●●●●●●●●●●●●… #> Running `safety_02_population()`  [Working on 11 of 11 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 8 × 2 #>   filter                               count #>   <chr>                                <int> #> 1 911 calls                                5 #> 2 Patients evaluated and care provided     5 #> 3 Transport runs                           5 #> 4 No lights and sirens                     5 #> 5 Adults denominator                       2 #> 6 Peds denominator                         3 #> 7 Initial population                       5 #> 8 Total dataset                            5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-04 Calculation — safety_04","title":"Safety-04 Calculation — safety_04","text":"safety_04 function processes EMS incident data specific safety transport criteria, filtering patient age incident type identify cases meet specified exclusion inclusion criteria. function accommodates data various EMS-specific codes, age descriptors, procedure identifiers.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-04 Calculation — safety_04","text":"","code":"safety_04(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   injury_table = NULL,   procedures_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   earrest_01_col,   einjury_03_col,   eprocedures_03_col,   edisposition_14_col,   transport_disposition_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-04 Calculation — safety_04","text":"df data frame tibble containing EMS data row represents individual observation. patient_scene_table data frame tibble containing fields epatient escene needed measure's calculations. response_table data frame tibble containing fields eresponse needed measure's calculations. arrest_table data frame tibble containing fields earrest needed measure's calculations. injury_table data frame tibble containing fields einjury needed measure's calculations. procedures_table data frame tibble containing fields eprocedures needed measure's calculations. disposition_table data frame tibble containing fields edisposition needed measure's calculations. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name indicating patient age. epatient_16_col Column name unit age (e.g., \"Years,\" \"Months\"). eresponse_05_col Column containing response transport codes. earrest_01_col Column cardiac arrest status information. einjury_03_col Column describing traumatic injuries, expected list text-separated entries. eprocedures_03_col Column listing procedures, assumed contain multiple procedure codes/texts cell. edisposition_14_col Column transport dispositions. transport_disposition_col Columns primary secondary transport dispositions. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-04 Calculation — safety_04","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-04 Calculation — safety_04","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-04 Calculation — safety_04","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     earrest_01 = rep(\"No\", 5),     einjury_03 = rep(\"non-injury\", 5),     edisposition_14 = rep(4214001, 5),     edisposition_30 = rep(4230001, 5),     eprocedures_03 = rep(\"other response\", 5)   )  # Run the function # Return 95% confidence intervals using the Wilson method   safety_04(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     earrest_01_col = earrest_01,     einjury_03_col = einjury_03,     edisposition_14_col = edisposition_14,     transport_disposition_col = edisposition_30,     eprocedures_03_col = eprocedures_03,     confidence_interval = TRUE   ) #>  #> ── Safety-04 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Safety-04 ── #>  #> Running `safety_04_population()`  [Working on 1 of 13 tasks] ●●●───────────────… #> Running `safety_04_population()`  [Working on 2 of 13 tasks] ●●●●●●────────────… #> Running `safety_04_population()`  [Working on 3 of 13 tasks] ●●●●●●●●──────────… #> Running `safety_04_population()`  [Working on 4 of 13 tasks] ●●●●●●●●●●────────… #> Running `safety_04_population()`  [Working on 5 of 13 tasks] ●●●●●●●●●●●●●─────… #> Running `safety_04_population()`  [Working on 6 of 13 tasks] ●●●●●●●●●●●●●●●───… #> Running `safety_04_population()`  [Working on 7 of 13 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `safety_04_population()`  [Working on 8 of 13 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `safety_04_population()`  [Working on 9 of 13 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `safety_04_population()`  [Working on 10 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `safety_04_population()`  [Working on 11 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `safety_04_population()`  [Working on 12 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `safety_04_population()`  [Working on 13 of 13 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Safety-04 ── #>  #>  #> ✔ Function completed in 0.22s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 1 × 8 #>   measure   pop   numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>     <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Safety-04 Peds          2           2     1 100%          0.198        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-04 Populations — safety_04_population","title":"Safety-04 Populations — safety_04_population","text":"Filters data target populations Safety-04, categorizes records identify needed information calculations. Identifies key categories related 911 request interfacility request patients less 8 years age patients transported using pediatric restraint device. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-04 Populations — safety_04_population","text":"","code":"safety_04_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   injury_table = NULL,   procedures_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   earrest_01_col,   einjury_03_col,   eprocedures_03_col,   edisposition_14_col,   transport_disposition_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-04 Populations — safety_04_population","text":"df data frame tibble containing EMS data row represents individual observation. patient_scene_table data frame tibble containing fields epatient escene needed measure's calculations. response_table data frame tibble containing fields eresponse needed measure's calculations. arrest_table data frame tibble containing fields earrest needed measure's calculations. injury_table data frame tibble containing fields einjury needed measure's calculations. procedures_table data frame tibble containing fields eprocedures needed measure's calculations. disposition_table data frame tibble containing fields edisposition needed measure's calculations. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name indicating patient age. epatient_16_col Column name unit age (e.g., \"Years,\" \"Months\"). eresponse_05_col Column containing response transport codes. earrest_01_col Column cardiac arrest status information. einjury_03_col Column describing traumatic injuries, expected list text-separated entries. eprocedures_03_col Column listing procedures, assumed contain multiple procedure codes/texts cell. edisposition_14_col Column transport dispositions. transport_disposition_col Columns primary secondary transport dispositions.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-04 Populations — safety_04_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-04 Populations — safety_04_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-04 Populations — safety_04_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_14 = rep(4214001, 5),     edisposition_30 = rep(4230001, 5),   )    # arrest table   arrest_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     earrest_01 = rep(\"No\", 5)   )    # injury table   injury_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     einjury_03 = rep(\"non-injury\", 5)   )    # procedures table   procedures_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eprocedures_03 = rep(\"other response\", 5)   )    # test the success of the function   result <- safety_04_population(patient_scene_table = patient_table,                         response_table = response_table,                         arrest_table = arrest_table,                         injury_table = injury_table,                         procedures_table = procedures_table,                         disposition_table = disposition_table,                         erecord_01_col = erecord_01,                         incident_date_col = incident_date,                         patient_DOB_col = patient_dob,                         epatient_15_col = epatient_15,                         epatient_16_col = epatient_16,                         eresponse_05_col = eresponse_05,                         earrest_01_col = earrest_01,                         einjury_03_col = einjury_03,                         edisposition_14_col = edisposition_14,                         transport_disposition_col = edisposition_30,                         eprocedures_03_col = eprocedures_03                         ) #> Running `safety_04_population()`  [Working on 1 of 13 tasks] ●●●───────────────… #> Running `safety_04_population()`  [Working on 2 of 13 tasks] ●●●●●●────────────… #> Running `safety_04_population()`  [Working on 3 of 13 tasks] ●●●●●●●●──────────… #> Running `safety_04_population()`  [Working on 4 of 13 tasks] ●●●●●●●●●●────────… #> Running `safety_04_population()`  [Working on 5 of 13 tasks] ●●●●●●●●●●●●●─────… #> Running `safety_04_population()`  [Working on 6 of 13 tasks] ●●●●●●●●●●●●●●●───… #> Running `safety_04_population()`  [Working on 7 of 13 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `safety_04_population()`  [Working on 8 of 13 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `safety_04_population()`  [Working on 9 of 13 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `safety_04_population()`  [Working on 10 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `safety_04_population()`  [Working on 11 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `safety_04_population()`  [Working on 12 of 13 tasks] ●●●●●●●●●●●●●●●●●… #> Running `safety_04_population()`  [Working on 13 of 13 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 10 × 2 #>    filter                              count #>    <chr>                               <int> #>  1 Transport runs                          5 #>  2 Interfacility runs                      0 #>  3 Cardiac arrest calls                    0 #>  4 Severe injury calls                     0 #>  5 Calls involving long board              0 #>  6 Calls involving an airway procedure     0 #>  7 Car seat used                           5 #>  8 Peds denominator                        3 #>  9 Initial population                      3 #> 10 Total dataset                           5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":null,"dir":"Reference","previous_headings":"","what":"Seizure-02 Calculation — seizure_02","title":"Seizure-02 Calculation — seizure_02","text":"Calculates NEMSQA Seizure-02 Measure. Calculates age-based seizure metrics dataset. function filters data patients based incident information, diagnoses, administered medications assess adherence Seizure-02 metrics.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seizure-02 Calculation — seizure_02","text":"","code":"seizure_02(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   emedications_03_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seizure-02 Calculation — seizure_02","text":"df data frame row observation, containing necessary columns analysis. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing emedications fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name patient age numeric form. epatient_16_col Column name age unit (e.g., \"Years\" \"Months\"). eresponse_05_col Column name response codes; \"911\" call codes filtered. esituation_11_col Column name primary impressions. esituation_12_col Column name secondary impressions. emedications_03_col Column name medications administered; ideally list column string comma-separated values. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seizure-02 Calculation — seizure_02","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Seizure-02 Calculation — seizure_02","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seizure-02 Calculation — seizure_02","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_11 = rep(\"G40\", 5),     esituation_12 = rep(\"r56\", 5),     emedications_03 = rep(3322, 5)   )  # Run the function # Return 95% confidence intervals using the Wilson method   seizure_02(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_11_col = esituation_11,     esituation_12_col = esituation_12,     emedications_03_col = emedications_03,     confidence_interval = TRUE   ) #>  #> ── Seizure-02 ────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Seizure-02 ── #>  #> Running `seizure_02_population()`  [Working on 1 of 10 tasks] ●●●●─────────────… #> Running `seizure_02_population()`  [Working on 2 of 10 tasks] ●●●●●●●──────────… #> Running `seizure_02_population()`  [Working on 3 of 10 tasks] ●●●●●●●●●●───────… #> Running `seizure_02_population()`  [Working on 4 of 10 tasks] ●●●●●●●●●●●●●────… #> Running `seizure_02_population()`  [Working on 5 of 10 tasks] ●●●●●●●●●●●●●●●●─… #> Running `seizure_02_population()`  [Working on 6 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `seizure_02_population()`  [Working on 7 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `seizure_02_population()`  [Working on 8 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `seizure_02_population()`  [Working on 9 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `seizure_02_population()`  [Working on 10 of 10 tasks] ●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Seizure-02 ── #>  #>  #> ✔ Function completed in 0.18s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 3 × 8 #>   measure    pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>      <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Seizure-02 Adults         3           3     1 100%         0.310         1 #> 2 Seizure-02 Peds           1           1     1 100%         0.0546        1 #> 3 Seizure-02 All            5           5     1 100%         0.463         1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Seizure-02 Populations — seizure_02_population","title":"Seizure-02 Populations — seizure_02_population","text":"Filters data target populations Seizure-02, categorizes records identify needed information calculations. Identifies key categories related asthma-related incidents EMS dataset, specifically focusing cases 911 called respiratory distress, certain medications administered. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seizure-02 Populations — seizure_02_population","text":"","code":"seizure_02_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   emedications_03_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seizure-02 Populations — seizure_02_population","text":"df data frame row observation, containing necessary columns analysis. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing emedications fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name patient age numeric form. epatient_16_col Column name age unit (e.g., \"Years\" \"Months\"). eresponse_05_col Column name response codes; \"911\" call codes filtered. esituation_11_col Column name primary impressions. esituation_12_col Column name secondary impressions. emedications_03_col Column name medications administered; ideally list column string comma-separated values.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seizure-02 Populations — seizure_02_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Seizure-02 Populations — seizure_02_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seizure-02 Populations — seizure_02_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_11 = rep(\"G40\", 5),     esituation_12 = rep(\"r56\", 5),   )    # medications table   medications_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     emedications_03 = rep(3322, 5)    )    # test the success of the function   result <- seizure_02_population(patient_scene_table = patient_table,                               response_table = response_table,                               situation_table = situation_table,                               medications_table = medications_table,                               erecord_01_col = erecord_01,                               incident_date_col = incident_date,                               patient_DOB_col = patient_dob,                               epatient_15_col = epatient_15,                               epatient_16_col = epatient_16,                               eresponse_05_col = eresponse_05,                               esituation_11_col = esituation_11,                               esituation_12_col = esituation_12,                               emedications_03_col = emedications_03                          ) #> Running `seizure_02_population()`  [Working on 1 of 10 tasks] ●●●●─────────────… #> Running `seizure_02_population()`  [Working on 2 of 10 tasks] ●●●●●●●──────────… #> Running `seizure_02_population()`  [Working on 3 of 10 tasks] ●●●●●●●●●●───────… #> Running `seizure_02_population()`  [Working on 4 of 10 tasks] ●●●●●●●●●●●●●────… #> Running `seizure_02_population()`  [Working on 5 of 10 tasks] ●●●●●●●●●●●●●●●●─… #> Running `seizure_02_population()`  [Working on 6 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `seizure_02_population()`  [Working on 7 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `seizure_02_population()`  [Working on 8 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `seizure_02_population()`  [Working on 9 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `seizure_02_population()`  [Working on 10 of 10 tasks] ●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 7 × 2 #>   filter               count #>   <chr>                <int> #> 1 911 calls                5 #> 2 Seizure cases            5 #> 3 Benzodiazepine cases     5 #> 4 Adults denominator       2 #> 5 Peds denominator         3 #> 6 Initial population       5 #> 7 Total dataset            5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Stroke-01 Calculation — stroke_01","title":"Stroke-01 Calculation — stroke_01","text":"stroke_01 function processes EMS dataset identify potential stroke cases based specific criteria calculates stroke scale measures. filters data 911 response calls, identifies stroke-related impressions scales, aggregates results unique patient encounters.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stroke-01 Calculation — stroke_01","text":"","code":"stroke_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_23_col,   evitals_26_col,   evitals_29_col,   evitals_30_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stroke-01 Calculation — stroke_01","text":"df data frame tibble containing dataset. row represent unique patient encounter. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. eresponse_05_col column containing EMS response codes, include 911 response codes. esituation_11_col column containing primary impression codes descriptions related situation. esituation_12_col column containing secondary impression codes descriptions related situation. evitals_23_col column containing Glasgow Coma Scale (GCS) score. evitals_26_col column containing AVPU (alert, verbal, pain, unresponsive) scale value. evitals_29_col column containing stroke scale score achieved assessment. evitals_30_col column containing stroke scale type descriptors (e.g., FAST, NIH, etc.). confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stroke-01 Calculation — stroke_01","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stroke-01 Calculation — stroke_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stroke-01 Calculation — stroke_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_11 = c(rep(\"I60\", 3), rep(\"I61\", 2)),     esituation_12 = c(rep(\"I63\", 2), rep(\"I64\", 3)),     evitals_23 = c(16, 15, 14, 13, 12),     evitals_26 = c(\"Alert\", \"Painful\", \"Verbal\", \"Unresponsive\", \"Alert\"),     evitals_29 = rep(\"positive\", 5),     evitals_30 = rep(\"a pain scale\", 5)   )  # Run the function # Return 95% confidence intervals using the Wilson method   stroke_01(     df = test_data,     erecord_01_col = erecord_01,     eresponse_05_col = eresponse_05,     esituation_11_col = esituation_11,     esituation_12_col = esituation_12,     evitals_23_col = evitals_23,     evitals_26_col = evitals_26,     evitals_29_col = evitals_29,     evitals_30_col = evitals_30,     confidence_interval = TRUE   ) #>  #> ── Stroke-01 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Stroke-01 ── #>  #> Running `stroke_01_population()`  [Working on 1 of 11 tasks] ●●●●──────────────… #> Running `stroke_01_population()`  [Working on 2 of 11 tasks] ●●●●●●────────────… #> Running `stroke_01_population()`  [Working on 3 of 11 tasks] ●●●●●●●●●─────────… #> Running `stroke_01_population()`  [Working on 4 of 11 tasks] ●●●●●●●●●●●●──────… #> Running `stroke_01_population()`  [Working on 5 of 11 tasks] ●●●●●●●●●●●●●●●───… #> Running `stroke_01_population()`  [Working on 6 of 11 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `stroke_01_population()`  [Working on 7 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `stroke_01_population()`  [Working on 8 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `stroke_01_population()`  [Working on 9 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `stroke_01_population()`  [Working on 10 of 11 tasks] ●●●●●●●●●●●●●●●●●… #> Running `stroke_01_population()`  [Working on 11 of 11 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Stroke-01 ── #>  #>  #> ✔ Function completed in 0.19s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 1 × 8 #>   measure   pop   numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>     <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Stroke-01 All           5           5     1 100%          0.463        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Stroke-01 Populations — stroke_01_population","title":"Stroke-01 Populations — stroke_01_population","text":"Filters data target populations Stroke-01, categorizes records identify needed information calculations. Identifies key categories related stroke-related incidents EMS dataset, specifically focusing cases 911 called stroke, stroke scale administered. .","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stroke-01 Populations — stroke_01_population","text":"","code":"stroke_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_23_col,   evitals_26_col,   evitals_29_col,   evitals_30_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stroke-01 Populations — stroke_01_population","text":"df data frame tibble containing dataset. row represent unique patient encounter. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. eresponse_05_col column containing EMS response codes, include 911 response codes. esituation_11_col column containing primary impression codes descriptions related situation. esituation_12_col column containing secondary impression codes descriptions related situation. evitals_23_col column containing Glasgow Coma Scale (GCS) score. evitals_26_col column containing AVPU (alert, verbal, pain, unresponsive) scale value. evitals_29_col column containing stroke scale score achieved assessment. evitals_30_col column containing stroke scale type descriptors (e.g., FAST, NIH, etc.).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stroke-01 Populations — stroke_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stroke-01 Populations — stroke_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stroke-01 Populations — stroke_01_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_11 = c(rep(\"I60\", 3), rep(\"I61\", 2)),     esituation_12 = c(rep(\"I63\", 2), rep(\"I64\", 3)),   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_23 = c(16, 15, 14, 13, 12),     evitals_26 = c(\"Alert\", \"Painful\", \"Verbal\", \"Unresponsive\", \"Alert\"),     evitals_29 = rep(\"positive\", 5),     evitals_30 = rep(\"a pain scale\", 5)   )    # test the success of the function   result <- stroke_01_population(patient_scene_table = patient_table,                               response_table = response_table,                               situation_table = situation_table,                               vitals_table = vitals_table,                               erecord_01_col = erecord_01,                               eresponse_05_col = eresponse_05,                               esituation_11_col = esituation_11,                               esituation_12_col = esituation_12,                               evitals_29_col = evitals_29,                               evitals_23_col = evitals_23,                               evitals_26_col = evitals_26,                               evitals_30_col = evitals_30                               ) #> Running `stroke_01_population()`  [Working on 1 of 11 tasks] ●●●●──────────────… #> Running `stroke_01_population()`  [Working on 2 of 11 tasks] ●●●●●●────────────… #> Running `stroke_01_population()`  [Working on 3 of 11 tasks] ●●●●●●●●●─────────… #> Running `stroke_01_population()`  [Working on 4 of 11 tasks] ●●●●●●●●●●●●──────… #> Running `stroke_01_population()`  [Working on 5 of 11 tasks] ●●●●●●●●●●●●●●●───… #> Running `stroke_01_population()`  [Working on 6 of 11 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `stroke_01_population()`  [Working on 7 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `stroke_01_population()`  [Working on 8 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `stroke_01_population()`  [Working on 9 of 11 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `stroke_01_population()`  [Working on 10 of 11 tasks] ●●●●●●●●●●●●●●●●●… #> Running `stroke_01_population()`  [Working on 11 of 11 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 7 × 2 #>   filter                              count #>   <chr>                               <int> #> 1 911 calls                               5 #> 2 Stroke cases                            5 #> 3 GCUS <= 9                               0 #> 4 AVPU = Unresponsive                     1 #> 5 Non-Null Stroke Scale Score or Type     5 #> 6 Initial population                      5 #> 7 Total dataset                           5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/summarize_measure.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Measure — summarize_measure","title":"Summarize Measure — summarize_measure","text":"Calculates measure numerator, denominator, proportions, optional confidence intervals NEMSQA measure. function summarizes information specified population measure, returning tibble calculated values. requested, function can also calculate confidence intervals proportions using either Wilson score interval Clopper-Pearson exact binomial interval.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/summarize_measure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Measure — summarize_measure","text":"","code":"summarize_measure(   data,   measure_name,   population_name,   numerator_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/summarize_measure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Measure — summarize_measure","text":"data dataframe tibble containing filtered calculated fields population interest. measure_name string containing description measure calculated (e.g., \"Airway-01\"). population_name string containing description population measure calculated (e.g., \"Adults\", \"Peds\", \"\"). numerator_col tidyselect column containing numerator data measure (e.g., number cases). confidence_interval logical value indicating whether calculate confidence interval proportion estimate. Defaults FALSE. method string specifying method calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching allowed (e.g., \"w\" \"c\"). Default \"wilson\". conf.level numeric value indicating confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct logical value specifying whether apply continuity correction Wilson score interval method = \"wilson\". Default TRUE. ... (optional) Additional arguments passed dplyr::summarize() calculating estimates groups via ..","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/summarize_measure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Measure — summarize_measure","text":"summarized data frame containing: measure: measure name. pop: population group. numerator: count qualifying events. denominator: total count records. prop: proportion qualifying events. prop_label: formatted percentage representation prop (confidence_interval = FALSE). lower_ci, upper_ci: lower upper confidence interval bounds (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/summarize_measure.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize Measure — summarize_measure","text":"Samuel Kordik, BBA, BS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Syncope-01 Calculation — syncope_01","title":"Syncope-01 Calculation — syncope_01","text":"syncope_01 function processes EMS dataset identify potential syncope (fainting) cases based specific criteria calculates related ECG measures. function dplyr::filters data 911 response calls, assesses primary associated symptoms syncope, determines age-based populations (adult pediatric), aggregates results unique patient encounters.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syncope-01 Calculation — syncope_01","text":"","code":"syncope_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_09_col,   esituation_10_col,   esituation_11_col,   esituation_12_col,   evitals_04_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syncope-01 Calculation — syncope_01","text":"df Main data frame containing EMS records. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient age (numeric). epatient_16_col Column patient age units (e.g., \"Years\", \"Months\"). eresponse_05_col Column containing response type codes, specifically 911 codes. esituation_09_col Column primary symptoms associated patient encounter. esituation_10_col Column associated symptoms. esituation_11_col Column primary impression code. esituation_12_col Column secondary impression codes. evitals_04_col Column ECG information available. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syncope-01 Calculation — syncope_01","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Syncope-01 Calculation — syncope_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syncope-01 Calculation — syncope_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_09 = c(rep(\"R55\", 3), rep(\"R40.4\", 2)),     esituation_10 = c(rep(\"R40.4\", 2), rep(\"R55\", 3)),     esituation_11 = c(rep(\"R55\", 3), rep(\"R40.4\", 2)),     esituation_12 = c(rep(\"R40.4\", 2), rep(\"R55\", 3)),     evitals_04 = rep(\"15 Lead\", 5)   )  # Run the function # Return 95% confidence intervals using the Wilson method   syncope_01(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_09_col = esituation_09,     esituation_10_col = esituation_10,     esituation_11_col = esituation_11,     esituation_12_col = esituation_12,     evitals_04_col = evitals_04,     confidence_interval = TRUE   ) #>  #> ── Syncope-01 ────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Syncope-01 ── #>  #> Running `syncope_01_population()`  [Working on 1 of 10 tasks] ●●●●─────────────… #> Running `syncope_01_population()`  [Working on 2 of 10 tasks] ●●●●●●●──────────… #> Running `syncope_01_population()`  [Working on 3 of 10 tasks] ●●●●●●●●●●───────… #> Running `syncope_01_population()`  [Working on 4 of 10 tasks] ●●●●●●●●●●●●●────… #> Running `syncope_01_population()`  [Working on 5 of 10 tasks] ●●●●●●●●●●●●●●●●─… #> Running `syncope_01_population()`  [Working on 6 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `syncope_01_population()`  [Working on 7 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `syncope_01_population()`  [Working on 8 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `syncope_01_population()`  [Working on 9 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `syncope_01_population()`  [Working on 10 of 10 tasks] ●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Syncope-01 ── #>  #>  #> ✔ Function completed in 0.17s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 2 × 8 #>   measure    pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>      <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Syncope-01 Adults         3           3     1 100%          0.310        1 #> 2 Syncope-01 Peds           2           2     1 100%          0.198        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Syncope-01 Populations — syncope_01_population","title":"Syncope-01 Populations — syncope_01_population","text":"Filters data target populations Syncope-01, categorizes records identify needed information calculations. Identifies key categories identify potential syncope (fainting) cases based specific criteria calculates related ECG measures. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syncope-01 Populations — syncope_01_population","text":"","code":"syncope_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_09_col,   esituation_10_col,   esituation_11_col,   esituation_12_col,   evitals_04_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syncope-01 Populations — syncope_01_population","text":"df Main data frame containing EMS records. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient age (numeric). epatient_16_col Column patient age units (e.g., \"Years\", \"Months\"). eresponse_05_col Column containing response type codes, specifically 911 codes. esituation_09_col Column primary symptoms associated patient encounter. esituation_10_col Column associated symptoms. esituation_11_col Column primary impression code. esituation_12_col Column secondary impression codes. evitals_04_col Column ECG information available.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syncope-01 Populations — syncope_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Syncope-01 Populations — syncope_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syncope-01 Populations — syncope_01_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_09 = c(rep(\"R55\", 3), rep(\"R40.4\", 2)),     esituation_10 = c(rep(\"R40.4\", 2), rep(\"R55\", 3)),     esituation_11 = c(rep(\"R55\", 3), rep(\"R40.4\", 2)),     esituation_12 = c(rep(\"R40.4\", 2), rep(\"R55\", 3)),   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_04 = rep(\"15 Lead\", 5)    )    # test the success of the function   result <- syncope_01_population(patient_scene_table = patient_table,                          response_table = response_table,                          situation_table = situation_table,                          vitals_table = vitals_table,                          erecord_01_col = erecord_01,                          epatient_15_col = epatient_15,                          epatient_16_col = epatient_16,                          eresponse_05_col = eresponse_05,                          esituation_09_col = esituation_09,                          esituation_10_col = esituation_10,                          esituation_11_col = esituation_11,                          esituation_12_col = esituation_12,                          evitals_04_col = evitals_04                          ) #> Running `syncope_01_population()`  [Working on 1 of 10 tasks] ●●●●─────────────… #> Running `syncope_01_population()`  [Working on 2 of 10 tasks] ●●●●●●●──────────… #> Running `syncope_01_population()`  [Working on 3 of 10 tasks] ●●●●●●●●●●───────… #> Running `syncope_01_population()`  [Working on 4 of 10 tasks] ●●●●●●●●●●●●●────… #> Running `syncope_01_population()`  [Working on 5 of 10 tasks] ●●●●●●●●●●●●●●●●─… #> Running `syncope_01_population()`  [Working on 6 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `syncope_01_population()`  [Working on 7 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `syncope_01_population()`  [Working on 8 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `syncope_01_population()`  [Working on 9 of 10 tasks] ●●●●●●●●●●●●●●●●●… #> Running `syncope_01_population()`  [Working on 10 of 10 tasks] ●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 7 × 2 #>   filter             count #>   <chr>              <int> #> 1 911 calls              5 #> 2 Syncope cases          5 #> 3 ECG performed          5 #> 4 Adults denominator     2 #> 5 Peds denominator       3 #> 6 Initial population     5 #> 7 Total dataset          5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":null,"dir":"Reference","previous_headings":"","what":"TBI-01 Calculation — tbi_01","title":"TBI-01 Calculation — tbi_01","text":"function screens potential traumatic brain injury (TBI) cases based specific criteria patient dataset. produces subset data calculated variables TBI identification.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TBI-01 Calculation — tbi_01","text":"","code":"tbi_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   transport_disposition_col,   evitals_06_col,   evitals_12_col,   evitals_16_col,   evitals_23_col,   evitals_26_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TBI-01 Calculation — tbi_01","text":"df data frame tibble containing patient data. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col Column name df patient’s unique record ID. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name df patient’s age value. epatient_16_col Column name df patient’s age unit (e.g., years, months). eresponse_05_col Column name df response codes type EMS call. esituation_11_col Column name df primary provider impression. esituation_12_col Column name df secondary provider impression. transport_disposition_col Column name df transport disposition. evitals_06_col Column name df systolic blood pressure (SBP). evitals_12_col Column name df pulse oximetry values. evitals_16_col Column name df ETCO2 values. values. evitals_23_col Column name df Glasgow Coma Scale (GCS) scores. evitals_26_col Column name df AVPU (alert, verbal, painful, unresponsive) values. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TBI-01 Calculation — tbi_01","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TBI-01 Calculation — tbi_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TBI-01 Calculation — tbi_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_11 = c(rep(\"S02\", 3), rep(\"S06\", 2)),     esituation_12 = c(rep(\"S09.90\", 2), rep(\"S06.0X9\", 3)),     evitals_06 = c(85, 80, 100, 90, 82),     evitals_12 = c(95, 96, 97, 98, 99),     evitals_16 = c(35, 36, 37, 38, 39),     evitals_23 = rep(8, 5),     evitals_26 = c(\"Verbal\", \"Painful\", \"Unresponsive\", \"Verbal\", \"Painful\"),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )  # Run the function # Return 95% confidence intervals using the Wilson method   tbi_01(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_11_col = esituation_11,     esituation_12_col = esituation_12,     evitals_06_col = evitals_06,     evitals_12_col = evitals_12,     evitals_16_col = evitals_16,     evitals_23_col = evitals_23,     evitals_26_col = evitals_26,     transport_disposition_col = edisposition_30,     confidence_interval = TRUE   ) #>  #> ── TBI-01 ────────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for TBI-01 ── #>  #> Running `tbi_01_population()`  [Working on 1 of 15 tasks] ●●●──────────────────… #> Running `tbi_01_population()`  [Working on 2 of 15 tasks] ●●●●●────────────────… #> Running `tbi_01_population()`  [Working on 5 of 15 tasks] ●●●●●●●●●●●──────────… #> Running `tbi_01_population()`  [Working on 6 of 15 tasks] ●●●●●●●●●●●●●────────… #> Running `tbi_01_population()`  [Working on 7 of 15 tasks] ●●●●●●●●●●●●●●●──────… #> Running `tbi_01_population()`  [Working on 8 of 15 tasks] ●●●●●●●●●●●●●●●●●────… #> Running `tbi_01_population()`  [Working on 9 of 15 tasks] ●●●●●●●●●●●●●●●●●●●──… #> Running `tbi_01_population()`  [Working on 10 of 15 tasks] ●●●●●●●●●●●●●●●●●●●●… #> Running `tbi_01_population()`  [Working on 12 of 15 tasks] ●●●●●●●●●●●●●●●●●●●●… #> Running `tbi_01_population()`  [Working on 13 of 15 tasks] ●●●●●●●●●●●●●●●●●●●●… #> Running `tbi_01_population()`  [Working on 14 of 15 tasks] ●●●●●●●●●●●●●●●●●●●●… #> Running `tbi_01_population()`  [Working on 15 of 15 tasks] ●●●●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating TBI-01 ── #>  #>  #> ✔ Function completed in 0.22s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 2 × 8 #>   measure pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>   <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 TBI-01  Adults         3           3     1 100%          0.310        1 #> 2 TBI-01  Peds           2           2     1 100%          0.198        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"TBI-01 Populations — tbi_01_population","title":"TBI-01 Populations — tbi_01_population","text":"function screens potential traumatic brain injury (TBI) cases based specific criteria patient dataset. produces subset data calculated variables TBI identification.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TBI-01 Populations — tbi_01_population","text":"","code":"tbi_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   transport_disposition_col,   evitals_06_col,   evitals_12_col,   evitals_16_col,   evitals_23_col,   evitals_26_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TBI-01 Populations — tbi_01_population","text":"df data frame tibble containing patient data. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col Column name df patient’s unique record ID. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name df patient’s age value. epatient_16_col Column name df patient’s age unit (e.g., years, months). eresponse_05_col Column name df response codes type EMS call. esituation_11_col Column name df primary provider impression. esituation_12_col Column name df secondary provider impression. transport_disposition_col Column name df transport disposition. evitals_06_col Column name df systolic blood pressure (SBP). evitals_12_col Column name df pulse oximetry values. evitals_16_col Column name df ETC02 values. values. evitals_23_col Column name df Glasgow Coma Scale (GCS) scores. evitals_26_col Column name df AVPU (alert, verbal, painful, unresponsive) values.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TBI-01 Populations — tbi_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TBI-01 Populations — tbi_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TBI-01 Populations — tbi_01_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_11 = c(rep(\"S02\", 3), rep(\"S06\", 2)),     esituation_12 = c(rep(\"S09.90\", 2), rep(\"S06.0X9\", 3)),   )     # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_06 = c(85, 80, 100, 90, 82),     evitals_12 = c(95, 96, 97, 98, 99),     evitals_16 = c(35, 36, 37, 38, 39),     evitals_23 = rep(8, 5),     evitals_26 = c(\"Verbal\", \"Painful\", \"Unresponsive\", \"Verbal\", \"Painful\")   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )  # test the success of the function   result <- tbi_01_population(patient_scene_table = patient_table,                          response_table = response_table,                          situation_table = situation_table,                          vitals_table = vitals_table,                          disposition_table = disposition_table,                          erecord_01_col = erecord_01,                          epatient_15_col = epatient_15,                          epatient_16_col = epatient_16,                          eresponse_05_col = eresponse_05,                          esituation_11_col = esituation_11,                          esituation_12_col = esituation_12,                          evitals_06_col = evitals_06,                          evitals_12_col = evitals_12,                          evitals_16_col = evitals_16,                          evitals_23_col = evitals_23,                          evitals_26_col = evitals_26,                          transport_disposition_col = edisposition_30                      ) #> Running `tbi_01_population()`  [Working on 1 of 15 tasks] ●●●──────────────────… #> Running `tbi_01_population()`  [Working on 2 of 15 tasks] ●●●●●────────────────… #> Running `tbi_01_population()`  [Working on 5 of 15 tasks] ●●●●●●●●●●●──────────… #> Running `tbi_01_population()`  [Working on 6 of 15 tasks] ●●●●●●●●●●●●●────────… #> Running `tbi_01_population()`  [Working on 7 of 15 tasks] ●●●●●●●●●●●●●●●──────… #> Running `tbi_01_population()`  [Working on 8 of 15 tasks] ●●●●●●●●●●●●●●●●●────… #> Running `tbi_01_population()`  [Working on 9 of 15 tasks] ●●●●●●●●●●●●●●●●●●●──… #> Running `tbi_01_population()`  [Working on 10 of 15 tasks] ●●●●●●●●●●●●●●●●●●●●… #> Running `tbi_01_population()`  [Working on 12 of 15 tasks] ●●●●●●●●●●●●●●●●●●●●… #> Running `tbi_01_population()`  [Working on 13 of 15 tasks] ●●●●●●●●●●●●●●●●●●●●… #> Running `tbi_01_population()`  [Working on 14 of 15 tasks] ●●●●●●●●●●●●●●●●●●●●… #> Running `tbi_01_population()`  [Working on 15 of 15 tasks] ●●●●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 10 × 2 #>    filter                                   count #>    <chr>                                    <int> #>  1 911 calls                                    5 #>  2 TBI cases                                    5 #>  3 GCS < 15                                     5 #>  4 AVPU is verbal, painful, or unresponsive     5 #>  5 Transports                                   5 #>  6 Oxygen level, ETC02, SBP are documented      5 #>  7 Adults denominator                           2 #>  8 Peds denominator                             3 #>  9 Initial population                           5 #> 10 Total dataset                                5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-01 Calculation — trauma_01","title":"Trauma-01 Calculation — trauma_01","text":"function processes EMS data calculate Trauma-01 performance measure, evaluates percentage trauma patients assessed pain using numeric scale. function filters summarizes data based specified inclusion criteria.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-01 Calculation — trauma_01","text":"","code":"trauma_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   evitals_23_col,   evitals_26_col,   evitals_27_col,   edisposition_28_col,   transport_disposition_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-01 Calculation — trauma_01","text":"df data frame tibble containing EMS records. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col Column name representing EMS record ID. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name patient's age numeric format. epatient_16_col Column name unit age (e.g., \"Years\", \"Months\"). esituation_02_col Column name indicating situation involved injury. eresponse_05_col Column name type EMS response (e.g., 911 call). evitals_23_col Column name Glasgow Coma Scale (GCS) total score. evitals_26_col Column name AVPU (Alert, Voice, Pain, Unresponsive) status. evitals_27_col Column name pain scale assessment. edisposition_28_col Column name patient care disposition details. transport_disposition_col Column name transport disposition details. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-01 Calculation — trauma_01","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-01 Calculation — trauma_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-01 Calculation — trauma_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_02 = rep(\"Yes\", 5),     evitals_23 = rep(15, 5),     evitals_26 = rep(\"Alert\", 5),     evitals_27 = c(0, 2, 4, 6, 8),     edisposition_28 = rep(4228001, 5),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )  # Run the function # Return 95% confidence intervals using the Wilson method   trauma_01(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_02_col = esituation_02,     evitals_23_col = evitals_23,     evitals_26_col = evitals_26,     evitals_27_col = evitals_27,     edisposition_28_col = edisposition_28,     transport_disposition_col = edisposition_30,     confidence_interval = TRUE   ) #>  #> ── Trauma-01 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Trauma-01 ── #>  #> Running `trauma_01_population()`  [Working on 1 of 14 tasks] ●●●───────────────… #> Running `trauma_01_population()`  [Working on 2 of 14 tasks] ●●●●●─────────────… #> Running `trauma_01_population()`  [Working on 3 of 14 tasks] ●●●●●●●───────────… #> Running `trauma_01_population()`  [Working on 4 of 14 tasks] ●●●●●●●●●●────────… #> Running `trauma_01_population()`  [Working on 5 of 14 tasks] ●●●●●●●●●●●●──────… #> Running `trauma_01_population()`  [Working on 6 of 14 tasks] ●●●●●●●●●●●●●●────… #> Running `trauma_01_population()`  [Working on 7 of 14 tasks] ●●●●●●●●●●●●●●●●──… #> Running `trauma_01_population()`  [Working on 8 of 14 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 9 of 14 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 10 of 14 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 11 of 14 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 12 of 14 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 13 of 14 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 14 of 14 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Trauma-01 ── #>  #>  #> ✔ Function completed in 0.25s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 3 × 8 #>   measure   pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Trauma-01 Adults         3           3     1 100%         0.310         1 #> 2 Trauma-01 Peds           1           1     1 100%         0.0546        1 #> 3 Trauma-01 All            5           5     1 100%         0.463         1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-01 Population — trauma_01_population","title":"Trauma-01 Population — trauma_01_population","text":"Filters data target populations Trauma-08, categorizes records identify needed information calculations. Identifies key categories records 911 requests patients injury assessed pain based specific criteria calculates related ECG measures. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-01 Population — trauma_01_population","text":"","code":"trauma_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   evitals_23_col,   evitals_26_col,   evitals_27_col,   edisposition_28_col,   transport_disposition_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-01 Population — trauma_01_population","text":"df data frame tibble containing EMS records. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col Column name representing EMS record ID. incident_date_col Column name incident date. Default NULL. patient_DOB_col Column name patient's date birth. Default NULL. epatient_15_col Column name patient's age numeric format. epatient_16_col Column name unit age (e.g., \"Years\", \"Months\"). esituation_02_col Column name indicating situation involved injury. eresponse_05_col Column name type EMS response (e.g., 911 call). evitals_23_col Column name Glasgow Coma Scale (GCS) total score. evitals_26_col Column name AVPU (Alert, Voice, Pain, Unresponsive) status. evitals_27_col Column name pain scale assessment. edisposition_28_col Column name patient care disposition details. transport_disposition_col Column name transport disposition details.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-01 Population — trauma_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-01 Population — trauma_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-01 Population — trauma_01_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_02 = rep(\"Yes\", 5),   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_23 = rep(15, 5),     evitals_26 = rep(\"Alert\", 5),     evitals_27 = c(0, 2, 4, 6, 8)   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_28 = rep(4228001, 5),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # test the success of the function   result <- trauma_01_population(patient_scene_table = patient_table,                      response_table = response_table,                      situation_table = situation_table,                      vitals_table = vitals_table,                      disposition_table = disposition_table,                      erecord_01_col = erecord_01,                      incident_date_col = incident_date,                      patient_DOB_col = patient_dob,                      epatient_15_col = epatient_15,                      epatient_16_col = epatient_16,                      eresponse_05_col = eresponse_05,                      esituation_02_col = esituation_02,                      evitals_23_col = evitals_23,                      evitals_26_col = evitals_26,                      evitals_27_col = evitals_27,                      edisposition_28_col = edisposition_28,                      transport_disposition_col = edisposition_30                      ) #> Running `trauma_01_population()`  [Working on 1 of 14 tasks] ●●●───────────────… #> Running `trauma_01_population()`  [Working on 2 of 14 tasks] ●●●●●─────────────… #> Running `trauma_01_population()`  [Working on 3 of 14 tasks] ●●●●●●●───────────… #> Running `trauma_01_population()`  [Working on 4 of 14 tasks] ●●●●●●●●●●────────… #> Running `trauma_01_population()`  [Working on 5 of 14 tasks] ●●●●●●●●●●●●──────… #> Running `trauma_01_population()`  [Working on 6 of 14 tasks] ●●●●●●●●●●●●●●────… #> Running `trauma_01_population()`  [Working on 7 of 14 tasks] ●●●●●●●●●●●●●●●●──… #> Running `trauma_01_population()`  [Working on 8 of 14 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 9 of 14 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 10 of 14 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 11 of 14 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 12 of 14 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 13 of 14 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_01_population()`  [Working on 14 of 14 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 11 × 2 #>    filter                              count #>    <chr>                               <int> #>  1 911 calls                               5 #>  2 GCS is 15                               5 #>  3 AVPU is alert                           5 #>  4 Transports                              5 #>  5 Injury cases                            5 #>  6 Patient evaluated and care provided     5 #>  7 Pain scale administered                 5 #>  8 Adults denominator                      2 #>  9 Peds denominator                        3 #> 10 Initial population                      5 #> 11 Total dataset                           5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-03 Calculation — trauma_03","title":"Trauma-03 Calculation — trauma_03","text":"function calculates \"Trauma-03\" measure, evaluates pain scale reassessment trauma patients, using comprehensive data frame EMS records. function processes input data create fact dimension tables, identifies eligible patients, summarizes results adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-03 Calculation — trauma_03","text":"","code":"trauma_03(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   edisposition_28_col,   transport_disposition_col,   evitals_01_col,   evitals_27_col = NULL,   evitals_27_initial_col = NULL,   evitals_27_last_col = NULL,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-03 Calculation — trauma_03","text":"df data frame tibble containing EMS data relevant columns. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. edisposition_28_col column patient care disposition details. transport_disposition_col column patient transport disposition. evitals_01_col column time pain scale measurement. evitals_27_col column full set pain scale scores. evitals_27_initial_col column initial pain scale score. evitals_27_last_col column last pain scale score. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-03 Calculation — trauma_03","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-03 Calculation — trauma_03","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-03 Calculation — trauma_03","text":"","code":"# Synthetic test data # for testing a single pain scale column   test_data2 <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_02 = rep(\"Yes\", 5),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 12:00:00\", \"2025-01-05     18:00:00\", \"2025-02-01 06:00:00\", \"2025-01-01 01:00:00\", \"2025-06-01     14:00:00\")),     edisposition_28 = rep(4228001, 5),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # Expand data so each erecord_01 has 2 rows (one for each pain score)   test_data_expanded2 <- test_data2 |>     tidyr::uncount(weights = 2) |>  # Duplicate each row twice     # Assign pain scores     dplyr::mutate(evitals_27 = c(0, 0, 2, 1, 4, 3, 6, 5, 8, 7)) |>     dplyr::group_by(erecord_01) |>     dplyr::mutate(     # Lower score = later time       time_offset = dplyr::if_else(dplyr::row_number() == 1, -5, 0),       evitals_01 = evitals_01 + lubridate::dminutes(time_offset)     ) |>     dplyr::ungroup() |>     dplyr::select(-time_offset)  # Remove temporary column  # Run function with the single pain score column # Return 95% confidence intervals using the Wilson method   trauma_03(     df = test_data_expanded2,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_02_col = esituation_02,     evitals_01_col = evitals_01,     evitals_27_initial_col = NULL,     evitals_27_last_col = NULL,     evitals_27_col = evitals_27,     edisposition_28_col = edisposition_28,     transport_disposition_col = edisposition_30,     confidence_interval = TRUE   ) #>  #> ── Trauma-03 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Trauma-03 ── #>  #> Running `trauma_03_population()`  [Working on 1 of 17 tasks] ●●●───────────────… #> Running `trauma_03_population()`  [Working on 2 of 17 tasks] ●●●●●─────────────… #> Running `trauma_03_population()`  [Working on 3 of 17 tasks] ●●●●●●────────────… #> Running `trauma_03_population()`  [Working on 4 of 17 tasks] ●●●●●●●●──────────… #> Running `trauma_03_population()`  [Working on 5 of 17 tasks] ●●●●●●●●●●────────… #> Running `trauma_03_population()`  [Working on 6 of 17 tasks] ●●●●●●●●●●●●──────… #> Running `trauma_03_population()`  [Working on 7 of 17 tasks] ●●●●●●●●●●●●●─────… #> Running `trauma_03_population()`  [Working on 8 of 17 tasks] ●●●●●●●●●●●●●●●───… #> Running `trauma_03_population()`  [Working on 9 of 17 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `trauma_03_population()`  [Working on 10 of 17 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_03_population()`  [Working on 11 of 17 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_03_population()`  [Working on 12 of 17 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_03_population()`  [Working on 13 of 17 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_03_population()`  [Working on 17 of 17 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Trauma-03 ── #>  #>  #> ✔ Function completed in 0.37s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 3 × 8 #>   measure   pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Trauma-03 Adults         2           2     1 100%         0.198         1 #> 2 Trauma-03 Peds           1           1     1 100%         0.0546        1 #> 3 Trauma-03 All            4           4     1 100%         0.396         1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-03 Populations — trauma_03_population","title":"Trauma-03 Populations — trauma_03_population","text":"Filters data target populations Trauma-08, categorizes records identify needed information calculations. Identifies key categories records 911 request patients whose pain score lowered EMS encounter. based specific criteria calculates related ECG measures. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-03 Populations — trauma_03_population","text":"","code":"trauma_03_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   evitals_01_col,   evitals_27_col = NULL,   evitals_27_initial_col = NULL,   evitals_27_last_col = NULL,   edisposition_28_col,   transport_disposition_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-03 Populations — trauma_03_population","text":"df data frame tibble containing EMS data relevant columns. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. evitals_01_col column time pain scale measurement. evitals_27_col column pain scale score. Default NULL. evitals_27_initial_col column initial pain scale score. Default NULL. evitals_27_last_col column last pain scale score. Default NULL. edisposition_28_col column patient care disposition details. transport_disposition_col column patient transport disposition.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-03 Populations — trauma_03_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-03 Populations — trauma_03_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-03 Populations — trauma_03_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_02 = rep(\"Yes\", 5),   )    # vitals table for a single pain scale column   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 12:00:00\", \"2025-01-05     18:00:00\", \"2025-02-01 06:00:00\", \"2025-01-01 01:00:00\", \"2025-06-01     14:00:00\"))   ) |>     tidyr::uncount(weights = 2) |>  # Duplicate each row twice     # Assign pain scores     dplyr::mutate(evitals_27 = c(0, 0, 2, 1, 4, 3, 6, 5, 8, 7)) |>     dplyr::group_by(erecord_01) |>     dplyr::mutate(     # Lower score = later time       time_offset = dplyr::if_else(dplyr::row_number() == 1, -5, 0),       evitals_01 = evitals_01 + lubridate::dminutes(time_offset)     ) |>     dplyr::ungroup() |>     dplyr::select(-time_offset)  # Remove temporary column    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_28 = rep(4228001, 5),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )  # test the success of the function # use the single pain scale column   result <- trauma_03_population(patient_scene_table = patient_table,                         response_table = response_table,                         situation_table = situation_table,                         vitals_table = vitals_table,                         disposition_table = disposition_table,                         erecord_01_col = erecord_01,                         incident_date_col = incident_date,                         patient_DOB_col = patient_dob,                         epatient_15_col = epatient_15,                         epatient_16_col = epatient_16,                         eresponse_05_col = eresponse_05,                         esituation_02_col = esituation_02,                         evitals_01_col = evitals_01,                         evitals_27_initial_col = NULL,                         evitals_27_last_col = NULL,                         evitals_27_col = evitals_27,                         edisposition_28_col = edisposition_28,                         transport_disposition_col = edisposition_30                         ) #> Running `trauma_03_population()`  [Working on 1 of 17 tasks] ●●●───────────────… #> Running `trauma_03_population()`  [Working on 2 of 17 tasks] ●●●●●─────────────… #> Running `trauma_03_population()`  [Working on 3 of 17 tasks] ●●●●●●────────────… #> Running `trauma_03_population()`  [Working on 4 of 17 tasks] ●●●●●●●●──────────… #> Running `trauma_03_population()`  [Working on 5 of 17 tasks] ●●●●●●●●●●────────… #> Running `trauma_03_population()`  [Working on 6 of 17 tasks] ●●●●●●●●●●●●──────… #> Running `trauma_03_population()`  [Working on 7 of 17 tasks] ●●●●●●●●●●●●●─────… #> Running `trauma_03_population()`  [Working on 8 of 17 tasks] ●●●●●●●●●●●●●●●───… #> Running `trauma_03_population()`  [Working on 9 of 17 tasks] ●●●●●●●●●●●●●●●●●─… #> Running `trauma_03_population()`  [Working on 10 of 17 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_03_population()`  [Working on 11 of 17 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_03_population()`  [Working on 12 of 17 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_03_population()`  [Working on 13 of 17 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_03_population()`  [Working on 17 of 17 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 10 × 2 #>    filter                                                       count #>    <chr>                                                        <int> #>  1 911 calls                                                        5 #>  2 Non-missing vital sign date-time with initial pain score > 0     4 #>  3 Transports                                                       5 #>  4 Injury cases                                                     5 #>  5 Patient evaluated and care provided                              5 #>  6 Pain scale decreased                                             4 #>  7 Adults denominator                                               1 #>  8 Peds denominator                                                 3 #>  9 Initial population                                               4 #> 10 Total dataset                                                    5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-04 Calculations — trauma_04","title":"Trauma-04 Calculations — trauma_04","text":"function processes EMS data generate set binary variables indicating whether specific trauma triage criteria met. output data frame enriched indicators analysis.  final outcome whether EMS record documents use verified trauma center levels 1-5 hospital capability documentation.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-04 Calculations — trauma_04","text":"","code":"trauma_04(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   exam_table = NULL,   procedures_table = NULL,   injury_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   eresponse_10_col,   transport_disposition_col,   edisposition_23_col,   evitals_06_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_15_col,   evitals_21_col,   eexam_16_col,   eexam_20_col,   eexam_23_col,   eexam_25_col,   eprocedures_03_col,   einjury_01_col,   einjury_03_col,   einjury_04_col,   einjury_09_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-04 Calculations — trauma_04","text":"df data frame tibble containing EMS data relevant columns. patient_scene_table data.frame tibble containing epatient escene fields fact table. response_table data.frame tibble containing eresponse fields needed measure's calculations. situation_table data.frame tibble containing esituation fields needed measure's calculations. vitals_table data.frame tibble containing evitals fields needed measure's calculations. exam_table data.frame tibble containing eexam fields needed measure's calculations. procedures_table data.frame tibble containing eprocedures fields needed measure's calculations. injury_table data.frame tibble containing einjury fields needed measure's calculations. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. eresponse_10_col Column name containing scene delay information. transport_disposition_col column patient transport disposition. edisposition_23_col Column name containing trauma hospital verification information. evitals_06_col Column name containing systolic blood pressure (SBP) values. evitals_10_col Column name containing heart rate values. evitals_12_col Column name containing pulse oximetry values. evitals_14_col Column name containing capillary refill information. evitals_15_col Column name containing respiratory effort values. evitals_21_col Column name containing Glasgow Coma Scale (GCS) Motor values. eexam_16_col Column name containing extremities assessment details. eexam_20_col Column name containing neurological assessment details. eexam_23_col Column name containing lung assessment details. eexam_25_col Column name containing chest assessment details. eprocedures_03_col Column name containing airway management tourniquet usage details. einjury_01_col Column name containing injury cause details. einjury_03_col Column name containing trauma triage steps 1 2 information. einjury_04_col Column name containing trauma triage steps 3 4 information. einjury_09_col Column name containing fall height information. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-04 Calculations — trauma_04","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-04 Calculations — trauma_04","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-04 Calculations — trauma_04","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     eresponse_10 = rep(2210011, 5),     esituation_02 = rep(\"Yes\", 5),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_15 = c(\"apneic\", \"labored\", \"rapid\", \"shallow\", \"weak/agonal\"),     evitals_21 = c(5, 4, 3, 2, 1),     eexam_16 = c(3516043, 3516067, 3516043, 3516067, 3516067),     eexam_20 = c(3520045, 3520043, 3520019, 3520017, 3520017),     eexam_23 = c(3523011, 3523003, 3523001, 3523011, 3523003),     eexam_25 = c(3525039, 3525023, 3525005, 3525039, 3525023),     edisposition_23 = c(9908029, 9908027, 9908025, 9908023, 9908021),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007),     eprocedures_03 = c(424979004, 427753009, 429705000, 47545007, 243142003),     einjury_01 = c(\"V20\", \"V36\", \"V86\", \"V39\", \"V32\"),     einjury_03 = c(2903011, 2903009, 2903005, 3903003, 2903001),     einjury_04 = c(2904013, 2904011, 2904009, 2904007, 2904001),     einjury_09 = c(11, 12, 13, 14, 15)   )    # Run function with the first and last pain score columns   # Return 95% confidence intervals using the Wilson method   trauma_04(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     eresponse_10_col = eresponse_10,     esituation_02_col = esituation_02,     evitals_06_col = evitals_06,     evitals_10_col = evitals_10,     evitals_12_col = evitals_12,     evitals_14_col = evitals_14,     evitals_15_col = evitals_15,     evitals_21_col = evitals_21,     eexam_16_col = eexam_16,     eexam_20_col = eexam_20,     eexam_23_col = eexam_23,     eexam_25_col = eexam_25,     edisposition_23_col = edisposition_23,     transport_disposition_col = edisposition_30,     eprocedures_03_col = eprocedures_03,     einjury_01_col = einjury_01,     einjury_03_col = einjury_03,     einjury_04_col = einjury_04,     einjury_09_col = einjury_09,     confidence_interval = TRUE   ) #>  #> ── Trauma-04 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Trauma-04 ── #>  #> Running `trauma_04_population()`  [Working on 1 of 31 tasks] ●●────────────────… #> Running `trauma_04_population()`  [Working on 2 of 31 tasks] ●●●───────────────… #> Running `trauma_04_population()`  [Working on 3 of 31 tasks] ●●●●──────────────… #> Running `trauma_04_population()`  [Working on 4 of 31 tasks] ●●●●●─────────────… #> Running `trauma_04_population()`  [Working on 5 of 31 tasks] ●●●●●●────────────… #> Running `trauma_04_population()`  [Working on 6 of 31 tasks] ●●●●●●●───────────… #> Running `trauma_04_population()`  [Working on 7 of 31 tasks] ●●●●●●●●──────────… #> Running `trauma_04_population()`  [Working on 8 of 31 tasks] ●●●●●●●●●─────────… #> Running `trauma_04_population()`  [Working on 9 of 31 tasks] ●●●●●●●●●●────────… #> Running `trauma_04_population()`  [Working on 10 of 31 tasks] ●●●●●●●●●●●──────… #> Running `trauma_04_population()`  [Working on 11 of 31 tasks] ●●●●●●●●●●●●─────… #> Running `trauma_04_population()`  [Working on 12 of 31 tasks] ●●●●●●●●●●●●●────… #> Running `trauma_04_population()`  [Working on 13 of 31 tasks] ●●●●●●●●●●●●●●───… #> Running `trauma_04_population()`  [Working on 14 of 31 tasks] ●●●●●●●●●●●●●●●──… #> Running `trauma_04_population()`  [Working on 15 of 31 tasks] ●●●●●●●●●●●●●●●●─… #> Running `trauma_04_population()`  [Working on 16 of 31 tasks] ●●●●●●●●●●●●●●●●─… #> Running `trauma_04_population()`  [Working on 17 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 18 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 19 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 20 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 21 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 22 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 23 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 24 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 25 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 26 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 27 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 28 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 29 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 30 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 31 of 31 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Trauma-04 ── #>  #>  #> ✔ Function completed in 0.51s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 3 × 8 #>   measure   pop       numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>         <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Trauma-04 >= 65 yrs         0           0   NaN NA          NaN          NaN #> 2 Trauma-04 10-64 yrs         3           3     1 100%          0.310        1 #> 3 Trauma-04 < 10 yrs          2           2     1 100%          0.198        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-04 Populations — trauma_04_population","title":"Trauma-04 Populations — trauma_04_population","text":"function processes EMS data generate population needed calculated Trauma-04 NEMSQA measure.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-04 Populations — trauma_04_population","text":"","code":"trauma_04_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   exam_table = NULL,   procedures_table = NULL,   injury_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   eresponse_10_col,   transport_disposition_col,   edisposition_23_col,   evitals_06_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_15_col,   evitals_21_col,   eexam_16_col,   eexam_20_col,   eexam_23_col,   eexam_25_col,   eprocedures_03_col,   einjury_01_col,   einjury_03_col,   einjury_04_col,   einjury_09_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-04 Populations — trauma_04_population","text":"df data frame tibble containing EMS data relevant columns. patient_scene_table data.frame tibble containing epatient escene fields fact table. response_table data.frame tibble containing eresponse fields needed measure's calculations. situation_table data.frame tibble containing esituation fields needed measure's calculations. vitals_table data.frame tibble containing evitals fields needed measure's calculations. exam_table data.frame tibble containing eexam fields needed measure's calculations. procedures_table data.frame tibble containing eprocedures fields needed measure's calculations. injury_table data.frame tibble containing einjury fields needed measure's calculations. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col column indicating incident date. Must class Date similar. patient_DOB_col column representing patient's date birth. Must class Date similar. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. eresponse_10_col Column name containing scene delay information. transport_disposition_col column patient transport disposition. edisposition_23_col Column name containing trauma hospital verification information. evitals_06_col Column name containing systolic blood pressure (SBP) values. evitals_10_col Column name containing heart rate values. evitals_12_col Column name containing pulse oximetry values. evitals_14_col Column name containing capillary refill information. evitals_15_col Column name containing respiratory effort values. evitals_21_col Column name containing Glasgow Coma Scale (GCS) Motor values. eexam_16_col Column name containing extremities assessment details. eexam_20_col Column name containing neurological assessment details. eexam_23_col Column name containing lung assessment details. eexam_25_col Column name containing chest assessment details. eprocedures_03_col Column name containing airway management tourniquet usage details. einjury_01_col Column name containing injury cause details. einjury_03_col Column name containing trauma triage steps 1 2 information. einjury_04_col Column name containing trauma triage steps 3 4 information. einjury_09_col Column name containing fall height information.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-04 Populations — trauma_04_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-04 Populations — trauma_04_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-04 Populations — trauma_04_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5),     eresponse_10 = rep(2210011, 5)   )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_02 = rep(\"Yes\", 5),   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_15 = c(\"apneic\", \"labored\", \"rapid\", \"shallow\", \"weak/agonal\"),     evitals_21 = c(5, 4, 3, 2, 1)   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_23 = c(9908029, 9908027, 9908025, 9908023, 9908021),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # injury table   injury_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     einjury_01 = c(\"V20\", \"V36\", \"V86\", \"V39\", \"V32\"),     einjury_03 = c(2903011, 2903009, 2903005, 3903003, 2903001),     einjury_04 = c(2904013, 2904011, 2904009, 2904007, 2904001),     einjury_09 = c(11, 12, 13, 14, 15)   )    # exam table   exam_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eexam_16 = c(3516043, 3516067, 3516043, 3516067, 3516067),     eexam_20 = c(3520045, 3520043, 3520019, 3520017, 3520017),     eexam_23 = c(3523011, 3523003, 3523001, 3523011, 3523003),     eexam_25 = c(3525039, 3525023, 3525005, 3525039, 3525023)   )    # procedures table   procedures_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eprocedures_03 = c(424979004, 427753009, 429705000, 47545007, 243142003)   )    # test the success of the function   result <- trauma_04_population(patient_scene_table = patient_table,                         response_table = response_table,                         situation_table = situation_table,                         vitals_table = vitals_table,                         disposition_table = disposition_table,                       exam_table = exam_table,                       injury_table = injury_table,                       procedures_table = procedures_table,                       erecord_01_col = erecord_01,                       incident_date_col = incident_date,                       patient_DOB_col = patient_dob,                       epatient_15_col = epatient_15,                       epatient_16_col = epatient_16,                       eresponse_05_col = eresponse_05,                       eresponse_10_col = eresponse_10,                       esituation_02_col = esituation_02,                       evitals_06_col = evitals_06,                       evitals_10_col = evitals_10,                       evitals_12_col = evitals_12,                       evitals_14_col = evitals_14,                       evitals_15_col = evitals_15,                       evitals_21_col = evitals_21,                       eexam_16_col = eexam_16,                       eexam_20_col = eexam_20,                       eexam_23_col = eexam_23,                       eexam_25_col = eexam_25,                       edisposition_23_col = edisposition_23,                       transport_disposition_col = edisposition_30,                       eprocedures_03_col = eprocedures_03,                       einjury_01_col = einjury_01,                       einjury_03_col = einjury_03,                       einjury_04_col = einjury_04,                       einjury_09_col = einjury_09                       ) #> Running `trauma_04_population()`  [Working on 1 of 31 tasks] ●●────────────────… #> Running `trauma_04_population()`  [Working on 2 of 31 tasks] ●●●───────────────… #> Running `trauma_04_population()`  [Working on 3 of 31 tasks] ●●●●──────────────… #> Running `trauma_04_population()`  [Working on 4 of 31 tasks] ●●●●●─────────────… #> Running `trauma_04_population()`  [Working on 5 of 31 tasks] ●●●●●●────────────… #> Running `trauma_04_population()`  [Working on 6 of 31 tasks] ●●●●●●●───────────… #> Running `trauma_04_population()`  [Working on 7 of 31 tasks] ●●●●●●●●──────────… #> Running `trauma_04_population()`  [Working on 8 of 31 tasks] ●●●●●●●●●─────────… #> Running `trauma_04_population()`  [Working on 9 of 31 tasks] ●●●●●●●●●●────────… #> Running `trauma_04_population()`  [Working on 10 of 31 tasks] ●●●●●●●●●●●──────… #> Running `trauma_04_population()`  [Working on 11 of 31 tasks] ●●●●●●●●●●●●─────… #> Running `trauma_04_population()`  [Working on 12 of 31 tasks] ●●●●●●●●●●●●●────… #> Running `trauma_04_population()`  [Working on 13 of 31 tasks] ●●●●●●●●●●●●●●───… #> Running `trauma_04_population()`  [Working on 14 of 31 tasks] ●●●●●●●●●●●●●●●──… #> Running `trauma_04_population()`  [Working on 15 of 31 tasks] ●●●●●●●●●●●●●●●●─… #> Running `trauma_04_population()`  [Working on 16 of 31 tasks] ●●●●●●●●●●●●●●●●─… #> Running `trauma_04_population()`  [Working on 17 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 18 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 19 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 20 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 21 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 22 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 23 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 24 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 25 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 26 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 27 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 28 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 29 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 30 of 31 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_04_population()`  [Working on 31 of 31 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 29 × 2 #>    filter                                                                  count #>    <chr>                                                                   <int> #>  1 Situation possible injury                                                   5 #>  2 911 calls                                                                   5 #>  3 Transports                                                                  5 #>  4 GCS Motor 1-5                                                               5 #>  5 Breath sounds absent, decreased, increased respiratory effort               5 #>  6 Flail segment, retraction, accessory muscles used in breathing              5 #>  7 Respiratory effort apneic, labored, mech. assist, rapid, shallow, weak…     5 #>  8 Airway management procedures                                                5 #>  9 Pulse oximetry < 90                                                         5 #> 10 SBP < 110                                                                   5 #> # ℹ 19 more rows"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-08 Calculation — trauma_08","title":"Trauma-08 Calculation — trauma_08","text":"function calculates Trauma-08 measure, evaluates ","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-08 Calculation — trauma_08","text":"","code":"trauma_08(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   transport_disposition_col,   evitals_06_col,   evitals_14_col,   evitals_23_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-08 Calculation — trauma_08","text":"df data frame tibble containing EMS data relevant columns. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column specifying unique patient records. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column indicating patient’s age numeric form. epatient_16_col column specifying unit patient age (e.g., \"Years\", \"Days\"). esituation_02_col column containing information nature patient’s condition (e.g., injury type). eresponse_05_col column specifying type response (e.g., 911 codes). transport_disposition_col column specifying transport disposition patient. evitals_06_col column containing systolic blood pressure (SBP) data initial vital signs. evitals_14_col column containing respiratory rate data initial vital signs. evitals_23_col column containing total Glasgow Coma Scale (GCS) scores initial vital signs. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-08 Calculation — trauma_08","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-08 Calculation — trauma_08","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-08 Calculation — trauma_08","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_02 = rep(\"Yes\", 5),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_23 = c(6, 7, 8, 8, 7),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # Run function with the first and last pain score columns   # Return 95% confidence intervals using the Wilson method   trauma_08(     df = test_data,     erecord_01_col = erecord_01,     incident_date_col = NULL,     patient_DOB_col = NULL,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_02_col = esituation_02,     evitals_06_col = evitals_06,     evitals_14_col = evitals_14,     evitals_23_col = evitals_23,     transport_disposition_col = edisposition_30,     confidence_interval = TRUE   ) #>  #> ── Trauma-08 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Trauma-08 ── #>  #> Running `trauma_08_population()`  [Working on 1 of 12 tasks] ●●●───────────────… #> Running `trauma_08_population()`  [Working on 2 of 12 tasks] ●●●●●●────────────… #> Running `trauma_08_population()`  [Working on 3 of 12 tasks] ●●●●●●●●●─────────… #> Running `trauma_08_population()`  [Working on 4 of 12 tasks] ●●●●●●●●●●●───────… #> Running `trauma_08_population()`  [Working on 7 of 12 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `trauma_08_population()`  [Working on 8 of 12 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `trauma_08_population()`  [Working on 9 of 12 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `trauma_08_population()`  [Working on 10 of 12 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_08_population()`  [Working on 11 of 12 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_08_population()`  [Working on 12 of 12 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Trauma-08 ── #>  #>  #> ✔ Function completed in 0.17s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 2 × 8 #>   measure   pop    numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>      <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Trauma-08 Adults         3           3     1 100%          0.310        1 #> 2 Trauma-08 Peds           2           2     1 100%          0.198        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-08 Populations — trauma_08_population","title":"Trauma-08 Populations — trauma_08_population","text":"Filters data target populations Trauma-08, categorizes records identify needed information calculations. Identifies key categories records 911 requests patients trauma GCS, systolic blood pressure, respiratory rate documented based specific criteria calculates related ECG measures. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-08 Populations — trauma_08_population","text":"","code":"trauma_08_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   transport_disposition_col,   evitals_06_col,   evitals_14_col,   evitals_23_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-08 Populations — trauma_08_population","text":"df data frame tibble containing EMS data relevant columns. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column specifying unique patient records. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column indicating patient’s age numeric form. epatient_16_col column specifying unit patient age (e.g., \"Years\", \"Days\"). esituation_02_col column containing information nature patient’s condition (e.g., injury type). eresponse_05_col column specifying type response (e.g., 911 codes). transport_disposition_col column specifying transport disposition patient. evitals_06_col column containing systolic blood pressure (SBP) data initial vital signs. evitals_14_col column containing respiratory rate data initial vital signs. evitals_23_col column containing total Glasgow Coma Scale (GCS) scores initial vital signs.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-08 Populations — trauma_08_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-08 Populations — trauma_08_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-08 Populations — trauma_08_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",     \"2023-01-01\", \"1970-06-01\")),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)   )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_02 = rep(\"Yes\", 5)   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_23 = c(6, 7, 8, 8, 7),   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )  # test the success of the function   result <- trauma_08_population(patient_scene_table = patient_table,                       response_table = response_table,                       situation_table = situation_table,                       vitals_table = vitals_table,                       disposition_table = disposition_table,                       erecord_01_col = erecord_01,                       incident_date_col = incident_date,                       patient_DOB_col = patient_dob,                       epatient_15_col = epatient_15,                       epatient_16_col = epatient_16,                       eresponse_05_col = eresponse_05,                       esituation_02_col = esituation_02,                       evitals_06_col = evitals_06,                       evitals_14_col = evitals_14,                       evitals_23_col = evitals_23,                       transport_disposition_col = edisposition_30                       ) #> Running `trauma_08_population()`  [Working on 1 of 12 tasks] ●●●───────────────… #> Running `trauma_08_population()`  [Working on 2 of 12 tasks] ●●●●●●────────────… #> Running `trauma_08_population()`  [Working on 3 of 12 tasks] ●●●●●●●●●─────────… #> Running `trauma_08_population()`  [Working on 4 of 12 tasks] ●●●●●●●●●●●───────… #> Running `trauma_08_population()`  [Working on 7 of 12 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `trauma_08_population()`  [Working on 8 of 12 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `trauma_08_population()`  [Working on 9 of 12 tasks] ●●●●●●●●●●●●●●●●●●… #> Running `trauma_08_population()`  [Working on 10 of 12 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_08_population()`  [Working on 11 of 12 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_08_population()`  [Working on 12 of 12 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 8 × 2 #>   filter                    count #>   <chr>                     <int> #> 1 911 calls                     5 #> 2 Transports                    5 #> 3 Injury cases                  5 #> 4 Non-null RR, SBP, and GCS     5 #> 5 Adults denominator            2 #> 6 Peds denominator              3 #> 7 Initial population            5 #> 8 Total dataset                 5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-14 Calculation — trauma_14","title":"Trauma-14 Calculation — trauma_14","text":"function processes EMS data generate set binary variables indicating whether specific trauma triage criteria met. output #' data frame enriched indicators analysis.  final outcome whether EMS record documents use #' pre-hospital trauma activation.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-14 Calculation — trauma_14","text":"","code":"trauma_14(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   exam_table = NULL,   procedures_table = NULL,   injury_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   eresponse_10_col,   transport_disposition_col,   edisposition_24_col,   evitals_06_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_15_col,   evitals_21_col,   eexam_16_col,   eexam_20_col,   eexam_23_col,   eexam_25_col,   eprocedures_03_col,   einjury_01_col,   einjury_03_col,   einjury_04_col,   einjury_09_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-14 Calculation — trauma_14","text":"df data frame tibble containing EMS data relevant columns. patient_scene_table data frame tibble containing fields epatient escene needed measure's calculations. response_table data frame tibble containing fields eresponse needed measure's calculations. situation_table data frame tibble containing fields esituation needed measure's calculations. vitals_table data frame tibble containing fields evitals needed measure's calculations. exam_table data frame tibble containing fields eexam needed measure's calculations. procedures_table data frame tibble containing fields eprocedures needed measure's calculations. injury_table data frame tibble containing fields einjury needed measure's calculations. disposition_table data frame tibble containing fields edisposition needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. eresponse_10_col Column name containing scene delay information. transport_disposition_col column patient transport disposition. edisposition_24_col Column name containing pre-hospital trauma alert information. evitals_06_col Column name containing systolic blood pressure (SBP) values. evitals_10_col Column name containing heart rate values. evitals_12_col Column name containing pulse oximetry values. evitals_14_col Column name containing capillary refill information. evitals_15_col Column name containing respiratory effort values. evitals_21_col Column name containing Glasgow Coma Scale (GCS) Motor values. eexam_16_col Column name containing extremities assessment details. eexam_20_col Column name containing neurological assessment details. eexam_23_col Column name containing lung assessment details. eexam_25_col Column name containing chest assessment details. eprocedures_03_col Column name containing airway management tourniquet usage details. einjury_01_col Column name containing injury cause details. einjury_03_col Column name containing trauma triage steps 1 2 information. einjury_04_col Column name containing trauma triage steps 3 4 information. einjury_09_col Column name containing fall height information. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-14 Calculation — trauma_14","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-14 Calculation — trauma_14","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-14 Calculation — trauma_14","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     eresponse_10 = rep(2210011, 5),     esituation_02 = rep(\"Yes\", 5),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_15 = c(\"apneic\", \"labored\", \"rapid\", \"shallow\", \"weak/agonal\"),     evitals_21 = c(5, 4, 3, 2, 1),     eexam_16 = c(3516043, 3516067, 3516043, 3516067, 3516067),     eexam_20 = c(3520045, 3520043, 3520019, 3520017, 3520017),     eexam_23 = c(3523011, 3523003, 3523001, 3523011, 3523003),     eexam_25 = c(3525039, 3525023, 3525005, 3525039, 3525023),     edisposition_24 = c(4224017, 4224003, 4224017, 4224003, 4224017),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007),     eprocedures_03 = c(424979004, 427753009, 429705000, 47545007, 243142003),     einjury_01 = c(\"V20\", \"V36\", \"V86\", \"V39\", \"V32\"),     einjury_03 = c(2903011, 2903009, 2903005, 3903003, 2903001),     einjury_04 = c(2904013, 2904011, 2904009, 2904007, 2904001),     einjury_09 = c(11, 12, 13, 14, 15)   )    # Run function with the first and last pain score columns   # Return 95% confidence intervals using the Wilson method   trauma_14(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     eresponse_10_col = eresponse_10,     esituation_02_col = esituation_02,     evitals_06_col = evitals_06,     evitals_10_col = evitals_10,     evitals_12_col = evitals_12,     evitals_14_col = evitals_14,     evitals_15_col = evitals_15,     evitals_21_col = evitals_21,     eexam_16_col = eexam_16,     eexam_20_col = eexam_20,     eexam_23_col = eexam_23,     eexam_25_col = eexam_25,     edisposition_24_col = edisposition_24,     transport_disposition_col = edisposition_30,     eprocedures_03_col = eprocedures_03,     einjury_01_col = einjury_01,     einjury_03_col = einjury_03,     einjury_04_col = einjury_04,     einjury_09_col = einjury_09,     confidence_interval = TRUE   ) #>  #> ── Trauma-14 ─────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for Trauma-14 ── #>  #> Running `trauma_14_population()`  [Working on 1 of 33 tasks] ●●────────────────… #> Running `trauma_14_population()`  [Working on 2 of 33 tasks] ●●●───────────────… #> Running `trauma_14_population()`  [Working on 3 of 33 tasks] ●●●●──────────────… #> Running `trauma_14_population()`  [Working on 4 of 33 tasks] ●●●●●─────────────… #> Running `trauma_14_population()`  [Working on 5 of 33 tasks] ●●●●●●────────────… #> Running `trauma_14_population()`  [Working on 6 of 33 tasks] ●●●●●●────────────… #> Running `trauma_14_population()`  [Working on 7 of 33 tasks] ●●●●●●●───────────… #> Running `trauma_14_population()`  [Working on 8 of 33 tasks] ●●●●●●●●──────────… #> Running `trauma_14_population()`  [Working on 9 of 33 tasks] ●●●●●●●●●─────────… #> Running `trauma_14_population()`  [Working on 10 of 33 tasks] ●●●●●●●●●●───────… #> Running `trauma_14_population()`  [Working on 11 of 33 tasks] ●●●●●●●●●●●──────… #> Running `trauma_14_population()`  [Working on 12 of 33 tasks] ●●●●●●●●●●●●─────… #> Running `trauma_14_population()`  [Working on 13 of 33 tasks] ●●●●●●●●●●●●●────… #> Running `trauma_14_population()`  [Working on 14 of 33 tasks] ●●●●●●●●●●●●●●───… #> Running `trauma_14_population()`  [Working on 15 of 33 tasks] ●●●●●●●●●●●●●●●──… #> Running `trauma_14_population()`  [Working on 16 of 33 tasks] ●●●●●●●●●●●●●●●●─… #> Running `trauma_14_population()`  [Working on 17 of 33 tasks] ●●●●●●●●●●●●●●●●─… #> Running `trauma_14_population()`  [Working on 18 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 19 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 20 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 21 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 22 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 23 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 24 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 25 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 26 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 27 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 28 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 29 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 30 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 31 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 32 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 33 of 33 tasks] ●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating Trauma-14 ── #>  #>  #> ✔ Function completed in 0.52s. #>  #> Warning: In `prop.test()`: Chi-squared approximation may be incorrect for any n < 10. #> # A tibble: 3 × 8 #>   measure   pop       numerator denominator  prop prop_label lower_ci upper_ci #>   <chr>     <chr>         <int>       <int> <dbl> <chr>         <dbl>    <dbl> #> 1 Trauma-14 >= 65 yrs         0           0   NaN NA          NaN          NaN #> 2 Trauma-14 10-64 yrs         3           3     1 100%          0.310        1 #> 3 Trauma-14 < 10 yrs          2           2     1 100%          0.198        1"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-14 Population — trauma_14_population","title":"Trauma-14 Population — trauma_14_population","text":"function processes EMS data generate population needed calculate Trauma-14 NEMSQA measure.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-14 Population — trauma_14_population","text":"","code":"trauma_14_population(   df = NULL,   patient_scene_table = NULL,   situation_table = NULL,   response_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   exam_table = NULL,   procedures_table = NULL,   injury_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   eresponse_10_col,   transport_disposition_col,   edisposition_24_col,   evitals_06_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_15_col,   evitals_21_col,   eexam_16_col,   eexam_20_col,   eexam_23_col,   eexam_25_col,   eprocedures_03_col,   einjury_01_col,   einjury_03_col,   einjury_04_col,   einjury_09_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-14 Population — trauma_14_population","text":"df data frame tibble containing EMS data relevant columns. patient_scene_table data frame tibble containing fields epatient escene needed measure's calculations. situation_table data frame tibble containing fields esituation needed measure's calculations. response_table data frame tibble containing fields eresponse needed measure's calculations. disposition_table data frame tibble containing fields edisposition needed measure's calculations. vitals_table data frame tibble containing fields evitals needed measure's calculations. exam_table data frame tibble containing fields eexam needed measure's calculations. procedures_table data frame tibble containing fields eprocedures needed measure's calculations. injury_table data frame tibble containing fields einjury needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. eresponse_10_col Column name containing scene delay information. transport_disposition_col column patient transport disposition. edisposition_24_col Column name containing pre-hospital trauma alert information. evitals_06_col Column name containing systolic blood pressure (SBP) values. evitals_10_col Column name containing heart rate values. evitals_12_col Column name containing pulse oximetry values. evitals_14_col Column name containing capillary refill information. evitals_15_col Column name containing respiratory effort values. evitals_21_col Column name containing Glasgow Coma Scale (GCS) Motor values. eexam_16_col Column name containing extremities assessment details. eexam_20_col Column name containing neurological assessment details. eexam_23_col Column name containing lung assessment details. eexam_25_col Column name containing chest assessment details. eprocedures_03_col Column name containing airway management tourniquet usage details. einjury_01_col Column name containing injury cause details. einjury_03_col Column name containing trauma triage steps 1 2 information. einjury_04_col Column name containing trauma triage steps 3 4 information. einjury_09_col Column name containing fall height information.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-14 Population — trauma_14_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-14 Population — trauma_14_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-14 Population — trauma_14_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",     \"2023-01-01\", \"1970-06-01\")),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5),     eresponse_10 = rep(2210011, 5)   )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_02 = rep(\"Yes\", 5),   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_15 = c(\"apneic\", \"labored\", \"rapid\", \"shallow\", \"weak/agonal\"),     evitals_21 = c(5, 4, 3, 2, 1)   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_24 = c(4224017, 4224003, 4224017, 4224003, 4224017),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # injury table   injury_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     einjury_01 = c(\"V20\", \"V36\", \"V86\", \"V39\", \"V32\"),     einjury_03 = c(2903011, 2903009, 2903005, 3903003, 2903001),     einjury_04 = c(2904013, 2904011, 2904009, 2904007, 2904001),     einjury_09 = c(11, 12, 13, 14, 15)   )    # exam table   exam_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eexam_16 = c(3516043, 3516067, 3516043, 3516067, 3516067),     eexam_20 = c(3520045, 3520043, 3520019, 3520017, 3520017),     eexam_23 = c(3523011, 3523003, 3523001, 3523011, 3523003),     eexam_25 = c(3525039, 3525023, 3525005, 3525039, 3525023)   )    # procedures table   procedures_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eprocedures_03 = c(424979004, 427753009, 429705000, 47545007, 243142003)   )    # test the success of the function   result <- trauma_14_population(patient_scene_table = patient_table,                       response_table = response_table,                       situation_table = situation_table,                       vitals_table = vitals_table,                       disposition_table = disposition_table,                       exam_table = exam_table,                       injury_table = injury_table,                       procedures_table = procedures_table,                       erecord_01_col = erecord_01,                       incident_date_col = incident_date,                       patient_DOB_col = patient_dob,                       epatient_15_col = epatient_15,                       epatient_16_col = epatient_16,                       eresponse_05_col = eresponse_05,                       eresponse_10_col = eresponse_10,                       esituation_02_col = esituation_02,                       evitals_06_col = evitals_06,                       evitals_10_col = evitals_10,                       evitals_12_col = evitals_12,                       evitals_14_col = evitals_14,                       evitals_15_col = evitals_15,                       evitals_21_col = evitals_21,                       eexam_16_col = eexam_16,                       eexam_20_col = eexam_20,                       eexam_23_col = eexam_23,                       eexam_25_col = eexam_25,                       edisposition_24_col = edisposition_24,                       transport_disposition_col = edisposition_30,                       eprocedures_03_col = eprocedures_03,                       einjury_01_col = einjury_01,                       einjury_03_col = einjury_03,                       einjury_04_col = einjury_04,                       einjury_09_col = einjury_09   ) #> Running `trauma_14_population()`  [Working on 1 of 33 tasks] ●●────────────────… #> Running `trauma_14_population()`  [Working on 2 of 33 tasks] ●●●───────────────… #> Running `trauma_14_population()`  [Working on 3 of 33 tasks] ●●●●──────────────… #> Running `trauma_14_population()`  [Working on 4 of 33 tasks] ●●●●●─────────────… #> Running `trauma_14_population()`  [Working on 5 of 33 tasks] ●●●●●●────────────… #> Running `trauma_14_population()`  [Working on 6 of 33 tasks] ●●●●●●────────────… #> Running `trauma_14_population()`  [Working on 7 of 33 tasks] ●●●●●●●───────────… #> Running `trauma_14_population()`  [Working on 8 of 33 tasks] ●●●●●●●●──────────… #> Running `trauma_14_population()`  [Working on 9 of 33 tasks] ●●●●●●●●●─────────… #> Running `trauma_14_population()`  [Working on 10 of 33 tasks] ●●●●●●●●●●───────… #> Running `trauma_14_population()`  [Working on 11 of 33 tasks] ●●●●●●●●●●●──────… #> Running `trauma_14_population()`  [Working on 12 of 33 tasks] ●●●●●●●●●●●●─────… #> Running `trauma_14_population()`  [Working on 13 of 33 tasks] ●●●●●●●●●●●●●────… #> Running `trauma_14_population()`  [Working on 14 of 33 tasks] ●●●●●●●●●●●●●●───… #> Running `trauma_14_population()`  [Working on 15 of 33 tasks] ●●●●●●●●●●●●●●●──… #> Running `trauma_14_population()`  [Working on 16 of 33 tasks] ●●●●●●●●●●●●●●●●─… #> Running `trauma_14_population()`  [Working on 17 of 33 tasks] ●●●●●●●●●●●●●●●●─… #> Running `trauma_14_population()`  [Working on 18 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 19 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 20 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 21 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 22 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 23 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 24 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 25 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 26 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 27 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 28 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 29 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 30 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 31 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 32 of 33 tasks] ●●●●●●●●●●●●●●●●●… #> Running `trauma_14_population()`  [Working on 33 of 33 tasks] ●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 30 × 2 #>    filter                                                                  count #>    <chr>                                                                   <int> #>  1 Situation possible injury                                                   5 #>  2 911 calls                                                                   5 #>  3 Transports                                                                  5 #>  4 GCS Motor 1-5                                                               5 #>  5 Breath sounds absent, decreased, increased respiratory effort               5 #>  6 Flail segment, retraction, accessory muscles used in breathing              5 #>  7 Respiratory effort apneic, labored, mech. assist, rapid, shallow, weak…     5 #>  8 Airway management procedures                                                5 #>  9 Pulse oximetry < 90                                                         5 #> 10 SBP < 110                                                                   5 #> # ℹ 20 more rows"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":null,"dir":"Reference","previous_headings":"","what":"TTR-01 Calculation — ttr_01","title":"TTR-01 Calculation — ttr_01","text":"function calculates TTR-01 measure, evaluates completeness vitals documentation patients experiencing cardiac arrest also transported 911 response. determines total population, adult population, pediatric population meeting criteria TTR_01 measure.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TTR-01 Calculation — ttr_01","text":"","code":"ttr_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   arrest_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   transport_disposition_col,   earrest_01_col,   evitals_06_col,   evitals_07_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_23_col,   evitals_26_col,   confidence_interval = FALSE,   method = c(\"wilson\", \"clopper-pearson\"),   conf.level = 0.95,   correct = TRUE,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TTR-01 Calculation — ttr_01","text":"df data frame tibble containing dataset analyze. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. arrest_table data frame tibble containing earrest fields needed measure's calculations. Default NULL. erecord_01_col column specifying unique patient records. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column indicating patient’s age numeric form. epatient_16_col column specifying unit patient age (e.g., \"Years\", \"Days\"). eresponse_05_col column specifying type response (e.g., 911 codes). transport_disposition_col column specifying transport disposition patient. earrest_01_col column containing cardiac arrest data. evitals_06_col column containing systolic blood pressure (SBP) data initial vital signs. evitals_07_col column containing diastolic blood pressure (DBP) data initial vital signs. evitals_10_col column containing heart rate data initial vital signs. evitals_12_col column containing spO2 data initial vital signs. evitals_14_col column containing respiratory rate data initial vital signs. evitals_23_col column containing total Glasgow Coma Scale (GCS) scores initial vital signs. evitals_26_col column containing alert, verbal, painful, unresponsive (AVPU) vital signs. confidence_interval Logical. TRUE, function calculates confidence interval proportion estimate. method Character. Specifies method used calculate confidence intervals. Options \"wilson\" (Wilson score interval) \"clopper-pearson\" (exact binomial interval). Partial matching supported, \"w\" \"c\" can used shorthand. conf.level Numeric. confidence level interval, expressed proportion (e.g., 0.95 95% confidence interval). Defaults 0.95. correct Logical. TRUE, applies continuity correction Wilson score interval method = \"wilson\". Defaults TRUE. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TTR-01 Calculation — ttr_01","text":"data.frame summarizing results two population groups (, Adults Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents meeting measure. denominator: Total count included incidents. prop: Proportion incidents meeting measure. prop_label: Proportion formatted percentage specified number decimal places. lower_ci: Lower bound confidence interval prop (confidence_interval = TRUE). upper_ci: Upper bound confidence interval prop (confidence_interval = TRUE).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TTR-01 Calculation — ttr_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TTR-01 Calculation — ttr_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",     \"2023-01-01\", \"1970-06-01\")),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     earrest_01 = rep(\"No\", 5),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_07 = c(80, 90, 50, 60, 87),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_23 = c(6, 7, 8, 9, 10),     evitals_26 = c(3326007, 3326005, 3326003, 3326001, 3326007),     edisposition_30 = c(4230013, 4230009, 4230013, 4230009, 4230013)   )    # Run function with the first and last pain score columns   # Return 95% confidence intervals using the Wilson method   ttr_01(     df = test_data,     erecord_01_col = erecord_01,     incident_date_col = incident_date,     patient_DOB_col = patient_dob,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     earrest_01_col = earrest_01,     evitals_06_col = evitals_06,     evitals_07_col = evitals_07,     evitals_10_col = evitals_10,     evitals_12_col = evitals_12,     evitals_14_col = evitals_14,     evitals_23_col = evitals_23,     evitals_26_col = evitals_26,     transport_disposition_col = edisposition_30   ) #>  #> ── TTR-01 ────────────────────────────────────────────────────────────────────── #>  #> ── Gathering Records for TTR-01 ── #>  #> Running `ttr_01_population()`  [Working on 1 of 13 tasks] ●●●──────────────────… #> Running `ttr_01_population()`  [Working on 2 of 13 tasks] ●●●●●●───────────────… #> Running `ttr_01_population()`  [Working on 3 of 13 tasks] ●●●●●●●●─────────────… #> Running `ttr_01_population()`  [Working on 4 of 13 tasks] ●●●●●●●●●●───────────… #> Running `ttr_01_population()`  [Working on 5 of 13 tasks] ●●●●●●●●●●●●●────────… #> Running `ttr_01_population()`  [Working on 6 of 13 tasks] ●●●●●●●●●●●●●●●──────… #> Running `ttr_01_population()`  [Working on 7 of 13 tasks] ●●●●●●●●●●●●●●●●●────… #> Running `ttr_01_population()`  [Working on 8 of 13 tasks] ●●●●●●●●●●●●●●●●●●●──… #> Running `ttr_01_population()`  [Working on 9 of 13 tasks] ●●●●●●●●●●●●●●●●●●●●●… #> Running `ttr_01_population()`  [Working on 10 of 13 tasks] ●●●●●●●●●●●●●●●●●●●●… #> Running `ttr_01_population()`  [Working on 13 of 13 tasks] ●●●●●●●●●●●●●●●●●●●●… #>  #>  #>  #> ── Calculating TTR-01 ── #>  #>  #> ✔ Function completed in 0.17s. #>  #> # A tibble: 2 × 6 #>   measure pop    numerator denominator  prop prop_label #>   <chr>   <chr>      <int>       <int> <dbl> <chr>      #> 1 TTR-01  Adults         3           3     1 100%       #> 2 TTR-01  Peds           3           3     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"TTR-01 Populations — ttr_01_population","title":"TTR-01 Populations — ttr_01_population","text":"Filters data target populations TTR-01, categorizes records identify needed information calculations. Identifies key categories records 911 requests patients transported EMS basic set vital signs documented based specific criteria calculates related ECG measures. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TTR-01 Populations — ttr_01_population","text":"","code":"ttr_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   arrest_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   transport_disposition_col,   earrest_01_col,   evitals_06_col,   evitals_07_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_23_col,   evitals_26_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TTR-01 Populations — ttr_01_population","text":"df data frame tibble containing dataset analyze. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. arrest_table data frame tibble containing earrest fields needed measure's calculations. Default NULL. erecord_01_col column specifying unique patient records. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column indicating patient’s age numeric form. epatient_16_col column specifying unit patient age (e.g., \"Years\", \"Days\"). eresponse_05_col column specifying type response (e.g., 911 codes). transport_disposition_col column specifying transport disposition patient. earrest_01_col column containing cardiac arrest data. evitals_06_col column containing systolic blood pressure (SBP) data initial vital signs. evitals_07_col column containing diastolic blood pressure (DBP) data initial vital signs. evitals_10_col column containing heart rate data initial vital signs. evitals_12_col column containing spO2 data initial vital signs. evitals_14_col column containing respiratory rate data initial vital signs. evitals_23_col column containing total Glasgow Coma Scale (GCS) scores initial vital signs. evitals_26_col column containing alert, verbal, painful, unresponsive (AVPU) vital signs.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TTR-01 Populations — ttr_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TTR-01 Populations — ttr_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TTR-01 Populations — ttr_01_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",     \"2023-01-01\", \"1970-06-01\")),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5),   )    # arrest table   arrest_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     earrest_01 = rep(\"No\", 5)   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_07 = c(80, 90, 50, 60, 87),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_23 = c(6, 7, 8, 9, 10),     evitals_26 = c(3326007, 3326005, 3326003, 3326001, 3326007),   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_30 = c(4230013, 4230009, 4230013, 4230009, 4230013)   )    # test the success of the function   result <- ttr_01_population(patient_scene_table = patient_table,                         response_table = response_table,                         arrest_table = arrest_table,                         vitals_table = vitals_table,                         disposition_table = disposition_table,                         erecord_01_col = erecord_01,                         incident_date_col = incident_date,                         patient_DOB_col = patient_dob,                         epatient_15_col = epatient_15,                         epatient_16_col = epatient_16,                         eresponse_05_col = eresponse_05,                         earrest_01_col = earrest_01,                         evitals_06_col = evitals_06,                         evitals_07_col = evitals_07,                         evitals_10_col = evitals_10,                         evitals_12_col = evitals_12,                         evitals_14_col = evitals_14,                         evitals_23_col = evitals_23,                         evitals_26_col = evitals_26,                         transport_disposition_col = edisposition_30                    ) #> Running `ttr_01_population()`  [Working on 1 of 13 tasks] ●●●──────────────────… #> Running `ttr_01_population()`  [Working on 2 of 13 tasks] ●●●●●●───────────────… #> Running `ttr_01_population()`  [Working on 3 of 13 tasks] ●●●●●●●●─────────────… #> Running `ttr_01_population()`  [Working on 4 of 13 tasks] ●●●●●●●●●●───────────… #> Running `ttr_01_population()`  [Working on 5 of 13 tasks] ●●●●●●●●●●●●●────────… #> Running `ttr_01_population()`  [Working on 6 of 13 tasks] ●●●●●●●●●●●●●●●──────… #> Running `ttr_01_population()`  [Working on 7 of 13 tasks] ●●●●●●●●●●●●●●●●●────… #> Running `ttr_01_population()`  [Working on 8 of 13 tasks] ●●●●●●●●●●●●●●●●●●●──… #> Running `ttr_01_population()`  [Working on 9 of 13 tasks] ●●●●●●●●●●●●●●●●●●●●●… #> Running `ttr_01_population()`  [Working on 10 of 13 tasks] ●●●●●●●●●●●●●●●●●●●●… #> Running `ttr_01_population()`  [Working on 13 of 13 tasks] ●●●●●●●●●●●●●●●●●●●●… #>   # show the results of filtering at each step result$filter_process #> # A tibble: 8 × 2 #>   filter                                           count #>   <chr>                                            <int> #> 1 911 calls                                            5 #> 2 Non-transports                                       5 #> 3 Non-cardiac arrest                                   5 #> 4 Non-null SBP, DBP, HR, SPO2, RR, and GCS or AVPU     5 #> 5 Adults denominator                                   2 #> 6 Peds denominator                                     3 #> 7 Initial population                                   5 #> 8 Total dataset                                        5"},{"path":"https://bemts-hhs.github.io/nemsqar/news/index.html","id":"nemsqar-110","dir":"Changelog","previous_headings":"","what":"nemsqar 1.1.0","title":"nemsqar 1.1.0","text":"CRAN release: 2025-03-13","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/news/index.html","id":"enhancements-1-1-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"nemsqar 1.1.0","text":"Ensure warning messages denominator < 10 elegant helpful, nemsqa_binomial_confit() handles division zero cases well. Updated wrapper functions (e.g., airway_01()) support optional confidence interval calculation. Maintained full backward compatibility nemsqar 1.0.0 setting confidence_interval = FALSE default behavior. Dynamic results_summarize(): Enhanced results_summarize() dynamically calculate specified groups, utilizing previously unused population_labels object. reduces unnecessary calculations streamlines function performance. Updated expanded documentation results_summarize() summarize_measure(), offering clearer usage instructions examples enhance user experience. Refined documentation multiple functions, improving clarity usability.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/news/index.html","id":"nemsqar-100","dir":"Changelog","previous_headings":"","what":"nemsqar 1.0.0","title":"nemsqar 1.0.0","text":"CRAN release: 2025-03-05","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/news/index.html","id":"initial-cran-release-1-0-0","dir":"Changelog","previous_headings":"","what":"Initial CRAN Release","title":"nemsqar 1.0.0","text":"First official submission nemsqar CRAN.","code":""},{"path":[]},{"path":"https://bemts-hhs.github.io/nemsqar/news/index.html","id":"package-inception-0-1-0","dir":"Changelog","previous_headings":"","what":"Package Inception","title":"nemsqar 0.1.0","text":"nemsqar born! initial version laid foundation calculating National EMS Quality Alliance (NEMSQA) performance measures structured modular way.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/news/index.html","id":"key-features-0-1-0","dir":"Changelog","previous_headings":"Package Inception","what":"Key Features","title":"nemsqar 0.1.0","text":"Designed core functions identify target populations compute performance measures EMS quality metrics. Implemented modular structure measure calculations, _population workhorse functions handling data extraction measure_## wrapper functions streamlining performance calculations. Developed functions align NEMSQA measure technical documents.","code":""},{"path":[]},{"path":"https://bemts-hhs.github.io/nemsqar/news/index.html","id":"measure-functions-0-1-0","dir":"Changelog","previous_headings":"Package Inception > Implemented Functions","what":"Measure Functions","title":"nemsqar 0.1.0","text":"airway_01(), airway_05(), airway_18() asthma_01(), hypoglycemia_01(), pediatrics_03b() respiratory_01(), respiratory_02(), safety_01() safety_02(), safety_04(), seizure_02() stroke_01(), syncope_01(), tbi_01() trauma_01(), trauma_03(), trauma_04() trauma_08(), trauma_14(), ttr_01()","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/news/index.html","id":"population-functions-0-1-0","dir":"Changelog","previous_headings":"Package Inception > Implemented Functions","what":"Population Functions","title":"nemsqar 0.1.0","text":"airway_01_population(), airway_05_population(), airway_18_population() asthma_01_population(), hypoglycemia_01_population(), pediatrics_03b_population() respiratory_01_population(), respiratory_02_population(), safety_01_population() safety_02_population(), safety_04_population(), seizure_02_population() stroke_01_population(), syncope_01_population(), tbi_01_population() trauma_01_population(), trauma_03_population(), trauma_04_population() trauma_08_population(), trauma_14_population(), ttr_01_population()","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/news/index.html","id":"utility-functions-0-1-0","dir":"Changelog","previous_headings":"Package Inception > Implemented Functions","what":"Utility Functions","title":"nemsqar 0.1.0","text":"results_summarize(), summarize_measure()","code":""}]
