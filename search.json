[{"path":"https://bemts-hhs.github.io/nemsqar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 nemsqar authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Foss. Author, maintainer. Samuel Kordik. Author. Alyssa Green. Contributor. Iowa Department Health Human Services. Copyright holder.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Foss N, Kordik S (2025). nemsqar: National Emergency Medical Service Quality Alliance Measure Calculations. R package version 1.0.0, https://bemts-hhs.github.io/nemsqar/, https://github.com/bemts-hhs/nemsqar.","code":"@Manual{,   title = {nemsqar: National Emergency Medical Service Quality Alliance Measure Calculations},   author = {Nicolas Foss and Samuel Kordik},   year = {2025},   note = {R package version 1.0.0, https://bemts-hhs.github.io/nemsqar/},   url = {https://github.com/bemts-hhs/nemsqar}, }"},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"nemsqar-","dir":"","previous_headings":"","what":"National Emergency Medical Service Quality Alliance Measure Calculations","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"nemsqar R package designed automate calculation EMS quality metrics defined National EMS Quality Alliance (NEMSQA). focus enhancing EMS service performance reliable, evidence-based quality measures, nemsqar aims streamline metric calculation healthcare providers, EMS agencies, researchers dedicated improving patient outcomes.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"can install development version nemsqar : Additionally, may install current version nemsqar CRAN via:","code":"# install.packages(\"remotes\") remotes::install_github(\"bemts-hhs/nemsqar\") install.packages(\"nemsqar\")"},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"functionality","dir":"","previous_headings":"","what":"Functionality","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"nemsqar functions always automate calculation service‚Äôs performance (even system‚Äôs) currently approved list NEMSQA Measures (see ). Given large number functions, please check full package documentation resource .","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"about-nemsqa","dir":"","previous_headings":"","what":"About NEMSQA","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"National EMS Quality Alliance (NEMSQA) committed developing endorsing quality measures improve patient provider experiences within EMS healthcare systems. Originating EMS Compass Project (2014), NEMSQA evolved independent organization, tasked completing sustaining development impactful, evidence-based EMS quality measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"history-of-ems-quality-measure-development","dir":"","previous_headings":"About NEMSQA","what":"History of EMS Quality Measure Development","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"structured development EMS quality measures began EMS Compass Project, initiative funded National Highway Traffic Safety Administration (NHTSA) led National Association State EMS Officials (NASEMSO) establish relevant performance measures EMS agencies. Since , field advanced guidance NEMSQA, works create sustainable, practical, high-impact EMS quality measures collaborative, scientifically driven process. NEMSQA, please visit official website: nemsqa.org.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"nemsqa-measure-set","dir":"","previous_headings":"","what":"NEMSQA Measure Set","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"National EMS Quality Alliance (NEMSQA) Measure Set includes comprehensive list EMS quality measures developed approved national use. measures intended guide EMS agencies collecting data assess improve patient care. measures approved NEMSQA Measure Development Committee Board Trustees August 2019. Access full technical specifications measures available NEMSQA website creating user profile.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"key-for-developed-in-package-column","dir":"","previous_headings":"NEMSQA Measure Set","what":"Key for Developed in Package? Column","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"Developed package: ‚úîÔ∏è Slated future development: üîß","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"Interested persons may reference following links resources via NEMSQA‚Äôs website. Note - materials may require free membership access. Measure Specification Table (NEMSQA)_2021: quick-reference table includes broad-view measure specifications (.e., numerator denominator criteria) measure. Project Summary Measure Narratives: overview EMS Compass 2.0 project narratives measure, include systems implications. Frequently Asked Questions: Answers commonly asked questions. NEMSQA Measure Technical Release Notes_2021: reference table documents changes made NEMSQA measures 2021 annual review. Fact Sheet: info page explaining agencies systems migrate EMS Compass legacy/candidate measures National EMS Quality Alliance Measure Set.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/index.html","id":"thanks","dir":"","previous_headings":"","what":"Thanks!","title":"National Emergency Medical Service Quality Alliance Measure Calculations","text":"big loud thanks Sheree Murphy NEMSQA, Peter Geissert Oregon EMS & Trauma Systems, Jeffrey Jarvis medical director Metropolitan Area EMS Authority (Fort Worth, Texas), Marshall Washick (Washington D.C. Fire) input consultation!","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-01 Calculation ‚Äî airway_01","title":"Airway-01 Calculation ‚Äî airway_01","text":"Calculates NEMSQA Airway-01 measure. Calculates proportion times first endotracheal intubation attempt successful peri-intubation hypoxia hypotension.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-01 Calculation ‚Äî airway_01","text":"","code":"airway_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   earrest_01_col,   eresponse_05_col,   evitals_01_col,   evitals_06_col,   evitals_12_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col,   eprocedures_05_col,   eprocedures_06_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-01 Calculation ‚Äî airway_01","text":"df dataframe tibble containing EMS data row represents observation columns represent features. patient_scene_table data.frame tibble containing least epatient, escene, earrest.01 fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. arrest_table data.frame tibble containing least earrest fields needed measure's calculations. procedures_table dataframe tibble containing least eProcedures fields needed. vitals_table dataframe tibble containing least eVitals fields needed. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minutes\"). earrest_01_col Column representing whether patient arrest. eresponse_05_col Column contains eResponse.05. evitals_01_col Date-time POSIXct column containing vital signs date/time evitals_06_col Numeric column containing systolic blood pressure values evitals_12_col Numeric column containing pulse oximetry values. eprocedures_01_col Date-time POSIXct column procedures eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column containing procedure codes without procedure names. eprocedures_05_col Column containing count many times procedure attempted. eprocedures_06_col Column indicating whether procedure successful. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-01 Calculation ‚Äî airway_01","text":"data.frame summarizing results three population groups (, Adults, Peds) following columns: pop: Population type (, Adults, Peds). numerator: Count incidents beta-agonist medications administered. denominator: Total count incidents. prop: Proportion incidents involving beta-agonist medications. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-01 Calculation ‚Äî airway_01","text":"Samuel Kordik, BBA, BS, Nicolas Foss Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-01 Calculation ‚Äî airway_01","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 22:59:00\",     \"2025-01-05 11:58:00\", \"2025-02-01 18:57:00\", \"2025-01-01 04:58:00\",     \"2025-06-01 12:57:00\", \"2025-01-01 23:05:00\", \"2025-01-05 12:04:00\",     \"2025-02-01 19:03:00\", \"2025-01-01 05:02:00\", \"2025-06-01 13:01:00\")),     evitals_06 = rep(c(90, 100, 102, 103, 104), 2),     evitals_12 = rep(c(90, 91, 92, 93, 94), 2)    )  # arrest table   arrest_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     earrest_01 = rep(\"No\", 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2),     eprocedures_05 = rep(1, 10),     eprocedures_06 = rep(9923003, 10)    )  # Run the function airway_01(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          arrest_table = arrest_table,          response_table = response_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          eprocedures_05_col = eprocedures_05,          eprocedures_06_col = eprocedures_06,          earrest_01_col = earrest_01,          evitals_01_col = evitals_01,          evitals_06_col = evitals_06,          evitals_12_col = evitals_12          ) #>  #> ‚îÄ‚îÄ Airway-01 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Airway-01 ‚îÄ‚îÄ #>  #> Running `airway_01_population()`  [Working on 1 of 19 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 2 of 19 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 3 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 4 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 5 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 6 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 7 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 8 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 9 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 10 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 11 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 12 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 13 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 14 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 15 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 16 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 17 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 18 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 19 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Airway-01 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.37s. #>  #> # A tibble: 2 √ó 6 #>   measure   pop    numerator denominator  prop prop_label #>   <chr>     <chr>      <int>       <int> <dbl> <chr>      #> 1 Airway-01 Adults         2           2     1 100%       #> 2 Airway-01 Peds           3           3     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-01 Population ‚Äî airway_01_population","title":"Airway-01 Population ‚Äî airway_01_population","text":"function processes analyzes dataset generate populations interest needed perform calculations obtain performance data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-01 Population ‚Äî airway_01_population","text":"","code":"airway_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   earrest_01_col,   eresponse_05_col,   evitals_01_col,   evitals_06_col,   evitals_12_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col,   eprocedures_05_col,   eprocedures_06_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-01 Population ‚Äî airway_01_population","text":"df dataframe tibble contianing EMS data row represents observation columns represent features. patient_scene_table data.frame tibble containing least epatient, escene, earrest.01 fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. arrest_table data.frame tibble containing least earrest fields needed measure's calculations. procedures_table dataframe tibble containing least eProcedures fields needed. vitals_table dataframe tibble containing least eVitals fields needed. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minutes\"). earrest_01_col Column representing whether patient arrest. eresponse_05_col Column contains eResponse.05. evitals_01_col Date-time POSIXct column containing vital signs date/time evitals_06_col Numeric column containing systolic blood pressure values evitals_12_col Numeric column containing pulse oximetry values. eprocedures_01_col Date-time POSIXct column procedures eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column containing procedure codes without procedure names. eprocedures_05_col Column containing count many times procedure attempted. eprocedures_06_col Column indicating whether procedure successful.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-01 Population ‚Äî airway_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-01 Population ‚Äî airway_01_population","text":"Samuel Kordik, BBA, BS, Nicolas Foss Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-01 Population ‚Äî airway_01_population","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 22:59:00\",     \"2025-01-05 11:58:00\", \"2025-02-01 18:57:00\", \"2025-01-01 04:58:00\",     \"2025-06-01 12:57:00\", \"2025-01-01 23:05:00\", \"2025-01-05 12:04:00\",     \"2025-02-01 19:03:00\", \"2025-01-01 05:02:00\", \"2025-06-01 13:01:00\")),     evitals_06 = rep(c(90, 100, 102, 103, 104), 2),     evitals_12 = rep(c(90, 91, 92, 93, 94), 2)    )  # arrest table   arrest_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     earrest_01 = rep(\"No\", 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2),     eprocedures_05 = rep(1, 10),     eprocedures_06 = rep(9923003, 10)    )  # Run the function result <- airway_01_population(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          arrest_table = arrest_table,          response_table = response_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          eprocedures_05_col = eprocedures_05,          eprocedures_06_col = eprocedures_06,          earrest_01_col = earrest_01,          evitals_01_col = evitals_01,          evitals_06_col = evitals_06,          evitals_12_col = evitals_12          ) #> Running `airway_01_population()`  [Working on 1 of 19 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 2 of 19 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 3 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 4 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 5 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 6 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 7 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 8 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 9 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_01_population()`  [Working on 10 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 11 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 12 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 13 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 14 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 15 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 16 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 17 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 18 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_01_population()`  [Working on 19 of 19 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 19 √ó 2 #>    filter                                                                  count #>    <chr>                                                                   <int> #>  1 Invasive airway procedures                                                  5 #>  2 Successful invasive airway procedures                                       5 #>  3 First attempt successful invasive airway procedures                         5 #>  4 911 calls                                                                   5 #>  5 Excluded cardiac arrests                                                    0 #>  6 Excluded newborns                                                           0 #>  7 All initial population successful intubation with no hypoxia                5 #>  8 All initial population successful intubation with no hypotension            5 #>  9 Initial population ages >= 10 yrs successful intubation with no hypoxi‚Ä¶     2 #> 10 Initial population ages 1-9 yrs successful intubation with no hypoxia/‚Ä¶     3 #> 11 Initial population ages < 1 yrs & > 28 days successful intubation with‚Ä¶     0 #> 12 Initial population ages < 28 days successful intubation with no hypoxi‚Ä¶     0 #> 13 All initial population successful intubation with no hypoxia or hypoxi‚Ä¶     5 #> 14 Adults successful intubation no hypoxia or hypotension                      2 #> 15 Peds successful intubation no hypoxia or hypotension                        3 #> 16 Adults denominator                                                          2 #> 17 Peds denominator                                                            3 #> 18 Initial Population                                                          5 #> 19 Total procedures in dataset                                                 5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-05 Calculation ‚Äî airway_05","title":"Airway-05 Calculation ‚Äî airway_05","text":"Calculates NEMSQA Airway-05 measure. Calculates proportion endotracheal intubation attempts adequate oxygenation.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-05 Calculation ‚Äî airway_05","text":"","code":"airway_05(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   earrest_01_col,   eresponse_05_col,   evitals_01_col,   evitals_12_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-05 Calculation ‚Äî airway_05","text":"df dataframe tibble containing EMS data row represents observation columns represent features. Default NULL. patient_scene_table data.frame tibble containing least epatient, escene, earrest.01 fields fact table. Default NULL. response_table data.frame tibble containing least eresponse fields needed measure's calculations. Default NULL. arrest_table data.frame tibble containing least earrest fields needed measure's calculations. Default NULL. procedures_table dataframe tibble containing least eProcedures fields needed. Default NULL. vitals_table dataframe tibble containing least eVitals fields needed. Default NULL. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. Default NULL. patient_DOB_col Column contains patient's date birth. Default NULL. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minutes\"). earrest_01_col Column representing whether patient arrest. eresponse_05_col Column contains eResponse.05. evitals_01_col Date-time POSIXct column containing vital signs date/time evitals_12_col Numeric column containing pulse oximetry values. eprocedures_01_col Date-time POSIXct column procedures eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column containing procedure codes without procedure names. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-05 Calculation ‚Äî airway_05","text":"data.frame summarizing results three population groups (, Adults, Peds) following columns: measure: name measure calculated. pop: Population type (, Adults, Peds). numerator: Count incidents beta-agonist medications administered. denominator: Total count incidents. prop: Proportion incidents involving beta-agonist medications. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-05 Calculation ‚Äî airway_05","text":"Samuel Kordik, BBA, BS, Nicolas Foss Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-05 Calculation ‚Äî airway_05","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 22:59:00\",     \"2025-01-05 11:58:00\", \"2025-02-01 18:57:00\", \"2025-01-01 04:58:00\",     \"2025-06-01 12:57:00\", \"2025-01-01 23:05:00\", \"2025-01-05 12:04:00\",     \"2025-02-01 19:03:00\", \"2025-01-01 05:02:00\", \"2025-06-01 13:01:00\")),     evitals_12 = rep(c(94, 95, 96, 97, 98), 2)    )  # arrest table   arrest_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     earrest_01 = rep(\"No\", 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2)    )  # Run the function airway_05(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          arrest_table = arrest_table,          response_table = response_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          earrest_01_col = earrest_01,          evitals_01_col = evitals_01,          evitals_12_col = evitals_12          ) #>  #> ‚îÄ‚îÄ Airway-05 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Airway-05 ‚îÄ‚îÄ #>  #> Running `airway_05_population()`  [Working on 1 of 15 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 2 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 3 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 4 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 5 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 6 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 7 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 8 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 9 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 10 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 11 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 12 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 13 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 14 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 15 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Airway-05 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.23s. #>  #> # A tibble: 2 √ó 6 #>   measure   pop    numerator denominator  prop prop_label #>   <chr>     <chr>      <dbl>       <int> <dbl> <chr>      #> 1 Airway-05 Adults         2           2     1 100%       #> 2 Airway-05 Peds           3           3     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-05 Population ‚Äî airway_05_population","title":"Airway-05 Population ‚Äî airway_05_population","text":"function processes analyzes dataset generate populations interest needed perform calculations obtain performance data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-05 Population ‚Äî airway_05_population","text":"","code":"airway_05_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   earrest_01_col,   eresponse_05_col,   evitals_01_col,   evitals_12_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-05 Population ‚Äî airway_05_population","text":"df dataframe tibble contianing EMS data row represents observation columns represent features. Default NULL. patient_scene_table data.frame tibble containing least epatient, escene, earrest.01 fields fact table. Default NULL. response_table data.frame tibble containing least eresponse fields needed measure's calculations. Default NULL. arrest_table data.frame tibble containing least earrest fields needed measure's calculations. Default NULL. procedures_table dataframe tibble containing least eProcedures fields needed. Default NULL. vitals_table dataframe tibble containing least eVitals fields needed. Default NULL. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minutes\"). earrest_01_col Column representing whether patient arrest. eresponse_05_col Column contains eResponse.05. evitals_01_col Date-time POSIXct column containing vital signs date/time evitals_12_col Numeric column containing pulse oximetry values. eprocedures_01_col Date-time POSIXct column procedures eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column containing procedure codes without procedure names.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-05 Population ‚Äî airway_05_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-05 Population ‚Äî airway_05_population","text":"Samuel Kordik, BBA, BS, Nicolas Foss Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_05_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-05 Population ‚Äî airway_05_population","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 22:59:00\",     \"2025-01-05 11:58:00\", \"2025-02-01 18:57:00\", \"2025-01-01 04:58:00\",     \"2025-06-01 12:57:00\", \"2025-01-01 23:05:00\", \"2025-01-05 12:04:00\",     \"2025-02-01 19:03:00\", \"2025-01-01 05:02:00\", \"2025-06-01 13:01:00\")),     evitals_12 = rep(c(90, 91, 92, 93, 94), 2)    )  # arrest table   arrest_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     earrest_01 = rep(\"No\", 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2)    )  # Run the function result <- airway_05_population(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          arrest_table = arrest_table,          response_table = response_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          earrest_01_col = earrest_01,          evitals_01_col = evitals_01,          evitals_12_col = evitals_12          ) #> Running `airway_05_population()`  [Working on 1 of 15 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 2 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 3 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 4 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 5 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 6 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 7 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 8 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `airway_05_population()`  [Working on 9 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 10 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 11 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 12 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 13 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 14 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_05_population()`  [Working on 15 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 11 √ó 2 #>    filter                                                        count #>    <chr>                                                         <dbl> #>  1 Invasive airway procedures                                        5 #>  2 911 calls                                                         5 #>  3 Excluded cardiac arrests                                          0 #>  4 Excluded newborns                                                 0 #>  5 All initial population intubation with adequate oxygen levels     1 #>  6 Adults intubation with adequate oxygen levels                     1 #>  7 Peds intubation with adequate oxygen levels                       0 #>  8 Adults denominator                                                2 #>  9 Peds denominator                                                  3 #> 10 Initial Population                                                5 #> 11 Total procedures in dataset                                       5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-18 Calculation ‚Äî airway_18","title":"Airway-18 Calculation ‚Äî airway_18","text":"function processes analyzes dataset calculate \"Airway-18\" NEMSQA metric. includes cleaning transforming several columns related patient data, airway procedures, vital signs, returns cleaned dataset relevant calculations. final calculation assessment successful last invasive airway procedures performed EMS response originating 911 request waveform capnography used tube placement confirmation.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-18 Calculation ‚Äî airway_18","text":"","code":"airway_18(   df = NULL,   patient_scene_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   airway_table = NULL,   response_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col,   eprocedures_06_col,   eairway_02_col = NULL,   eairway_04_col = NULL,   evitals_01_col,   evitals_16_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-18 Calculation ‚Äî airway_18","text":"df data frame tibble containing dataset processed. Default NULL. patient_scene_table data frame tibble containing ePatient eScene fields fact table. Default NULL. procedures_table data frame tibble containing eProcedures fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing eVitals fields needed measure's calculations. Default NULL. airway_table data frame tibble containing eAirway fields needed measure's calculations. Default NULL. response_table data frame tibble containing eResponse fields needed measure's calculations. Default NULL. erecord_01_col Column name containing unique patient record identifier. incident_date_col Column name containing incident date. Default NULL. patient_DOB_col Column name containing patient's date birth. Default NULL. epatient_15_col Column name patient information (exact purpose unclear). epatient_16_col Column name patient information (exact purpose unclear). eresponse_05_col Column name emergency response codes. eprocedures_01_col Column name procedure times related data. eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column name procedure codes. eprocedures_06_col Column name procedure success codes. eairway_02_col Column name airway procedure data (datetime). Default NULL. eairway_04_col Column name airway procedure data. Default NULL. evitals_01_col Column name vital signs data (datetime). evitals_16_col Column name additional vital signs data. ... Additional arguments passed functions needed.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-18 Calculation ‚Äî airway_18","text":"tibble summarizing results Adults Peds following columns: measure: name measure calculated. pop: Population type (Adults, Peds). numerator: Count incidents waveform capnography used tube placement confirmation last successful invasive airway procedure. denominator: Total count incidents. prop: Proportion incidents waveform capnography used tube placement confirmation last successful invasive airway procedure. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-18 Calculation ‚Äî airway_18","text":"Nicolas Foss, Ed.D., MS, Samuel Kordik, BBA, BS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-18 Calculation ‚Äî airway_18","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 23:02:00\",     \"2025-01-05 12:03:00\", \"2025-02-01 19:04:00\", \"2025-01-01 05:05:00\",     \"2025-06-01 13:01:00\", \"2025-01-01 23:02:00\",     \"2025-01-05 12:03:00\", \"2025-02-01 19:04:00\", \"2025-01-01 05:05:00\",     \"2025-06-01 13:06:00\")),     evitals_16 = rep(c(5, 6, 7, 8, 9), 2)    )    # airway table   airway_table <- tibble::tibble(   erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),   eairway_02 = rep(lubridate::as_datetime(c(\"2025-01-01 23:05:00\",     \"2025-01-05 12:02:00\", \"2025-02-01 19:03:00\", \"2025-01-01 05:04:00\",     \"2025-06-01 13:06:00\")), 2),   eairway_04 = rep(4004019, 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2),     eprocedures_06 = rep(9923003, 10)    )  # Run the function airway_18(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          response_table = response_table,          airway_table = airway_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          eprocedures_06_col = eprocedures_06,          evitals_01_col = evitals_01,          evitals_16_col = evitals_16,          eairway_02_col = eairway_02,          eairway_04_col = eairway_04          ) #>  #> ‚îÄ‚îÄ Airway-18 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Airway-18 ‚îÄ‚îÄ #>  #> Running `airway_18_population()`  [Working on 1 of 13 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 2 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 3 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 4 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 5 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 6 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 7 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 8 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_18_population()`  [Working on 9 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_18_population()`  [Working on 10 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_18_population()`  [Working on 11 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_18_population()`  [Working on 12 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_18_population()`  [Working on 13 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Airway-18 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.2s. #>  #> # A tibble: 2 √ó 6 #>   measure   pop    numerator denominator  prop prop_label #>   <chr>     <chr>      <int>       <int> <dbl> <chr>      #> 1 Airway-18 Adults         2           2     1 100%       #> 2 Airway-18 Peds           3           3     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Airway-18 Populations ‚Äî airway_18_population","title":"Airway-18 Populations ‚Äî airway_18_population","text":"function processes analyzes dataset generate populations interest needed perform calculations obtain performance data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airway-18 Populations ‚Äî airway_18_population","text":"","code":"airway_18_population(   df = NULL,   patient_scene_table = NULL,   procedures_table = NULL,   vitals_table = NULL,   airway_table = NULL,   response_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eprocedures_01_col,   eprocedures_02_col,   eprocedures_03_col,   eprocedures_06_col,   eairway_02_col = NULL,   eairway_04_col = NULL,   evitals_01_col,   evitals_16_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Airway-18 Populations ‚Äî airway_18_population","text":"df data frame tibble containing dataset processed. Default NULL. patient_scene_table data frame tibble containing ePatient eScene fields fact table. Default NULL. procedures_table data frame tibble containing eProcedures fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing eVitals fields needed measure's calculations. Default NULL. airway_table data frame tibble containing eAirway fields needed measure's calculations. Default NULL. response_table data frame tibble containing eResponse fields needed measure's calculations. Default NULL. erecord_01_col Column name containing unique patient record identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name patient information (exact purpose unclear). epatient_16_col Column name patient information (exact purpose unclear). eresponse_05_col Column name emergency response codes. eprocedures_01_col Column name procedure times related data. eprocedures_02_col Column name whether procedure performed prior EMS care provided. eprocedures_03_col Column name procedure codes. eprocedures_06_col Column name procedure success codes. eairway_02_col Column name airway procedure data (datetime). Default NULL. eairway_04_col Column name airway procedure data. Default NULL. evitals_01_col Column name vital signs data (datetime). evitals_16_col Column name additional vital signs data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Airway-18 Populations ‚Äî airway_18_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Airway-18 Populations ‚Äî airway_18_population","text":"Nicolas Foss, Ed.D., MS Nicolas Foss, Ed.D., MS, Samuel Kordik, BBA, BS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/airway_18_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airway-18 Populations ‚Äî airway_18_population","text":"","code":"# If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     incident_date = rep(as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")), 2),     patient_dob = rep(as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",                                 \"2023-01-01\", \"1970-06-01\")), 2),     epatient_15 = rep(c(25, 5, 2, 2, 55), 2),  # Ages     epatient_16 = rep(c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"), 2)    )    # response table   response_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eresponse_05 = rep(2205001, 10)    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 23:02:00\",     \"2025-01-05 12:03:00\", \"2025-02-01 19:04:00\", \"2025-01-01 05:05:00\",     \"2025-06-01 13:01:00\", \"2025-01-01 23:02:00\",     \"2025-01-05 12:03:00\", \"2025-02-01 19:04:00\", \"2025-01-01 05:05:00\",     \"2025-06-01 13:06:00\")),     evitals_16 = rep(c(5, 6, 7, 8, 9), 2)    )    # airway table   airway_table <- tibble::tibble(   erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),   eairway_02 = rep(lubridate::as_datetime(c(\"2025-01-01 23:05:00\",     \"2025-01-05 12:02:00\", \"2025-02-01 19:03:00\", \"2025-01-01 05:04:00\",     \"2025-06-01 13:06:00\")), 2),   eairway_04 = rep(4004019, 10)   )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = rep(c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"), 2),     eprocedures_01 = rep(lubridate::as_datetime(c(\"2025-01-01 23:00:00\",     \"2025-01-05 12:00:00\", \"2025-02-01 19:00:00\", \"2025-01-01 05:00:00\",     \"2025-06-01 13:00:00\")), 2),     eprocedures_02 = rep(\"No\", 10),     eprocedures_03 = rep(c(16883004, 112798008, 78121007, 49077009,                            673005), 2),     eprocedures_06 = rep(9923003, 10)    )  # Run the function result <- airway_18_population(df = NULL,          patient_scene_table = patient_table,          procedures_table = procedures_table,          vitals_table = vitals_table,          response_table = response_table,          airway_table = airway_table,          erecord_01_col = erecord_01,          incident_date_col = incident_date,          patient_DOB_col = patient_dob,          epatient_15_col = epatient_15,          epatient_16_col = epatient_16,          eresponse_05_col = eresponse_05,          eprocedures_01_col = eprocedures_01,          eprocedures_02_col = eprocedures_02,          eprocedures_03_col = eprocedures_03,          eprocedures_06_col = eprocedures_06,          evitals_01_col = evitals_01,          evitals_16_col = evitals_16,          eairway_02_col = eairway_02,          eairway_04_col = eairway_04          ) #> Running `airway_18_population()`  [Working on 1 of 13 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 2 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 3 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 4 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 5 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 6 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 7 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `airway_18_population()`  [Working on 8 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_18_population()`  [Working on 9 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_18_population()`  [Working on 10 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_18_population()`  [Working on 11 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_18_population()`  [Working on 12 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `airway_18_population()`  [Working on 13 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 12 √ó 2 #>    filter                                                                  count #>    <chr>                                                                   <dbl> #>  1 Invasive airway procedures                                                  5 #>  2 Successful invasive airway procedures                                       5 #>  3 911 calls                                                                   5 #>  4 Successful invasive airway procedures performed after EMS arrival           5 #>  5 Waveform ETCO2 used                                                         5 #>  6 Airway device placement confirmed after airway procedure                    5 #>  7 Vitals taken after airway procedure where waveform ETCO2 >= 5               5 #>  8 Waveform ETCO2 >= 5                                                         6 #>  9 Successful invasive airway procedures with waveform ETCO2 confirmed po‚Ä¶     5 #> 10 Adults denominator                                                          2 #> 11 Peds denominator                                                            3 #> 12 Total procedures in dataset                                                 5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Asthma-01 Calculation ‚Äî asthma_01","title":"Asthma-01 Calculation ‚Äî asthma_01","text":"Calculates NEMSQA Asthma-01 measure. Calculates key statistics related asthma-related incidents EMS dataset, specifically focusing cases 911 called respiratory distress, certain medications administered. function segments data age adult pediatric populations, computing proportion cases received beta-agonist treatment.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asthma-01 Calculation ‚Äî asthma_01","text":"","code":"asthma_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   emedications_03_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asthma-01 Calculation ‚Äî asthma_01","text":"df data.frame tibble containing EMS data. Default NULL. patient_scene_table data.frame tibble containing least ePatient eScene fields fact table. Default NULL. response_table data.frame tibble containing least eResponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing least eSituation fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing least eMedications fields needed measure's calculations. Default NULL. erecord_01_col column representing EMS record unique identifier. Default NULL. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minute\"). eresponse_05_col Column contains eResponse.05. esituation_11_col Column contains eSituation.11. esituation_12_col Column contains eSituation.12 values single comma-separated list. emedications_03_col Column contains eMedications.03 values single comma-separated list. ... optional additional arguments pass onto dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asthma-01 Calculation ‚Äî asthma_01","text":"data.frame summarizing results three population groups (, Adults, Peds) following columns: measure: name measure calculated. pop: Population type (, Adults, Peds). numerator: Count incidents beta-agonist medications administered. denominator: Total count incidents. prop: Proportion incidents involving beta-agonist medications. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Asthma-01 Calculation ‚Äî asthma_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Asthma-01 Calculation ‚Äî asthma_01","text":"","code":"if (FALSE) { # \\dontrun{  # If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # Get the applicable tables from `nemsqar` data(\"nemsqar_medications_table\") data(\"nemsqar_patient_scene_table\") data(\"nemsqar_response_table\") data(\"nemsqar_situation_table\")  asthma_01(  patient_scene_table = nemsqar_patient_scene_table, response_table = nemsqar_response_table, situation_table = nemsqar_situation_table, medications_table = nemsqar_medications_table, erecord_01_col = `Incident Patient Care Report Number - PCR`, incident_date_col = `Incident Date`, patient_DOB_col = `Patient Date Of Birth`, epatient_15_col = `Patient Age`, epatient_16_col = `Patient Age Units`, eresponse_05_col = `Response Type Of Service Requested With Code`, esituation_11_col = `Situation Provider Primary Impression Code And Description`, esituation_12_col = `Situation Provider Secondary Impression Description And Code`, emedications_03_col = `Medication Given or Administered Description And RXCUI Code`  )  } # }"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Asthma-01 Populations ‚Äî asthma_01_population","title":"Asthma-01 Populations ‚Äî asthma_01_population","text":"Filters data target populations Asthma-01, categorizes records identify needed information calculations. Identifies key categories related asthma-related incidents EMS dataset, specifically focusing cases 911 called respiratory distress, certain medications administered. function segments data age adult pediatric populations, computing proportion cases received beta-agonist treatment.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asthma-01 Populations ‚Äî asthma_01_population","text":"","code":"asthma_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   emedications_03_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asthma-01 Populations ‚Äî asthma_01_population","text":"df data.frame tibble containing EMS data. Default NULL. patient_scene_table data.frame tibble containing least ePatient eScene fields fact table. Default NULL. response_table data.frame tibble containing least eResponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing least eSituation fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing least eMedications fields needed measure's calculations. Default NULL. erecord_01_col column representing EMS record unique identifier. Default NULL. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minute\"). eresponse_05_col Column contains eResponse.05. esituation_11_col Column contains eSituation.11 provider primary impression data. esituation_12_col Column contains eSituation.12 values (possible single comma-separated list), provider secondary impression data. emedications_03_col Column contains eMedications.03 values single comma-separated list.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asthma-01 Populations ‚Äî asthma_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Asthma-01 Populations ‚Äî asthma_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/asthma_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Asthma-01 Populations ‚Äî asthma_01_population","text":"","code":"if (FALSE) { # \\dontrun{  # If you are sourcing your data from a SQL database connection # or if you have your data in several different tables, # you can pass table inputs versus a single data.frame or tibble  # Get the applicable tables from `nemsqar` data(\"nemsqar_medications_table\") data(\"nemsqar_patient_scene_table\") data(\"nemsqar_response_table\") data(\"nemsqar_situation_table\")  asthma_01_population(  patient_scene_table = nemsqar_patient_scene_table, response_table = nemsqar_response_table, situation_table = nemsqar_situation_table, medications_table = nemsqar_medications_table, erecord_01_col = `Incident Patient Care Report Number - PCR`, incident_date_col = `Incident Date`, patient_DOB_col = `Patient Date Of Birth`, epatient_15_col = `Patient Age`, epatient_16_col = `Patient Age Units`, eresponse_05_col = `Response Type Of Service Requested With Code`, esituation_11_col = `Situation Provider Primary Impression Code And Description`, esituation_12_col = `Situation Provider Secondary Impression Description And Code`, emedications_03_col = `Medication Given or Administered Description And RXCUI Code`  )  } # }"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypoglycemia-01 ‚Äî hypoglycemia_01","title":"Hypoglycemia-01 ‚Äî hypoglycemia_01","text":"hypoglycemia_01 function calculates NEMSQA measure evaluating often hypoglycemic patients altered mental status receive hypoglycemia treatment.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypoglycemia-01 ‚Äî hypoglycemia_01","text":"","code":"hypoglycemia_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   medications_table = NULL,   procedures_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_18_col,   evitals_23_col,   evitals_26_col,   emedications_03_col,   eprocedures_03_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hypoglycemia-01 ‚Äî hypoglycemia_01","text":"df data frame tibble containing emergency response records. Default NULL. patient_scene_table data.frame tibble containing least ePatient eScene fields fact table. Default NULL. response_table data.frame tibble containing least eResponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing least eSituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing least eVitals fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing least eMedications fields needed measure's calculations. Default NULL. procedures_table data.frame tibble containing least eProcedures fields needed measure's calculations. Default NULL. erecord_01_col Column representing unique record identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minute\"). eresponse_05_col Column containing response type codes. esituation_11_col Column primary impression fields, containing ICD-10 codes. esituation_12_col Column secondary impression fields, containing ICD-10 codes. evitals_18_col Column blood glucose levels. evitals_23_col Column Glasgow Coma Scale (GCS) scores. evitals_26_col Column AVPU alertness levels. emedications_03_col Column administered medications. eprocedures_03_col Column procedures performed. ... Additional arguments summarization, passed summarize function.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hypoglycemia-01 ‚Äî hypoglycemia_01","text":"tibble summarizing results three population groups (, Adults, Peds) following columns: measure: name measure calculated. pop: Population type (, Adults, Peds). numerator: Count incidents specific hypoglycemia best practices administered. denominator: Total count incidents. prop: Proportion incidents specific hypoglycemia best practices administered. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hypoglycemia-01 ‚Äî hypoglycemia_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hypoglycemia-01 ‚Äî hypoglycemia_01","text":"","code":"# Synthetic test data test_data <- tibble::tibble(   erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   epatient_15 = c(34, 5, 45, 2, 60),  # Ages   epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),   eresponse_05 = rep(2205001, 5),   esituation_11 = c(rep(\"E13.64\", 3), rep(\"E16.2\", 2)),   esituation_12 = c(rep(\"E13.64\", 2), rep(\"E16.2\", 3)),   emedications_03 = c(372326, 376937,                       377980, 4850,                       4832),   evitals_18 = c(60, 59, 58, 57, 56),   evitals_23 = c(16, 15, 14, 13, 12),   evitals_26 = c(\"Alert\", \"Painful\", \"Verbal\", \"Unresponsive\", \"Alert\"),   eprocedures_03 = rep(\"710925007\", 5) )  # Run the function hypoglycemia_01(   df = test_data,   erecord_01_col = erecord_01,   epatient_15_col = epatient_15,   epatient_16_col = epatient_16,   eresponse_05_col = eresponse_05,   esituation_11_col = esituation_11,   esituation_12_col = esituation_12,   emedications_03_col = emedications_03,   evitals_18_col = evitals_18,   evitals_23_col = evitals_23,   evitals_26_col = evitals_26,   eprocedures_03_col = eprocedures_03 ) #>  #> ‚îÄ‚îÄ Hypoglycemia-01 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Hypoglycemia-01 ‚îÄ‚îÄ #>  #> Running `hypoglycemia_01_population()`  [Working on 1 of 17 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 2 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 3 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 4 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 5 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 6 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 7 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 8 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 9 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 10 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 11 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 12 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 13 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 14 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 15 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 16 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 17 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Hypoglycemia-01 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.23s. #>  #> # A tibble: 3 √ó 6 #>   measure         pop    numerator denominator  prop prop_label #>   <chr>           <chr>      <int>       <int> <dbl> <chr>      #> 1 Hypoglycemia-01 Adults         2           2     1 100%       #> 2 Hypoglycemia-01 Peds           2           2     1 100%       #> 3 Hypoglycemia-01 All            4           4     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypoglycemia-01 Populations ‚Äî hypoglycemia_01_population","title":"Hypoglycemia-01 Populations ‚Äî hypoglycemia_01_population","text":"Filters data target populations Hypoglycemia-01, categorizes records identify needed information calculations. Identifies key categories related diabetes/hypoglycemia incidents EMS dataset, specifically focusing cases 911 called diabetes/hypoglycemia distress, certain medications administered, weight taken. function segments data pediatric populations, computing proportion cases documented weight.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypoglycemia-01 Populations ‚Äî hypoglycemia_01_population","text":"","code":"hypoglycemia_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   medications_table = NULL,   procedures_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_18_col,   evitals_23_col,   evitals_26_col,   emedications_03_col,   eprocedures_03_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hypoglycemia-01 Populations ‚Äî hypoglycemia_01_population","text":"df data frame tibble containing emergency response records. Default NULL. patient_scene_table data.frame tibble containing least epatient escene fields fact table. Default NULL. response_table data.frame tibble containing least eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing least esituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing least evitals fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing least emedications fields needed measure's calculations. Default NULL. procedures_table data.frame tibble containing least eprocedures fields needed measure's calculations. Default NULL. erecord_01_col Column representing unique record identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient's numeric age agnostic unit. epatient_16_col Column representing patient's age unit (\"Years\", \"Months\", \"Days\", \"Hours\", \"Minute\"). eresponse_05_col Column containing response type codes. esituation_11_col Column primary impression fields, containing ICD-10 codes. esituation_12_col Column secondary impression fields, containing ICD-10 codes. evitals_18_col Column blood glucose levels. evitals_23_col Column Glasgow Coma Scale (GCS) scores. evitals_26_col Column AVPU alertness levels. emedications_03_col Column administered medications. eprocedures_03_col Column procedures performed.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hypoglycemia-01 Populations ‚Äî hypoglycemia_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hypoglycemia-01 Populations ‚Äî hypoglycemia_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/hypoglycemia_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hypoglycemia-01 Populations ‚Äî hypoglycemia_01_population","text":"","code":"# create tables to test correct functioning  # patient table patient_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",   \"2025-01-01\", \"2025-06-01\")),   patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",   \"2023-01-01\", \"1970-06-01\")),   epatient_15 = c(25, 5, 2, 2, 55),  # Ages   epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")  )  # response table response_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   eresponse_05 = rep(2205001, 5)  )  # situation table situation_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   esituation_11 = c(rep(\"E13.64\", 3), rep(\"E16.2\", 2)),   esituation_12 = c(rep(\"E13.64\", 2), rep(\"E16.2\", 3)) )  # medications table medications_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   emedications_03 = c(372326, 376937, 377980, 4850, 4832),  )  # vitals table vitals_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   evitals_18 = c(60, 59, 58, 57, 56),   evitals_23 = c(16, 15, 14, 13, 12),   evitals_26 = c(\"Alert\", \"Painful\", \"Verbal\", \"Unresponsive\", \"Alert\")  )  # procedures table procedures_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   eprocedures_03 = rep(\"710925007\", 5)  )  # test the success of the function result <- hypoglycemia_01_population(patient_scene_table = patient_table,                             response_table = response_table,                             situation_table = situation_table,                             medications_table = medications_table,                             vitals_table = vitals_table,                             procedures_table = procedures_table,                             erecord_01_col = erecord_01,                             incident_date_col = incident_date,                             patient_DOB_col = patient_dob,                             epatient_15_col = epatient_15,                             epatient_16_col = epatient_16,                             eresponse_05_col = eresponse_05,                             esituation_11_col = esituation_11,                             esituation_12_col = esituation_12,                             emedications_03_col = emedications_03,                             evitals_18_col = evitals_18,                             evitals_23_col = evitals_23,                             evitals_26_col = evitals_26,                             eprocedures_03_col = eprocedures_03                             ) #> Running `hypoglycemia_01_population()`  [Working on 1 of 17 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 2 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 3 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 4 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 5 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 6 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 7 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 8 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 9 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 10 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 11 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 12 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 13 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 14 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 15 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 16 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `hypoglycemia_01_population()`  [Working on 17 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 7 √ó 2 #>   filter                                                              count #>   <chr>                                                               <int> #> 1 Diabetes/Hypoglycemia and Verbal, Painful, Unresponsive or GCS < 15     4 #> 2 Altered mental status and low blood glucose                             0 #> 3 911 calls                                                               5 #> 4 Adults denominator                                                      1 #> 5 Peds denominator                                                        3 #> 6 Initial population                                                      4 #> 7 Total dataset                                                           5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"nemsqar: National Emergency Medical Service Quality Alliance Measure Calculations ‚Äî nemsqar-package","title":"nemsqar: National Emergency Medical Service Quality Alliance Measure Calculations ‚Äî nemsqar-package","text":"Designed automate calculation Emergency Medical Service (EMS) quality metrics, 'nemsqar' implements measures defined National EMS Quality Alliance (NEMSQA). providing reliable, evidence-based quality assessments, package supports EMS agencies, healthcare providers, researchers evaluating improving patient outcomes. Users can find details approved NEMSQA measures https://www.nemsqa.org/measures. Full technical specifications, including documentation pseudocode used develop 'nemsqar', available NEMSQA website creating user profile https://www.nemsqa.org.","code":""},{"path":[]},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nemsqar: National Emergency Medical Service Quality Alliance Measure Calculations ‚Äî nemsqar-package","text":"Maintainer: Nicolas Foss nicolas.foss@hhs.iowa.gov Authors: Samuel Kordik samuel.kordik@utsouthwestern.edu (ORCID) contributors: Alyssa Green awhim@nemsqa.org [contributor] Iowa Department Health Human Services [copyright holder]","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_airway_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eAirway Fields in National EMS Information System ‚Äî nemsqar_airway_table","title":"Synthetic Test Data for eAirway Fields in National EMS Information System ‚Äî nemsqar_airway_table","text":"dataset provides completely synthetic test data airway-related fields National EMS Information System (NEMSIS). specific single function can used test multiple functions nemsqar package. Users encouraged experiment dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_airway_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eAirway Fields in National EMS Information System ‚Äî nemsqar_airway_table","text":"","code":"data(nemsqar_airway_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_airway_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eAirway Fields in National EMS Information System ‚Äî nemsqar_airway_table","text":"data frame 10,000 rows 8 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Airway Indications Invasive Management List (eAirway.01) List indications invasive airway management (character). Airway Device Placement Confirmation Date Time (eAirway.02) Timestamp airway device placement confirmation (datetime). Airway Device Confirmed (eAirway.03) Type airway device confirmed (character). Patient Airway Device Confirmed List (eAirway.03) List airway devices confirmed (character). Airway Device Placement Confirmed Method (eAirway.04) Primary method used confirm airway device placement (character). Airway Device Placement Confirmed Method List (eAirway.04) List methods used confirm airway device placement (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_airway_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eAirway Fields in National EMS Information System ‚Äî nemsqar_airway_table","text":"","code":"data(nemsqar_airway_table) head(nemsqar_airway_table) #> # A tibble: 6 √ó 8 #>   Incident Patient Care Report Number -‚Ä¶¬π `Incident Date` Airway Indications F‚Ä¶¬≤ #>   <chr>                                   <date>          <chr>                  #> 1 NyXFBlJfnm-8333586176                   2023-05-27      Adequate Airway Refle‚Ä¶ #> 2 XTLCINMLTP-8616021114                   2023-10-14      Apnea or Agonal Respi‚Ä¶ #> 3 HfYjlIEQSk-9529756610                   2023-07-07      Adequate Airway Refle‚Ä¶ #> 4 MOwVDhriyC-5915613206                   2023-05-13      Adequate Airway Refle‚Ä¶ #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      Adequate Airway Refle‚Ä¶ #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      Adequate Airway Refle‚Ä¶ #> # ‚Ñπ abbreviated names: #> #   ¬π‚Äã`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ¬≤‚Äã`Airway Indications For Invasive Management List (eAirway.01)` #> # ‚Ñπ 5 more variables: #> #   `Airway Device Placement Confirmation Date Time (eAirway.02)` <dttm>, #> #   `Airway Device Being Confirmed (eAirway.03)` <chr>, #> #   `Patient Airway Device Being Confirmed List (eAirway.03)` <chr>, ‚Ä¶"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_arrest_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eArrest Fields in National EMS Information System ‚Äî nemsqar_arrest_table","title":"Synthetic Test Data for eArrest Fields in National EMS Information System ‚Äî nemsqar_arrest_table","text":"dataset provides completely synthetic test data cardiac arrest-related fields National EMS Information System (NEMSIS). specific single function can used test multiple functions nemsqar package. Users encouraged experiment dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_arrest_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eArrest Fields in National EMS Information System ‚Äî nemsqar_arrest_table","text":"","code":"data(nemsqar_arrest_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_arrest_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eArrest Fields in National EMS Information System ‚Äî nemsqar_arrest_table","text":"data frame 10,000 rows 28 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Cardiac Arrest EMS Event Code (eArrest.01) Indicates whether cardiac arrest occurred EMS event (character). Cardiac Arrest Etiology Code (eArrest.02) Suspected cause cardiac arrest (character). Cardiac Arrest Indications Resuscitation Attempted EMS (eArrest.03) Whether resuscitation attempted EMS (character). Cardiac Arrest Indications Resuscitation Attempted EMS Code List (eArrest.03) Detailed reasons resuscitation decisions (character). Cardiac Arrest Witnessed (eArrest.04) witnessed cardiac arrest (character). Cardiac Arrest Witnessed List (eArrest.04) List witnesses cardiac arrest (character). Cardiac Arrest CPR Provided Prior EMS Arrival (3.4=eArrest.05/3.5=itArrest.105) Whether CPR provided EMS arrival (character). Cardiac Arrest Provided CPR Prior EMS (3.4=eArrest.06/3.5=itArrest.106) performed CPR EMS arrival (character). Cardiac Arrest Provided CPR Prior EMS Arrival Code List (3.4=eArrest.06/3.5=itArrest.106) List responders provided CPR EMS arrival (character). Cardiac Arrest AED Use Prior EMS Arrival (eArrest.07) Whether AED used EMS arrival (character). Cardiac Arrest Used AED Prior EMS (3.4=eArrest.08/3.5=itArrest.108) used AED EMS arrival (character). Cardiac Arrest Used AED Prior EMS Arrival Code List (3.4=eArrest.08/3.5=itArrest.108) List responders used AED EMS arrival (character). Cardiac Arrest Type CPR Provided List (eArrest.09) List types CPR performed (character). Cardiac Arrest First Monitored Arrest Rhythm Patient (eArrest.11) First recorded cardiac rhythm arrest (character). Cardiac Arrest First Monitored Arrest Rhythm Patient Code (eArrest.11) Coded representation first monitored cardiac rhythm (character). Cardiac Arrest Return Spontaneous Circulation (eArrest.12) Whether patient regained spontaneous circulation (character). Cardiac Arrest Return Spontaneous Circulation Code List (eArrest.12) List codes indicating ROSC status (character). Cardiac Arrest Date Time (eArrest.14) Timestamp cardiac arrest occurrence (datetime). Cardiac Arrest Resuscitation Discontinued Date Time (eArrest.15) Timestamp resuscitation discontinuation (datetime). Cardiac Arrest Reason CPR Resuscitation Discontinued (eArrest.16) Reason discontinuing resuscitation (character). Cardiac Arrest Rhythm Arrival Destination List (eArrest.17) Recorded cardiac rhythm upon arrival destination (character). Cardiac Arrest Patient Outcome End EMS Event (eArrest.18) Patient's condition end EMS event (character). Cardiac Arrest Initial CPR Date Time (eArrest.19) Timestamp initial CPR administration (datetime). Cardiac Arrest Initiated CPR Code (3.4=itArrest.008/3.5=eArrest.20) initiated CPR (character). Cardiac First Applied AED (3.4=itArrest.015/3.5=eArrest.21) first applied AED (character). Cardiac First Defibrillated Patient (3.4=itArrest.013/3.5=eArrest.22) performed first defibrillation (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_arrest_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eArrest Fields in National EMS Information System ‚Äî nemsqar_arrest_table","text":"","code":"data(nemsqar_arrest_table) head(nemsqar_arrest_table) #> # A tibble: 6 √ó 28 #>   Incident Patient Care Report Number -‚Ä¶¬π `Incident Date` Cardiac Arrest Durin‚Ä¶¬≤ #>   <chr>                                   <date>          <chr>                  #> 1 NyXFBlJfnm-8333586176                   2023-05-27      No (3001001)           #> 2 XTLCINMLTP-8616021114                   2023-10-14      Yes, After EMS Arriva‚Ä¶ #> 3 HfYjlIEQSk-9529756610                   2023-07-07      No (3001001)           #> 4 MOwVDhriyC-5915613206                   2023-05-13      Yes, Prior to EMS Arr‚Ä¶ #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      No (3001001)           #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      Not Applicable (77010‚Ä¶ #> # ‚Ñπ abbreviated names: #> #   ¬π‚Äã`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ¬≤‚Äã`Cardiac Arrest During EMS Event With Code (eArrest.01)` #> # ‚Ñπ 25 more variables: `Cardiac Arrest Etiology With Code (eArrest.02)` <chr>, #> #   `Cardiac Arrest Indications Resuscitation Attempted By EMS (eArrest.03)` <chr>, #> #   `Cardiac Arrest Indications Resuscitation Attempted By EMS With Code List (eArrest.03)` <chr>, #> #   `Cardiac Arrest Witnessed By (eArrest.04)` <chr>, ‚Ä¶"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_disposition_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eDisposition Fields in National EMS Information System ‚Äî nemsqar_disposition_table","title":"Synthetic Test Data for eDisposition Fields in National EMS Information System ‚Äî nemsqar_disposition_table","text":"dataset provides completely synthetic test data evaluating disposition-related functions nemsqar package. includes key variables related patient disposition, transport mode, hospital capabilities, team pre-arrival alerts. dataset intended assist users testing expected input structure disposition-related measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_disposition_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eDisposition Fields in National EMS Information System ‚Äî nemsqar_disposition_table","text":"","code":"data(nemsqar_disposition_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_disposition_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eDisposition Fields in National EMS Information System ‚Äî nemsqar_disposition_table","text":"data frame 10,000 rows 13 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Disposition Position Patient Transport List (eDisposition.14) Position patient transport (character). Disposition Additional Transport Mode Descriptor (eDisposition.18) Additional transport mode details (character). Disposition Additional Transport Mode Descriptor List (eDisposition.18) List additional transport mode descriptors (character). Hospital Capability (3.4=itDisposition.105/3.5=eDisposition.23) Primary hospital capability associated incident (character). Hospital Capability List (3.4=itDisposition.105/3.5=eDisposition.23) List hospital capabilities destination facility (character). Disposition Team Pre Arrival Alert (eDisposition.24) Indicates whether pre-arrival alert triggered team (character). Disposition Destination Team Pre-arrival Alert Activation (eDisposition.24) Indicates specific type pre-arrival alert activated (character). Destination Trauma General Team Pre-arrival Activation (eDisposition.24) Indicates whether general trauma team activated pre-arrival (logical). Patient Evaluation/Care (3.4=itDisposition.100/3.5=eDisposition.28) Evaluation care provided patient (character). Transport Disposition (3.4=itDisposition.102/3.5=eDisposition.30) Final transport disposition patient (character). Disposition Incident Patient Disposition Code (3.4=eDisposition.12/3.5=itDisposition.112) Final disposition patient, including standardized codes (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_disposition_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic Test Data for eDisposition Fields in National EMS Information System ‚Äî nemsqar_disposition_table","text":"Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_disposition_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eDisposition Fields in National EMS Information System ‚Äî nemsqar_disposition_table","text":"","code":"data(nemsqar_disposition_table) head(nemsqar_disposition_table) #> # A tibble: 6 √ó 13 #>   Incident Patient Care Report Number -‚Ä¶¬π `Incident Date` Disposition Position‚Ä¶¬≤ #>   <chr>                                   <date>          <chr>                  #> 1 NyXFBlJfnm-8333586176                   2023-05-27      Fowlers (Semi-Upright‚Ä¶ #> 2 XTLCINMLTP-8616021114                   2023-10-14      Fowlers (Semi-Upright‚Ä¶ #> 3 HfYjlIEQSk-9529756610                   2023-07-07      Prone,Sitting          #> 4 MOwVDhriyC-5915613206                   2023-05-13      Semi-Fowlers,Trendele‚Ä¶ #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      Lateral Left,Semi-Fow‚Ä¶ #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      Fowlers (Semi-Upright‚Ä¶ #> # ‚Ñπ abbreviated names: #> #   ¬π‚Äã`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ¬≤‚Äã`Disposition Position Of Patient During Transport List (eDisposition.14)` #> # ‚Ñπ 10 more variables: #> #   `Disposition Additional Transport Mode Descriptor (eDisposition.18)` <chr>, #> #   `Disposition Additional Transport Mode Descriptor List (eDisposition.18)` <chr>, #> #   `Hospital Capability (3.4=itDisposition.105/3.5=eDisposition.23)` <chr>, ‚Ä¶"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_exam_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eExam Fields in National EMS Information System ‚Äî nemsqar_exam_table","title":"Synthetic Test Data for eExam Fields in National EMS Information System ‚Äî nemsqar_exam_table","text":"dataset provides completely synthetic test data evaluating patient examination-related functions nemsqar package. includes key variables related patient weight, assessment findings, lung chest examinations, neurological assessments. dataset intended assist users testing expected input structure examination-related measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_exam_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eExam Fields in National EMS Information System ‚Äî nemsqar_exam_table","text":"","code":"data(nemsqar_exam_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_exam_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eExam Fields in National EMS Information System ‚Äî nemsqar_exam_table","text":"data frame 10,000 rows 11 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Patient Weight Kilograms (eExam.01) Patient's weight kilograms (numeric). Patient Length Based Color (eExam.02) Color coding based patient length pediatric patients (character). Patient Assessment Date Time (eExam.03) Timestamp patient assessment (datetime). Patient Extremity Assessment Findings List (eExam.16) List findings related extremity assessment (character). Patient Neurological Assessment Findings List (eExam.20) List neurological assessment findings (character). Patient Lung Assessment Finding Location (3.4=itExam.099/3.5=eExam.22) Location lung assessment findings (character). Patient Lung Assessment Findings List (3.4=itExam.100/3.5=eExam.23) List lung assessment findings (character). Patient ChestExclusive Assessment Finding Location (3.4=itExam.101/3.5=eExam.24) Location chest-exclusive assessment findings (character). Patient ChestExclusive Assessment Findings List (3.4=itExam.102/3.5=eExam.25) List chest-exclusive assessment findings (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_exam_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic Test Data for eExam Fields in National EMS Information System ‚Äî nemsqar_exam_table","text":"Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_exam_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eExam Fields in National EMS Information System ‚Äî nemsqar_exam_table","text":"","code":"data(nemsqar_exam_table) head(nemsqar_exam_table) #> # A tibble: 6 √ó 11 #>   Incident Patient Care Report Number -‚Ä¶¬π `Incident Date` Patient Weight In Ki‚Ä¶¬≤ #>   <chr>                                   <date>                           <dbl> #> 1 NyXFBlJfnm-8333586176                   2023-05-27                       143.  #> 2 XTLCINMLTP-8616021114                   2023-10-14                       131.  #> 3 HfYjlIEQSk-9529756610                   2023-07-07                         8.3 #> 4 MOwVDhriyC-5915613206                   2023-05-13                       121   #> 5 ZCGOtLEPKw-7820135532                   2023-11-24                        79.9 #> 6 fEMvUCQCRQ-9052388486                   2023-01-12                        80.5 #> # ‚Ñπ abbreviated names: #> #   ¬π‚Äã`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ¬≤‚Äã`Patient Weight In Kilograms (eExam.01)` #> # ‚Ñπ 8 more variables: `Patient Length Based Color (eExam.02)` <chr>, #> #   `Patient Assessment Date Time (eExam.03)` <dttm>, #> #   `Patient Extremity Assessment Findings List (eExam.16)` <chr>, #> #   `Patient Neurological Assessment Findings List (eExam.20)` <chr>, ‚Ä¶"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_injury_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eInjury Fields in National EMS Information System ‚Äî nemsqar_injury_table","title":"Synthetic Test Data for eInjury Fields in National EMS Information System ‚Äî nemsqar_injury_table","text":"dataset provides completely synthetic test data evaluating injury-related functions nemsqar package. includes key variables related cause injury, trauma triage criteria, vehicular risk factors, height falls. dataset intended assist users testing expected input structure injury-related measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_injury_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eInjury Fields in National EMS Information System ‚Äî nemsqar_injury_table","text":"","code":"data(nemsqar_injury_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_injury_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eInjury Fields in National EMS Information System ‚Äî nemsqar_injury_table","text":"data frame 10,000 rows 8 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Injury Cause Injury (eInjury.01) General description cause injury (character). Injury Cause Injury Description Code List (eInjury.01) Detailed description coding injury causes (character). Injury Trauma Center/Triage Criteria (Steps 1 2) List (eInjury.03) List trauma triage criteria met Steps 1 2 (character). Injury Vehicular Pedestrian Injury Risk Factor/Triage Criteria (Steps 3 4) (eInjury.04) Primary vehicular risk factors injury (character). Injury Vehicular Pedestrian Injury Risk Factor/Triage Criteria (Steps 3 4) List (eInjury.04) Detailed list vehicular pedestrian injury risk factors (character). Injury Height Fall Feet (eInjury.09) Height fall feet applicable (numeric).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_injury_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic Test Data for eInjury Fields in National EMS Information System ‚Äî nemsqar_injury_table","text":"Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_injury_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eInjury Fields in National EMS Information System ‚Äî nemsqar_injury_table","text":"","code":"data(nemsqar_injury_table) head(nemsqar_injury_table) #> # A tibble: 6 √ó 8 #>   Incident Patient Care Report Number -‚Ä¶¬π `Incident Date` Injury Cause of Inju‚Ä¶¬≤ #>   <chr>                                   <date>          <chr>                  #> 1 NyXFBlJfnm-8333586176                   2023-05-27      Other and unspecified‚Ä¶ #> 2 XTLCINMLTP-8616021114                   2023-10-14      Stabbed/Cut by sharp ‚Ä¶ #> 3 HfYjlIEQSk-9529756610                   2023-07-07      Electrocution from el‚Ä¶ #> 4 MOwVDhriyC-5915613206                   2023-05-13      Motorcycle driver inj‚Ä¶ #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      Parachutist accident   #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      Fall from other furni‚Ä¶ #> # ‚Ñπ abbreviated names: #> #   ¬π‚Äã`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ¬≤‚Äã`Injury Cause of Injury (eInjury.01)` #> # ‚Ñπ 5 more variables: #> #   `Injury Cause Of Injury Description And Code List (eInjury.01)` <chr>, #> #   `Injury Trauma Center/Triage Criteria (Steps 1 and 2) List (eInjury.03)` <chr>, #> #   `Injury Vehicular Pedestrian Or Other Injury Risk Factor/Triage Criteria (Steps 3 and 4) (eInjury.04)` <chr>, ‚Ä¶"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_medications_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eMedications Fields in National EMS Information System ‚Äî nemsqar_medications_table","title":"Synthetic Test Data for eMedications Fields in National EMS Information System ‚Äî nemsqar_medications_table","text":"dataset provides completely synthetic test data evaluating medication-related functions nemsqar package. includes key variables related medication administration, timing, route, standardized coding. dataset designed assist users testing expected input structure medication-related measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_medications_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eMedications Fields in National EMS Information System ‚Äî nemsqar_medications_table","text":"","code":"data(nemsqar_medications_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_medications_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eMedications Fields in National EMS Information System ‚Äî nemsqar_medications_table","text":"data frame 10,000 rows 8 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Medication Administered Date Time (eMedications.01) Date time medication administered (datetime). Medication Administered Prior EMS Unit Care (eMedications.02) Indicator whether medication administered EMS arrival (character). Medication Given Administered Description RXCUI Code (eMedications.03) Name medication administered associated RXCUI code (character). Patient Medication Given Administered Description RXCUI Codes List (eMedications.03) List medications administered RXCUI codes (character). Medication Administered Route (eMedications.04) Method medication administered (character). Medication Administered Route Code (eMedications.04) Standardized code medication administration route (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_medications_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic Test Data for eMedications Fields in National EMS Information System ‚Äî nemsqar_medications_table","text":"Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_medications_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eMedications Fields in National EMS Information System ‚Äî nemsqar_medications_table","text":"","code":"data(nemsqar_medications_table) head(nemsqar_medications_table) #> # A tibble: 6 √ó 8 #>   Incident Patient Care Report Number -‚Ä¶¬π `Incident Date` Medication Administe‚Ä¶¬≤ #>   <chr>                                   <date>          <dttm>                 #> 1 NyXFBlJfnm-8333586176                   2023-05-27      2023-05-27 03:55:00    #> 2 XTLCINMLTP-8616021114                   2023-10-14      2023-10-14 08:58:00    #> 3 HfYjlIEQSk-9529756610                   2023-07-07      2023-07-07 10:22:00    #> 4 MOwVDhriyC-5915613206                   2023-05-13      2023-05-13 04:55:00    #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      2023-11-24 12:08:00    #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      2023-01-12 06:14:00    #> # ‚Ñπ abbreviated names: #> #   ¬π‚Äã`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ¬≤‚Äã`Medication Administered Date Time (eMedications.01)` #> # ‚Ñπ 5 more variables: #> #   `Medication Administered Prior To EMS Unit Care (eMedications.02)` <chr>, #> #   `Medication Given or Administered Description And RXCUI Code (eMedications.03)` <chr>, #> #   `Patient Medication Given or Administered Description And RXCUI Codes List (eMedications.03)` <chr>, ‚Ä¶"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_patient_scene_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_patient_scene_table","title":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_patient_scene_table","text":"dataset provides synthetic patient information ePatient section National Emergency Medical Services Information System (NEMSIS). contains example patient demographics scene-related details can used testing various functions within nemsqar package. Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_patient_scene_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_patient_scene_table","text":"","code":"nemsqar_patient_scene_table"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_patient_scene_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_patient_scene_table","text":"tibble 10,000 rows 6 variables: Incident Patient Care Report Number - PCR (eRecord.01) (chr) Unique identifier patient care report. Incident Date (date) date EMS incident. Patient Age (ePatient.15) (dbl) Patient's age time incident. Patient Age Units (ePatient.16) (chr) units measurement patient age (e.g., Years, Months, Hours, etc.). Patient Date Birth (ePatient.17) (date) patient's date birth. Patient Gender (ePatient.13) (chr) patient's gender recorded EMS report.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_patient_scene_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_patient_scene_table","text":"data table entirely synthetic intended solely testing purposes. data represent real patients, incidents, outcomes used research operational decision-making.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_patient_scene_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic ePatient Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_patient_scene_table","text":"","code":"data(nemsqar_patient_scene_table) dplyr::glimpse(nemsqar_patient_scene_table) #> Rows: 10,000 #> Columns: 6 #> $ `Incident Patient Care Report Number - PCR (eRecord.01)` <chr> \"NyXFBlJfnm-8‚Ä¶ #> $ `Incident Date`                                          <date> 2023-12-20, ‚Ä¶ #> $ `Patient Age (ePatient.15)`                              <dbl> 98, 75, 24, 1‚Ä¶ #> $ `Patient Age Units (ePatient.16)`                        <chr> \"Minutes\", \"D‚Ä¶ #> $ `Patient Date Of Birth (ePatient.17)`                    <date> 2023-12-19, ‚Ä¶ #> $ `Patient Gender (ePatient.13)`                           <chr> \"Male to Fema‚Ä¶"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_procedures_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_procedures_table","title":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_procedures_table","text":"dataset provides synthetic procedure-related information eProcedures section National Emergency Medical Services Information System (NEMSIS). contains example procedure details can used testing various functions within nemsqar package. Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_procedures_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_procedures_table","text":"","code":"nemsqar_procedures_table"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_procedures_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_procedures_table","text":"tibble 10,000 rows 8 variables: Incident Patient Care Report Number - PCR (eRecord.01) (chr) Unique identifier patient care report. Incident Date (date) date EMS incident. Procedure Performed Date Time (eProcedures.01) (dttm) date time procedure performed. Procedure Performed Prior EMS Care (eProcedures.02) (chr) Indicates whether procedure performed EMS arrival. Procedure Performed Description Code (eProcedures.03) (chr) Description code performed procedure. Patient Attempted Procedure Descriptions Codes List (eProcedures.03) (chr) List attempted procedures descriptions codes. Procedure Number Attempts (eProcedures.05) (dbl) Number attempts made perform procedure. Procedure Successful (eProcedures.06) (chr) Indicates whether procedure successful.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_procedures_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_procedures_table","text":"data table entirely synthetic intended solely testing purposes. data represent real patients, incidents, outcomes used research operational decision-making.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_procedures_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic eProcedures Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_procedures_table","text":"","code":"data(nemsqar_procedures_table) dplyr::glimpse(nemsqar_procedures_table) #> Rows: 10,000 #> Columns: 8 #> $ `Incident Patient Care Report Number - PCR (eRecord.01)`                   <chr> ‚Ä¶ #> $ `Incident Date`                                                            <date> ‚Ä¶ #> $ `Procedure Performed Date Time (eProcedures.01)`                           <dttm> ‚Ä¶ #> $ `Procedure Performed Prior To EMS Care (eProcedures.02)`                   <chr> ‚Ä¶ #> $ `Procedure Performed Description And Code (eProcedures.03)`                <chr> ‚Ä¶ #> $ `Patient Attempted Procedure Descriptions And Codes List (eProcedures.03)` <chr> ‚Ä¶ #> $ `Procedure Number Of Attempts (eProcedures.05)`                            <dbl> ‚Ä¶ #> $ `Procedure Successful (eProcedures.06)`                                    <chr> ‚Ä¶"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_response_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic eResponse Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_response_table","title":"Synthetic eResponse Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_response_table","text":"synthetic dataset representing eResponse section National Emergency Medical Services Information System (NEMSIS). dataset intended testing purposes contain real patient incident data. Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_response_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic eResponse Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_response_table","text":"","code":"data(nemsqar_response_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_response_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic eResponse Data from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_response_table","text":"tibble 10,000 rows 5 variables: Incident Patient Care Report Number - PCR (eRecord.01) Character. Unique identifier patient care report. Incident Date Date. date EMS incident. Response Type Service Requested Code (eResponse.05) Character. type service requested, including coded value. Response Type Scene Delay List (eResponse.10) Character. list delay types encountered scene. Response Additional Response Mode Descriptors List (eResponse.24) Character. list additional response mode descriptors.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_situation_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Test Data for eSituation Fields in National EMS Information System ‚Äî nemsqar_situation_table","title":"Synthetic Test Data for eSituation Fields in National EMS Information System ‚Äî nemsqar_situation_table","text":"dataset provides completely synthetic test data evaluating situation-related functions nemsqar package. includes variables related patient complaints, symptoms, injury status, provider impressions. dataset designed assist users testing expected input structure situation-related measures.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_situation_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Test Data for eSituation Fields in National EMS Information System ‚Äî nemsqar_situation_table","text":"","code":"data(nemsqar_situation_table)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_situation_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic Test Data for eSituation Fields in National EMS Information System ‚Äî nemsqar_situation_table","text":"data frame 10,000 rows 18 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique identifier incident report (character). Incident Date Date incident (Date). Situation Symptom Onset Date Time (eSituation.01) Date time symptoms began (datetime). Situation Possible Injury Code (eSituation.02) Indicates whether injury possible, including coded response (character). Situation Complaint Type (eSituation.03) Classification patient's complaint (character). Situation Complaint Statement (eSituation.04) Primary complaint reported patient (character). Situation Primary Complaint Statement List (eSituation.04) List primary complaints (character). Situation Complaint Duration (eSituation.05) Duration complaint (numeric). Situation Complaint Duration Time Units (eSituation.06) Units time associated complaint duration (character). Situation Chief Complaint Anatomic Location (eSituation.07) Anatomic location primary complaint (character). Situation Chief Complaint Organ System (eSituation.08) Organ system affected chief complaint (character). Situation Primary Symptom (eSituation.09) Primary symptom reported patient, including ICD code (character). Situation Associated Symptom Description (eSituation.10) Description additional symptoms (character). Situation Associated Symptom ICD Code (eSituation.10) ICD code associated symptoms (character). Situation Associated Symptoms List (eSituation.10) List additional symptoms reported (character). Situation Provider Primary Impression Code Description (eSituation.11) Primary impression provider, including ICD code (character). Situation Provider Secondary Impression Description Code (eSituation.12) Secondary provider impression, including ICD code (character). Situation Provider Secondary Impression Description Code List (eSituation.12) List secondary provider impressions (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_situation_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic Test Data for eSituation Fields in National EMS Information System ‚Äî nemsqar_situation_table","text":"Users encouraged test functions dataset, results interpreted meaningful. outputs may nonsensical, expected since data intended demonstrate expected structure input data.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_situation_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Test Data for eSituation Fields in National EMS Information System ‚Äî nemsqar_situation_table","text":"","code":"data(nemsqar_situation_table) head(nemsqar_situation_table) #> # A tibble: 6 √ó 18 #>   Incident Patient Care Report Number -‚Ä¶¬π `Incident Date` Situation Symptom On‚Ä¶¬≤ #>   <chr>                                   <date>          <dttm>                 #> 1 NyXFBlJfnm-8333586176                   2023-05-27      1720-05-24 03:52:00    #> 2 XTLCINMLTP-8616021114                   2023-10-14      2023-08-12 03:30:00    #> 3 HfYjlIEQSk-9529756610                   2023-07-07      2023-07-06 02:00:51    #> 4 MOwVDhriyC-5915613206                   2023-05-13      1953-05-12 05:28:00    #> 5 ZCGOtLEPKw-7820135532                   2023-11-24      2023-09-20 06:56:00    #> 6 fEMvUCQCRQ-9052388486                   2023-01-12      2020-08-12 08:51:28    #> # ‚Ñπ abbreviated names: #> #   ¬π‚Äã`Incident Patient Care Report Number - PCR (eRecord.01)`, #> #   ¬≤‚Äã`Situation Symptom Onset Date Time (eSituation.01)` #> # ‚Ñπ 15 more variables: #> #   `Situation Possible Injury With Code (eSituation.02)` <chr>, #> #   `Situation Complaint Type (eSituation.03)` <chr>, #> #   `Situation Complaint Statement (eSituation.04)` <chr>, ‚Ä¶"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_vitals_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_vitals_table","title":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_vitals_table","text":"dataset contains synthetic data eVitals section National Emergency Medical Services Information System (NEMSIS). designed testing functions within nemsqar package. data structure follows expected format eVitals fields produce meaningful clinical results.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_vitals_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_vitals_table","text":"","code":"nemsqar_vitals_table"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_vitals_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_vitals_table","text":"tibble 10,000 rows 19 variables: Incident Patient Care Report Number - PCR (eRecord.01) Unique incident identifier (character). Incident Date Date EMS incident (Date). Vitals Signs Taken Date Time (eVitals.01) Timestamp vital signs measurement (Datetime). Vitals ECG Type (eVitals.04) ECG type recorded (character). Vitals Systolic Blood Pressure SBP (eVitals.06) Systolic blood pressure (numeric). Vitals Diastolic Blood Pressure DBP (eVitals.07) Diastolic blood pressure (numeric). Vitals Heart Rate (eVitals.10) Heart rate beats per minute (numeric). Vitals Pulse Oximetry (eVitals.12) Oxygen saturation percentage (numeric). Vitals Respiratory Rate (eVitals.14) Respiratory rate breaths per minute (numeric). Vitals Respiratory Effort (eVitals.15) Observed respiratory effort (character). Vitals Carbon Dioxide CO2 (eVitals.16) End-tidal CO2 measurement (numeric). Vitals Blood Glucose Level (eVitals.18) Blood glucose level mg/dL (numeric). Vitals Glasgow Coma Score GCS Motor (eVitals.21) GCS motor response score (character). Vitals Total Glasgow Coma Score GCS (eVitals.23) Total Glasgow Coma Score (numeric). Vitals Level Responsiveness AVPU (eVitals.26) AVPU scale assessment (character). Vitals Pain Scale Score (eVitals.27) Pain scale score (numeric). Vitals Pain Scale Score Range Sort Order (eVitals.27) Sort order pain scale (numeric). Vitals Stroke Scale Score (eVitals.29) Stroke scale assessment result (character). Vitals Stroke Scale Type (eVitals.30) Type stroke scale used (character).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_vitals_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_vitals_table","text":"Users encouraged use dataset test functions, outputs may nonsensical, data solely intended demonstrate expected input structure.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/nemsqar_vitals_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic eVitals Data for NEMSIS from the National Emergency Medical Services Information System (NEMSIS) ‚Äî nemsqar_vitals_table","text":"","code":"data(nemsqar_vitals_table) dplyr::glimpse(nemsqar_vitals_table) #> Rows: 10,000 #> Columns: 19 #> $ `Incident Patient Care Report Number - PCR (eRecord.01)` <chr> \"NyXFBlJfnm-8‚Ä¶ #> $ `Incident Date`                                          <date> 2023-05-27, ‚Ä¶ #> $ `Vitals Signs Taken Date Time (eVitals.01)`              <dttm> 2023-05-27 0‚Ä¶ #> $ `Vitals ECG Type (eVitals.04)`                           <chr> \"5 Lead\", \"Qu‚Ä¶ #> $ `Vitals Systolic Blood Pressure SBP (eVitals.06)`        <dbl> 164, 159, 84,‚Ä¶ #> $ `Vitals Diastolic Blood Pressure DBP (eVitals.07)`       <dbl> 180, 200, 61,‚Ä¶ #> $ `Vitals Heart Rate (eVitals.10)`                         <dbl> 193, 218, 247‚Ä¶ #> $ `Vitals Pulse Oximetry (eVitals.12)`                     <dbl> 91, 76, 18, 3‚Ä¶ #> $ `Vitals Respiratory Rate (eVitals.14)`                   <dbl> 36, 69, 168, ‚Ä¶ #> $ `Vitals Respiratory Effort (eVitals.15)`                 <chr> \"Rapid\", \"Apn‚Ä¶ #> $ `Vitals Carbon Dioxide CO2 (eVitals.16)`                 <dbl> 96, 24, 90, 1‚Ä¶ #> $ `Vitals Blood Glucose Level (eVitals.18)`                <dbl> 90, 186, 9, 4‚Ä¶ #> $ `Vitals Glasgow Coma Score GCS Motor (eVitals.21)`       <chr> \"Not Recorded‚Ä¶ #> $ `Vitals Total Glasgow Coma Score GCS (eVitals.23)`       <dbl> 7, 8, 6, 5, 1‚Ä¶ #> $ `Vitals Level Of Responsiveness AVPU (eVitals.26)`       <chr> \"Not Recorded‚Ä¶ #> $ `Vitals Pain Scale Score (eVitals.27)`                   <dbl> 10, 0, 3, 9, ‚Ä¶ #> $ `Vitals Pain Scale Score Range Sort Order (eVitals.27)`  <dbl> 0, 3, 3, 1, 3‚Ä¶ #> $ `Vitals Stroke Scale Score (eVitals.29)`                 <chr> \"Not Applicab‚Ä¶ #> $ `Vitals Stroke Scale Type (eVitals.30)`                  <chr> \"Not Applicab‚Ä¶"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":null,"dir":"Reference","previous_headings":"","what":"Pediatrics-03B Calculation ‚Äî pediatrics_03b","title":"Pediatrics-03B Calculation ‚Äî pediatrics_03b","text":"function calculates pediatric metric focused EMS responses, specifically targeting responses involve patients 18 years age, certain weight-based medications administered. function filters EMS data identify relevant 911 responses narrows dataset cases involving children, calculating proportion cases documented weight among weight-based medications administered.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pediatrics-03B Calculation ‚Äî pediatrics_03b","text":"","code":"pediatrics_03b(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   exam_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eexam_01_col,   eexam_02_col,   emedications_03_col,   emedications_04_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pediatrics-03B Calculation ‚Äî pediatrics_03b","text":"df data frame tibble containing emergency response records. Default NULL. patient_scene_table data.frame tibble containing ePatient eScene fields fact table. Default NULL. response_table data.frame tibble containing eResponse fields needed measure's calculations. Default NULL. exam_table data.frame tibble containing eExam fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing eMedications fields needed measure's calculations. Default NULL. erecord_01_col Column unique EMS record identifiers. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column containing EMS response codes. eexam_01_col Column containing documented weight information. eexam_02_col Another column weight documentation, applicable. emedications_03_col Column indicating medication administration. emedications_04_col Column listing medications administered. ... Additional parameters dplyr::summarize output.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pediatrics-03B Calculation ‚Äî pediatrics_03b","text":"tibble summarizing results three population groups (, Adults, Peds) following columns: measure: name measure calculated. pop: Population type (, Adults, Peds). numerator: Count incidents patient weight documented. denominator: Total count incidents. prop: Proportion incidents patient weight documented. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pediatrics-03B Calculation ‚Äî pediatrics_03b","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pediatrics-03B Calculation ‚Äî pediatrics_03b","text":"","code":"# Synthetic test data test_data <- tibble::tibble(   erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",   \"2025-06-01\", \"2025-12-15\")),   patient_dob = as.Date(c(\"2021-01-01\", \"2020-01-01\", \"2022-02-01\",   \"2023-06-01\", \"2019-12-15\")),   epatient_15 = c(4, 5, 3, 2, 6),  # Ages   epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\"),   eresponse_05 = rep(2205001, 5),   emedications_03 = rep(\"stuff\", 5),   emedications_04 = c(\"Inhalation\", \"pill\", \"liquid\", \"pill\", \"liquid\"),   eexam_01 = c(60, 59, 58, 57, 56),   eexam_02 = c(\"Red\", \"Purple\", \"Grey\", \"Yellow\", \"Orange\") )  # Run function pediatrics_03b(   df = test_data,   erecord_01_col = erecord_01,   incident_date_col = incident_date,   patient_DOB_col = patient_dob,   epatient_15_col = epatient_15,   epatient_16_col = epatient_16,   eresponse_05_col = eresponse_05,   emedications_03_col = emedications_03,   emedications_04_col = emedications_04,   eexam_01_col = eexam_01,   eexam_02_col = eexam_02 ) #>  #> ‚îÄ‚îÄ Pediatrics-03b ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Pediatrics-03b ‚îÄ‚îÄ #>  #> Running `pediatrics_03b_population()`  [Working on 1 of 9 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 2 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 3 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 4 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 5 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 6 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 7 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 8 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 9 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Pediatrics-03b ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.14s. #>  #> # A tibble: 1 √ó 6 #>   measure        pop   numerator denominator  prop prop_label #>   <chr>          <chr>     <int>       <int> <dbl> <chr>      #> 1 Pediatrics-03b Peds          4           4     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Pediatrics-03B Populations ‚Äî pediatrics_03b_population","title":"Pediatrics-03B Populations ‚Äî pediatrics_03b_population","text":"Filters data target populations Pediatrics-03B, categorizes records identify needed information calculations. Identifies key categories related diabetes/hypoglycemia incidents EMS dataset, specifically focusing cases 911 called diabetes/hypoglycemia distress, certain medications administered, weight taken. function segments data pediatric populations, computing proportion cases documented weight.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pediatrics-03B Populations ‚Äî pediatrics_03b_population","text":"","code":"pediatrics_03b_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   exam_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eexam_01_col,   eexam_02_col,   emedications_03_col,   emedications_04_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pediatrics-03B Populations ‚Äî pediatrics_03b_population","text":"df data frame tibble containing emergency response records. Default NULL. patient_scene_table data.frame tibble containing ePatient eScene fields fact table. Default NULL. response_table data.frame tibble containing eResponse fields needed measure's calculations. Default NULL. exam_table data.frame tibble containing eExam fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing eMedications fields needed measure's calculations. Default NULL. erecord_01_col Column unique EMS record identifiers. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column containing EMS response codes. eexam_01_col Column containing documented weight information. eexam_02_col Another column weight documentation, applicable. emedications_03_col Column indicating medication administration. emedications_04_col Column listing medications administered.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pediatrics-03B Populations ‚Äî pediatrics_03b_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pediatrics-03B Populations ‚Äî pediatrics_03b_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pediatrics_03b_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pediatrics-03B Populations ‚Äî pediatrics_03b_population","text":"","code":"# create tables to test correct functioning patient_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")  )  response_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   eresponse_05 = rep(2205001, 5)  )  exam_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   eexam_01 = c(60, 59, 58, 57, 56),   eexam_02 = c(\"Red\", \"Purple\", \"Grey\", \"Yellow\", \"Orange\") )  medications_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   emedications_03 = rep(\"stuff\", 5),   emedications_04 = c(\"Inhalation\", \"pill\", \"liquid\", \"pill\", \"liquid\"),  )  # test the success of the function  result <- pediatrics_03b_population(patient_scene_table = patient_table,                            response_table = response_table,                            exam_table = exam_table,                            medications_table = medications_table,                            erecord_01_col = erecord_01,                            incident_date_col = incident_date,                            patient_DOB_col = patient_dob,                            epatient_15_col = epatient_15,                            epatient_16_col = epatient_16,                            eresponse_05_col = eresponse_05,                            emedications_03_col = emedications_03,                            emedications_04_col = emedications_04,                            eexam_01_col = eexam_01,                            eexam_02_col = eexam_02                            ) #> Running `pediatrics_03b_population()`  [Working on 1 of 9 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 2 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 3 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 4 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 5 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 6 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 7 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 8 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `pediatrics_03b_population()`  [Working on 9 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 6 √ó 2 #>   filter                count #>   <chr>                 <int> #> 1 Meds not missing          5 #> 2 Non-Weight Based Meds     1 #> 3 Documented Weight         5 #> 4 911 calls                 5 #> 5 Peds denominator          3 #> 6 Total dataset             5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Numeric Variables as Percentages ‚Äî pretty_percent","title":"Format Numeric Variables as Percentages ‚Äî pretty_percent","text":"function formats numeric variables percentages specified number decimal places. refines output removing unnecessary trailing zeros decimal point ensures percentage sign correctly applied without extraneous characters, resulting polished, human-readable percentage representation.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Numeric Variables as Percentages ‚Äî pretty_percent","text":"","code":"pretty_percent(variable, n_decimal = 1)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Numeric Variables as Percentages ‚Äî pretty_percent","text":"variable numeric vector representing proportions format percentages. values scale 0 1. n_decimal numeric value specifying number decimal places. Defaults 1.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Numeric Variables as Percentages ‚Äî pretty_percent","text":"character vector containing formatted percentages.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format Numeric Variables as Percentages ‚Äî pretty_percent","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/pretty_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Numeric Variables as Percentages ‚Äî pretty_percent","text":"","code":"# Example usage: pretty_percent(0.12345)  # Default decimal places #> [1] \"12.3%\" pretty_percent(0.12345, n_decimal = 2)  # Two decimal places #> [1] \"12.35%\" pretty_percent(c(0.1, 0.25, 0.3333), n_decimal = 1)  # Vector input #> [1] \"10%\"   \"25%\"   \"33.3%\""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Respiratory-01 Calculation ‚Äî respiratory_01","title":"Respiratory-01 Calculation ‚Äî respiratory_01","text":"respiratory_01 function filters analyzes data related emergency 911 respiratory distress incidents, providing summary statistics adult pediatric populations. function uses specific data columns 911 response codes, primary secondary impressions, vital signs calculate proportion cases complete vital signs recorded, stratified age.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respiratory-01 Calculation ‚Äî respiratory_01","text":"","code":"respiratory_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_12_col,   evitals_14_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Respiratory-01 Calculation ‚Äî respiratory_01","text":"df data frame containing incident data row representing observation. patient_scene_table data.frame tibble containing least epatient escene fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. situation_table data.frame tibble containing least esituation fields needed measure's calculations. vitals_table data.frame tibble containing least evitals fields needed measure's calculations. erecord_01_col Unique Patient ID incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column name 911 response codes (e.g., 2205001, 2205003, 2205009). esituation_11_col Column name primary impression codes related respiratory distress. esituation_12_col Column name secondary impression codes related respiratory distress. evitals_12_col Column name first vital sign measurement. evitals_14_col Column name second vital sign measurement. ... arguments passed dplyr::summarize().","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respiratory-01 Calculation ‚Äî respiratory_01","text":"tibble summarizing results Adults, Peds, records following columns: measure: name measure calculated. pop: Population type (Adults, Peds, ). numerator: Count EMS responses originating 911 request patients primary secondary impression respiratory distress respiratory assessment. denominator: Total count incidents. prop: Proportion EMS responses originating 911 request patients primary secondary impression respiratory distress respiratory assessment. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Respiratory-01 Calculation ‚Äî respiratory_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respiratory-01 Calculation ‚Äî respiratory_01","text":"","code":"# Synthetic test data test_data <- tibble::tibble(   erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   epatient_15 = c(34, 5, 45, 2, 60),  # Ages   epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),   eresponse_05 = rep(2205001, 5),   esituation_11 = c(rep(\"J80\", 3), rep(\"I50.9\", 2)),   esituation_12 = c(rep(\"J80\", 2), rep(\"I50.9\", 3)),   evitals_12 = c(60, 59, 58, 57, 56),   evitals_14 = c(16, 15, 14, 13, 12) )  # Run the function respiratory_01(   df = test_data,   erecord_01_col = erecord_01,   epatient_15_col = epatient_15,   epatient_16_col = epatient_16,   eresponse_05_col = eresponse_05,   esituation_11_col = esituation_11,   esituation_12_col = esituation_12,   evitals_12_col = evitals_12,   evitals_14_col = evitals_14 ) #>  #> ‚îÄ‚îÄ Respiratory-01 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Respiratory-01 ‚îÄ‚îÄ #>  #> Running `respiratory_01_population()`  [Working on 1 of 13 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_01_population()`  [Working on 2 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_01_population()`  [Working on 3 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_01_population()`  [Working on 4 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_01_population()`  [Working on 5 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 6 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 7 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 8 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 9 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 10 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 11 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 12 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 13 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Respiratory-01 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.19s. #>  #> # A tibble: 3 √ó 6 #>   measure        pop    numerator denominator  prop prop_label #>   <chr>          <chr>      <int>       <int> <dbl> <chr>      #> 1 Respiratory-01 Adults         3           3     1 100%       #> 2 Respiratory-01 Peds           2           2     1 100%       #> 3 Respiratory-01 All            5           5     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Respiratory-01 Populations ‚Äî respiratory_01_population","title":"Respiratory-01 Populations ‚Äî respiratory_01_population","text":"respiratory_01_population function filters analyzes data related emergency 911 respiratory distress incidents, providing adult, pediatric, initial populations. function uses specific data columns 911 response codes, primary secondary impressions, vital signs filter dataset populations interest.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respiratory-01 Populations ‚Äî respiratory_01_population","text":"","code":"respiratory_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_12_col,   evitals_14_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Respiratory-01 Populations ‚Äî respiratory_01_population","text":"df data frame containing incident data row representing observation. patient_scene_table data.frame tibble containing least epatient escene fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. situation_table data.frame tibble containing least esituation fields needed measure's calculations. vitals_table data.frame tibble containing least evitals fields needed measure's calculations. erecord_01_col Unique Patient ID incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column name 911 response codes (e.g., 2205001, 2205003, 2205009). esituation_11_col Column name primary impression codes related respiratory distress. esituation_12_col Column name secondary impression codes related respiratory distress. evitals_12_col Column name first vital sign measurement. evitals_14_col Column name second vital sign measurement.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respiratory-01 Populations ‚Äî respiratory_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Respiratory-01 Populations ‚Äî respiratory_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respiratory-01 Populations ‚Äî respiratory_01_population","text":"","code":"# create tables to test correct functioning  # patient table patient_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")  )  # response table response_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   eresponse_05 = rep(2205001, 5)  )  # situation table situation_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   esituation_11 = c(rep(\"J80\", 3), rep(\"I50.9\", 2)),   esituation_12 = c(rep(\"J80\", 2), rep(\"I50.9\", 3)) )  # vitals table vitals_table <- tibble::tibble(    erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),   evitals_12 = c(60, 59, 58, 57, 56),   evitals_14 = c(16, 15, 14, 13, 12)  )  # Run the function result <- respiratory_01_population(patient_scene_table = patient_table,                               response_table = response_table,                               situation_table = situation_table,                               vitals_table = vitals_table,                               erecord_01_col = erecord_01,                               incident_date_col = incident_date,                               patient_DOB_col = patient_dob,                               epatient_15_col = epatient_15,                               epatient_16_col = epatient_16,                               eresponse_05_col = eresponse_05,                               esituation_11_col = esituation_11,                               esituation_12_col = esituation_12,                               evitals_12_col = evitals_12,                               evitals_14_col = evitals_14                              ) #> Running `respiratory_01_population()`  [Working on 1 of 13 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_01_population()`  [Working on 2 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_01_population()`  [Working on 3 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_01_population()`  [Working on 4 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_01_population()`  [Working on 5 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 6 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 7 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 8 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 9 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 10 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 12 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_01_population()`  [Working on 13 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 7 √ó 2 #>   filter                                    count #>   <chr>                                     <int> #> 1 Respiratory Distress                          5 #> 2 Pulse Oximetry and Respiratory Rate taken     5 #> 3 911 calls                                     5 #> 4 Adults denominator                            2 #> 5 Peds denominator                              3 #> 6 Initial population                            5 #> 7 Total dataset                                 5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":null,"dir":"Reference","previous_headings":"","what":"Respiratory-02 Calculation ‚Äî respiratory_02","title":"Respiratory-02 Calculation ‚Äî respiratory_02","text":"respiratory_02 function calculates metrics pediatric adult respiratory populations based pre-defined criteria, low oxygen saturation specific medication procedure codes. returns summary table overall, pediatric, adult populations, showing counts proportions.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respiratory-02 Calculation ‚Äî respiratory_02","text":"","code":"respiratory_02(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   vitals_table = NULL,   medications_table = NULL,   procedures_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   evitals_12_col,   emedications_03_col,   eprocedures_03_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Respiratory-02 Calculation ‚Äî respiratory_02","text":"df data frame containing incident data row representing observation. patient_scene_table data.frame tibble containing least epatient escene fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. vitals_table data.frame tibble containing least evitals fields needed measure's calculations. medications_table data.frame tibble containing emedications fields needed measure's calculations. procedures_table data.frame tibble containing eprocedures fields needed measure's calculations. erecord_01_col Column name eRecord.01, used form unique patient ID. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col integer Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column name response codes (e.g., incident type). evitals_12_col Column name oxygen saturation (SpO2) values. emedications_03_col Column name medication codes. eprocedures_03_col Column name procedure codes. ... arguments passed dplyr::summarize().","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respiratory-02 Calculation ‚Äî respiratory_02","text":"tibble summarizing results Adults, Peds, records following columns: measure: name measure calculated. pop: Population type (Adults, Peds, ). numerator: Count EMS responses originating 911 request patients hypoxia oxygen administered. denominator: Total count incidents. prop: Proportion EMS responses originating 911 request patients hypoxia oxygen administered. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Respiratory-02 Calculation ‚Äî respiratory_02","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respiratory-02 Calculation ‚Äî respiratory_02","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     emedications_03 = c(\"Oxygen\", \"Oxygen\", \"Oxygen\", \"Oxygen\", \"Oxygen\"),     evitals_12 = c(60, 59, 58, 57, 56),     eprocedures_03 = rep(\"applicable thing\", 5)   )    # Run the function   respiratory_02(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     emedications_03_col = emedications_03,     evitals_12_col = evitals_12,     eprocedures_03_col = eprocedures_03   ) #>  #> ‚îÄ‚îÄ Respiratory-02 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Respiratory-02 ‚îÄ‚îÄ #>  #> Running `respiratory_02_population()`  [Completed 1 of 11 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_02_population()`  [Completed 2 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_02_population()`  [Completed 3 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_02_population()`  [Completed 4 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_02_population()`  [Completed 5 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 6 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 7 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 8 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 9 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 10 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 11 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Respiratory-02 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.17s. #>  #> # A tibble: 3 √ó 6 #>   measure        pop    numerator denominator  prop prop_label #>   <chr>          <chr>      <int>       <int> <dbl> <chr>      #> 1 Respiratory-02 Adults         3           3     1 100%       #> 2 Respiratory-02 Peds           2           2     1 100%       #> 3 Respiratory-02 All            5           5     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Respiratory-02 Populations ‚Äî respiratory_02_population","title":"Respiratory-02 Populations ‚Äî respiratory_02_population","text":"respiratory_02_population function calculates metrics pediatric adult respiratory populations based pre-defined criteria, low oxygen saturation specific medication procedure codes. returns summary table overall, pediatric, adult populations, showing counts proportions.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Respiratory-02 Populations ‚Äî respiratory_02_population","text":"","code":"respiratory_02_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   vitals_table = NULL,   medications_table = NULL,   procedures_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   evitals_12_col,   emedications_03_col,   eprocedures_03_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Respiratory-02 Populations ‚Äî respiratory_02_population","text":"df data frame containing incident data row representing observation. patient_scene_table data.frame tibble containing least epatient escene fields fact table. response_table data.frame tibble containing least eresponse fields needed measure's calculations. vitals_table data.frame tibble containing least evitals fields needed measure's calculations. medications_table data.frame tibble containing emedications fields needed measure's calculations. procedures_table data.frame tibble containing eprocedures fields needed measure's calculations. erecord_01_col Column name eRecord.01, used form unique patient ID. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col integer Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column name response codes (e.g., incident type). evitals_12_col Column name oxygen saturation (SpO2) values. emedications_03_col Column name medication codes. eprocedures_03_col Column name procedure codes.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Respiratory-02 Populations ‚Äî respiratory_02_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Respiratory-02 Populations ‚Äî respiratory_02_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/respiratory_02_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Respiratory-02 Populations ‚Äî respiratory_02_population","text":"","code":"# create tables to test correct functioning # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # medications table   medications_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     emedications_03 = c(\"Oxygen\", \"Oxygen\", \"Oxygen\", \"Oxygen\", \"Oxygen\")    )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_12 = c(60, 59, 58, 57, 56),    )    # procedures table   procedures_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eprocedures_03 = rep(\"applicable thing\", 5)    )  # Run the function result <- respiratory_02_population(patient_scene_table = patient_table,                               response_table = response_table,                               medications_table = medications_table,                               vitals_table = vitals_table,                               procedures_table = procedures_table,                               erecord_01_col = erecord_01,                               incident_date_col = incident_date,                               patient_DOB_col = patient_dob,                               epatient_15_col = epatient_15,                               epatient_16_col = epatient_16,                               eresponse_05_col = eresponse_05,                               emedications_03_col = emedications_03,                               evitals_12_col = evitals_12,                               eprocedures_03_col = eprocedures_03                              ) #> Running `respiratory_02_population()`  [Completed 1 of 11 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_02_population()`  [Completed 2 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_02_population()`  [Completed 3 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_02_population()`  [Completed 4 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `respiratory_02_population()`  [Completed 5 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 6 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 7 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 8 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 9 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 10 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `respiratory_02_population()`  [Completed 11 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 8 √ó 2 #>   filter                   count #>   <chr>                    <int> #> 1 Oxygen given as med          5 #> 2 Oxygen therapy procedure     0 #> 3 Pulse oximetry < 90          5 #> 4 911 calls                    5 #> 5 Adults denominator           2 #> 6 Peds denominator             3 #> 7 Initial population           5 #> 8 Total dataset                5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/results_summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate Measure Results ‚Äî results_summarize","title":"Tabulate Measure Results ‚Äî results_summarize","text":"Calculates measure numerator, denominator, proportions NEMSQA measure population. Used throughout package calculate measure results.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/results_summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate Measure Results ‚Äî results_summarize","text":"","code":"results_summarize(   total_population,   adult_population,   peds_population,   measure_name,   population_names = c(total = \"All\", adult = \"Adults\", peds = \"Peds\"),   numerator_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/results_summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate Measure Results ‚Äî results_summarize","text":"total_population dataframe tibble containing filtered calculated fields. adult_population dataframe tibble containing filtered calculated fields. peds_population dataframe tibble containing filtered calculated fields. measure_name string containing measure description. population_names list containing population descriptions. numerator_col tidyselect column containing numerator. ... (optional) additional arguments","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/results_summarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate Measure Results ‚Äî results_summarize","text":"Results tibble","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/results_summarize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tabulate Measure Results ‚Äî results_summarize","text":"Samuel Kordik, BBA, BS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-01 Calculation ‚Äî safety_01","title":"Safety-01 Calculation ‚Äî safety_01","text":"safety_01 function calculates proportion 911 responses \"lights sirens\" used EMS dataset. generates age-based population summaries, calculating count proportion \"lights sirens\" responses among incidents, within adult pediatric groups.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-01 Calculation ‚Äî safety_01","text":"","code":"safety_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eresponse_24_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-01 Calculation ‚Äî safety_01","text":"df data frame tibble containing EMS data. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. erecord_01_col Column name containing unique patient record identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column containing age. epatient_16_col Column age units. eresponse_05_col Column containing response mode codes (e.g., 911 response codes). eresponse_24_col Column detailing additional response descriptors text. ... arguments passed summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-01 Calculation ‚Äî safety_01","text":"tibble summarizing results Adults, Peds, records following columns: measure: name measure calculated. pop: Population type (Adults, Peds, ). numerator: Count 911 responses \"lights sirens\" used EMS dataset. denominator: Total count incidents. prop: Proportion 911 responses \"lights sirens\" used EMS dataset. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-01 Calculation ‚Äî safety_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-01 Calculation ‚Äî safety_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     eresponse_24 = rep(\"No Lights or Sirens\", 5)   )    # Run the function   safety_01(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     eresponse_24_col = eresponse_24   ) #>  #> ‚îÄ‚îÄ Safety-01 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Safety-01 ‚îÄ‚îÄ #>  #> Running `safety_01_population()`  [Working on 1 of 9 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_01_population()`  [Working on 2 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_01_population()`  [Working on 3 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_01_population()`  [Working on 4 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_01_population()`  [Working on 5 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `safety_01_population()`  [Working on 6 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_01_population()`  [Working on 7 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_01_population()`  [Working on 8 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_01_population()`  [Working on 9 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Safety-01 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.14s. #>  #> # A tibble: 3 √ó 6 #>   measure   pop    numerator denominator  prop prop_label #>   <chr>     <chr>      <int>       <int> <dbl> <chr>      #> 1 Safety-01 Adults         3           3     1 100%       #> 2 Safety-01 Peds           1           1     1 100%       #> 3 Safety-01 All            5           5     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-01 Populations ‚Äî safety_01_population","title":"Safety-01 Populations ‚Äî safety_01_population","text":"Filters data target populations Safety-01, categorizes records identify needed information calculations. Identifies key categories related 911 responses \"lights sirens\" used EMS dataset. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-01 Populations ‚Äî safety_01_population","text":"","code":"safety_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   eresponse_24_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-01 Populations ‚Äî safety_01_population","text":"df data frame tibble containing EMS data. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. erecord_01_col Column name containing unique patient record identifier. incident_date_col Date POSIXct column indicating date incident. patient_DOB_col Date POSIXct column patient‚Äôs date birth epatient_15_col Column containing age. epatient_16_col Column age units. eresponse_05_col Column containing response mode codes (e.g., 911 response codes). eresponse_24_col Column detailing additional response descriptors text.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-01 Populations ‚Äî safety_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-01 Populations ‚Äî safety_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-01 Populations ‚Äî safety_01_population","text":"","code":"# create tables to test correct functioning  # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5),     eresponse_24 = rep(\"No Lights or Sirens\", 5)    )  # Run the function result <- safety_01_population(patient_scene_table = patient_table,                               response_table = response_table,                               erecord_01_col = erecord_01,                               incident_date_col = incident_date,                               patient_DOB_col = patient_dob,                               epatient_15_col = epatient_15,                               epatient_16_col = epatient_16,                               eresponse_05_col = eresponse_05,                               eresponse_24_col = eresponse_24                         ) #> Running `safety_01_population()`  [Working on 1 of 9 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_01_population()`  [Working on 2 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_01_population()`  [Working on 3 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_01_population()`  [Working on 4 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_01_population()`  [Working on 5 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `safety_01_population()`  [Working on 6 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_01_population()`  [Working on 7 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_01_population()`  [Working on 8 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_01_population()`  [Working on 9 of 9 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 6 √ó 2 #>   filter               count #>   <chr>                <int> #> 1 911 calls                5 #> 2 No lights and sirens     5 #> 3 Adults denominator       2 #> 4 Peds denominator         3 #> 5 Initial population       5 #> 6 Total dataset            5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-02 Calculation ‚Äî safety_02","title":"Safety-02 Calculation ‚Äî safety_02","text":"safety_02 function calculates Safety-02 metric, evaluating proportion emergency medical calls involving transport lights sirens used. function categorizes population adult pediatric groups based age, summarizes results total population count well.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-02 Calculation ‚Äî safety_02","text":"","code":"safety_02(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   edisposition_18_col,   edisposition_28_col,   transport_disposition_cols,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-02 Calculation ‚Äî safety_02","text":"df data frame row observation, column represents feature. patient_scene_table data.frame tibble containing epatient escene fields fact table. response_table data.frame tibble containing eresponse fields needed measure's calculations. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column giving response codes, identifying 911 responses. edisposition_18_col Column giving transport mode descriptors, including possible lights--sirens indicators. edisposition_28_col Column giving patient evaluation care categories EMS response. transport_disposition_cols One unquoted column names (edisposition.12, edisposition.30) containing transport disposition details. ... Additional arguments summary calculation, needed.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-02 Calculation ‚Äî safety_02","text":"tibble summarizing results three age groups (< 10 yrs, 10‚Äì65 yrs, >= 65 yrs) following columns: measure: name measure calculated. pop: Population type (< 18 yrs, >= 18 yrs, ). numerator: Count incidents 911 request lights sirens used patient transport. denominator: Total count incidents. prop:Proportion incidents 911 request lights sirens used patient transport. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-02 Calculation ‚Äî safety_02","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-02 Calculation ‚Äî safety_02","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     edisposition_18 = rep(4218015, 5),     edisposition_28 = rep(4228001, 5),     edisposition_30 = rep(4230001, 5)   )    # Run function   safety_02(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     edisposition_18_col = edisposition_18,     edisposition_28_col = edisposition_28,     transport_disposition_cols = edisposition_30   ) #>  #> ‚îÄ‚îÄ Safety-02 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Safety-02 ‚îÄ‚îÄ #>  #> Running `safety_02_population()`  [Working on 1 of 11 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 2 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 3 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 4 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 5 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 6 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 7 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_02_population()`  [Working on 8 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_02_population()`  [Working on 9 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_02_population()`  [Working on 10 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_02_population()`  [Working on 11 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Safety-02 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.17s. #>  #> # A tibble: 3 √ó 6 #>   measure   pop    numerator denominator  prop prop_label #>   <chr>     <chr>      <int>       <int> <dbl> <chr>      #> 1 Safety-02 Adults         3           3     1 100%       #> 2 Safety-02 Peds           1           1     1 100%       #> 3 Safety-02 All            5           5     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-02 Populations ‚Äî safety_02_population","title":"Safety-02 Populations ‚Äî safety_02_population","text":"Filters data target populations Safety-02, categorizes records identify needed information calculations. Identifies key categories related 911 request lights sirens used patient transport. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-02 Populations ‚Äî safety_02_population","text":"","code":"safety_02_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   edisposition_18_col,   edisposition_28_col,   transport_disposition_cols )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-02 Populations ‚Äî safety_02_population","text":"df data frame row observation, column represents feature. patient_scene_table data.frame tibble containing epatient escene fields fact table. response_table data.frame tibble containing eresponse fields needed measure's calculations. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column giving calculated age value. epatient_16_col Column giving provided age unit value. eresponse_05_col Column giving response codes, identifying 911 responses. edisposition_18_col Column giving transport mode descriptors, including possible lights--sirens indicators. edisposition_28_col Column giving patient evaluation care categories EMS response. transport_disposition_cols One unquoted column names (edisposition.12, edisposition.30) containing transport disposition details.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-02 Populations ‚Äî safety_02_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-02 Populations ‚Äî safety_02_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_02_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-02 Populations ‚Äî safety_02_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_18 = rep(4218015, 5),     edisposition_28 = rep(4228001, 5),     edisposition_30 = rep(4230001, 5)   )    # test the success of the function   result <- safety_02_population(patient_scene_table = patient_table,                         response_table = response_table,                         disposition_table = disposition_table,                         erecord_01_col = erecord_01,                         incident_date_col = incident_date,                         patient_DOB_col = patient_dob,                         epatient_15_col = epatient_15,                         epatient_16_col = epatient_16,                         eresponse_05_col = eresponse_05,                         edisposition_18_col = edisposition_18,                         edisposition_28_col = edisposition_28,                         transport_disposition_cols = edisposition_30                         ) #> Running `safety_02_population()`  [Working on 1 of 11 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 2 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 3 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 4 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 5 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 6 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `safety_02_population()`  [Working on 7 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_02_population()`  [Working on 8 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_02_population()`  [Working on 9 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_02_population()`  [Working on 10 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_02_population()`  [Working on 11 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 8 √ó 2 #>   filter                               count #>   <chr>                                <int> #> 1 911 calls                                5 #> 2 Patients evaluated and care provided     5 #> 3 Transport runs                           5 #> 4 No lights and sirens                     5 #> 5 Adults denominator                       2 #> 6 Peds denominator                         3 #> 7 Initial population                       5 #> 8 Total dataset                            5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-04 Calculation ‚Äî safety_04","title":"Safety-04 Calculation ‚Äî safety_04","text":"safety_04 function processes EMS incident data specific safety transport criteria, filtering patient age incident type identify cases meet specified exclusion inclusion criteria. function accommodates data various EMS-specific codes, age descriptors, procedure identifiers.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-04 Calculation ‚Äî safety_04","text":"","code":"safety_04(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   injury_table = NULL,   procedures_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   earrest_01_col,   einjury_03_col,   eprocedures_03_col,   edisposition_14_col,   transport_disposition_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-04 Calculation ‚Äî safety_04","text":"df data frame tibble containing EMS data row represents individual observation. patient_scene_table data frame tibble containing fields epatient escene needed measure's calculations. response_table data frame tibble containing fields eresponse needed measure's calculations. arrest_table data frame tibble containing fields earrest needed measure's calculations. injury_table data frame tibble containing fields einjury needed measure's calculations. procedures_table data frame tibble containing fields eprocedures needed measure's calculations. disposition_table data frame tibble containing fields edisposition needed measure's calculations. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name indicating patient age. epatient_16_col Column name unit age (e.g., \"Years,\" \"Months\"). eresponse_05_col Column containing response transport codes. earrest_01_col Column cardiac arrest status information. einjury_03_col Column describing traumatic injuries, expected list text-separated entries. eprocedures_03_col Column listing procedures, assumed contain multiple procedure codes/texts cell. edisposition_14_col Column transport dispositions. transport_disposition_col Columns primary secondary transport dispositions. ... Additional arguments flexibility function customization.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-04 Calculation ‚Äî safety_04","text":"data.frame summarizing results three population groups (, Adults, Peds) following columns: measure: name measure calculated. pop: Population type (, Adults, Peds). numerator: Count incidents beta-agonist medications administered. denominator: Total count incidents. prop: Proportion incidents involving beta-agonist medications. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-04 Calculation ‚Äî safety_04","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-04 Calculation ‚Äî safety_04","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     earrest_01 = rep(\"No\", 5),     einjury_03 = rep(\"non-injury\", 5),     edisposition_14 = rep(4214001, 5),     edisposition_30 = rep(4230001, 5),     eprocedures_03 = rep(\"other response\", 5)   )    # Run function   safety_04(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     earrest_01_col = earrest_01,     einjury_03_col = einjury_03,     edisposition_14_col = edisposition_14,     transport_disposition_col = edisposition_30,     eprocedures_03_col = eprocedures_03   ) #>  #> ‚îÄ‚îÄ Safety-04 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Safety-04 ‚îÄ‚îÄ #>  #> Running `safety_04_population()`  [Working on 1 of 13 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 2 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 3 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 4 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 5 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 6 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 7 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 8 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_04_population()`  [Working on 9 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_04_population()`  [Working on 10 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_04_population()`  [Working on 11 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_04_population()`  [Working on 12 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_04_population()`  [Working on 13 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Safety-04 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.19s. #>  #> # A tibble: 1 √ó 6 #>   measure   pop   numerator denominator  prop prop_label #>   <chr>     <chr>     <int>       <int> <dbl> <chr>      #> 1 Safety-04 Peds          2           2     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Safety-04 Populations ‚Äî safety_04_population","title":"Safety-04 Populations ‚Äî safety_04_population","text":"Filters data target populations Safety-04, categorizes records identify needed information calculations. Identifies key categories related 911 request interfacility request patients less 8 years age patients transported using pediatric restraint device. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safety-04 Populations ‚Äî safety_04_population","text":"","code":"safety_04_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   arrest_table = NULL,   injury_table = NULL,   procedures_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   earrest_01_col,   einjury_03_col,   eprocedures_03_col,   edisposition_14_col,   transport_disposition_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safety-04 Populations ‚Äî safety_04_population","text":"df data frame tibble containing EMS data row represents individual observation. patient_scene_table data frame tibble containing fields epatient escene needed measure's calculations. response_table data frame tibble containing fields eresponse needed measure's calculations. arrest_table data frame tibble containing fields earrest needed measure's calculations. injury_table data frame tibble containing fields einjury needed measure's calculations. procedures_table data frame tibble containing fields eprocedures needed measure's calculations. disposition_table data frame tibble containing fields edisposition needed measure's calculations. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name indicating patient age. epatient_16_col Column name unit age (e.g., \"Years,\" \"Months\"). eresponse_05_col Column containing response transport codes. earrest_01_col Column cardiac arrest status information. einjury_03_col Column describing traumatic injuries, expected list text-separated entries. eprocedures_03_col Column listing procedures, assumed contain multiple procedure codes/texts cell. edisposition_14_col Column transport dispositions. transport_disposition_col Columns primary secondary transport dispositions.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safety-04 Populations ‚Äî safety_04_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Safety-04 Populations ‚Äî safety_04_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/safety_04_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safety-04 Populations ‚Äî safety_04_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_14 = rep(4214001, 5),     edisposition_30 = rep(4230001, 5),   )    # arrest table   arrest_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     earrest_01 = rep(\"No\", 5)   )    # injury table   injury_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     einjury_03 = rep(\"non-injury\", 5)   )    # procedures table   procedures_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eprocedures_03 = rep(\"other response\", 5)   )    # test the success of the function   result <- safety_04_population(patient_scene_table = patient_table,                         response_table = response_table,                         arrest_table = arrest_table,                         injury_table = injury_table,                         procedures_table = procedures_table,                         disposition_table = disposition_table,                         erecord_01_col = erecord_01,                         incident_date_col = incident_date,                         patient_DOB_col = patient_dob,                         epatient_15_col = epatient_15,                         epatient_16_col = epatient_16,                         eresponse_05_col = eresponse_05,                         earrest_01_col = earrest_01,                         einjury_03_col = einjury_03,                         edisposition_14_col = edisposition_14,                         transport_disposition_col = edisposition_30,                         eprocedures_03_col = eprocedures_03                         ) #> Running `safety_04_population()`  [Working on 1 of 13 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 2 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 3 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 4 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 5 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 6 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 7 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `safety_04_population()`  [Working on 8 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_04_population()`  [Working on 9 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_04_population()`  [Working on 10 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_04_population()`  [Working on 11 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_04_population()`  [Working on 12 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `safety_04_population()`  [Working on 13 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 10 √ó 2 #>    filter                              count #>    <chr>                               <int> #>  1 Transport runs                          5 #>  2 Interfacility runs                      0 #>  3 Cardiac arrest calls                    0 #>  4 Severe injury calls                     0 #>  5 Calls involving long board              0 #>  6 Calls involving an airway procedure     0 #>  7 Car seat used                           5 #>  8 Peds denominator                        3 #>  9 Initial population                      3 #> 10 Total dataset                           5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":null,"dir":"Reference","previous_headings":"","what":"Seizure-02 Calculation ‚Äî seizure_02","title":"Seizure-02 Calculation ‚Äî seizure_02","text":"Calculates NEMSQA Seizure-02 Measure. Calculates age-based seizure metrics dataset. function filters data patients based incident information, diagnoses, administered medications assess adherence Seizure-02 metrics.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seizure-02 Calculation ‚Äî seizure_02","text":"","code":"seizure_02(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   emedications_03_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seizure-02 Calculation ‚Äî seizure_02","text":"df data frame row observation, containing necessary columns analysis. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing emedications fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name patient age numeric form. epatient_16_col Column name age unit (e.g., \"Years\" \"Months\"). eresponse_05_col Column name response codes; \"911\" call codes filtered. esituation_11_col Column name primary impressions. esituation_12_col Column name secondary impressions. emedications_03_col Column name medications administered; ideally list column string comma-separated values. ... Additional arguments passed dplyr::summarize.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seizure-02 Calculation ‚Äî seizure_02","text":"tibble summarizing results three population groups (, Adults, Peds) following columns: measure: name measure calculated. pop: Population type (, Adults, Peds). numerator: Count incidents beta-agonist medications administered. denominator: Total count incidents. prop: Proportion incidents involving beta-agonist medications. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Seizure-02 Calculation ‚Äî seizure_02","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seizure-02 Calculation ‚Äî seizure_02","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_11 = rep(\"G40\", 5),     esituation_12 = rep(\"r56\", 5),     emedications_03 = rep(3322, 5)   )    # Run the function   seizure_02(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_11_col = esituation_11,     esituation_12_col = esituation_12,     emedications_03_col = emedications_03,   ) #>  #> ‚îÄ‚îÄ Seizure-02 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Seizure-02 ‚îÄ‚îÄ #>  #> Running `seizure_02_population()`  [Working on 1 of 10 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `seizure_02_population()`  [Working on 2 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `seizure_02_population()`  [Working on 3 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `seizure_02_population()`  [Working on 4 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `seizure_02_population()`  [Working on 5 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `seizure_02_population()`  [Working on 6 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `seizure_02_population()`  [Working on 7 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `seizure_02_population()`  [Working on 8 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `seizure_02_population()`  [Working on 9 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `seizure_02_population()`  [Working on 10 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Seizure-02 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.15s. #>  #> # A tibble: 3 √ó 6 #>   measure    pop    numerator denominator  prop prop_label #>   <chr>      <chr>      <int>       <int> <dbl> <chr>      #> 1 Seizure-02 Adults         3           3     1 100%       #> 2 Seizure-02 Peds           1           1     1 100%       #> 3 Seizure-02 All            5           5     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Seizure-02 Populations ‚Äî seizure_02_population","title":"Seizure-02 Populations ‚Äî seizure_02_population","text":"Filters data target populations Seizure-02, categorizes records identify needed information calculations. Identifies key categories related asthma-related incidents EMS dataset, specifically focusing cases 911 called respiratory distress, certain medications administered. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seizure-02 Populations ‚Äî seizure_02_population","text":"","code":"seizure_02_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   medications_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   emedications_03_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seizure-02 Populations ‚Äî seizure_02_population","text":"df data frame row observation, containing necessary columns analysis. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. medications_table data.frame tibble containing emedications fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name patient age numeric form. epatient_16_col Column name age unit (e.g., \"Years\" \"Months\"). eresponse_05_col Column name response codes; \"911\" call codes filtered. esituation_11_col Column name primary impressions. esituation_12_col Column name secondary impressions. emedications_03_col Column name medications administered; ideally list column string comma-separated values.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seizure-02 Populations ‚Äî seizure_02_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Seizure-02 Populations ‚Äî seizure_02_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/seizure_02_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seizure-02 Populations ‚Äî seizure_02_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_11 = rep(\"G40\", 5),     esituation_12 = rep(\"r56\", 5),   )    # medications table   medications_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     emedications_03 = rep(3322, 5)    )    # test the success of the function   result <- seizure_02_population(patient_scene_table = patient_table,                               response_table = response_table,                               situation_table = situation_table,                               medications_table = medications_table,                               erecord_01_col = erecord_01,                               incident_date_col = incident_date,                               patient_DOB_col = patient_dob,                               epatient_15_col = epatient_15,                               epatient_16_col = epatient_16,                               eresponse_05_col = eresponse_05,                               esituation_11_col = esituation_11,                               esituation_12_col = esituation_12,                               emedications_03_col = emedications_03                          ) #> Running `seizure_02_population()`  [Working on 1 of 10 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `seizure_02_population()`  [Working on 2 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `seizure_02_population()`  [Working on 3 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `seizure_02_population()`  [Working on 4 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `seizure_02_population()`  [Working on 5 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `seizure_02_population()`  [Working on 6 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `seizure_02_population()`  [Working on 7 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `seizure_02_population()`  [Working on 8 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `seizure_02_population()`  [Working on 9 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `seizure_02_population()`  [Working on 10 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 7 √ó 2 #>   filter               count #>   <chr>                <int> #> 1 911 calls                5 #> 2 Seizure cases            5 #> 3 Benzodiazepine cases     5 #> 4 Adults denominator       2 #> 5 Peds denominator         3 #> 6 Initial population       5 #> 7 Total dataset            5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Stroke-01 Calculation ‚Äî stroke_01","title":"Stroke-01 Calculation ‚Äî stroke_01","text":"stroke_01 function processes EMS dataset identify potential stroke cases based specific criteria calculates stroke scale measures. filters data 911 response calls, identifies stroke-related impressions scales, aggregates results unique patient encounters.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stroke-01 Calculation ‚Äî stroke_01","text":"","code":"stroke_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_23_col,   evitals_26_col,   evitals_29_col,   evitals_30_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stroke-01 Calculation ‚Äî stroke_01","text":"df data frame tibble containing dataset. row represent unique patient encounter. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. eresponse_05_col column containing EMS response codes, include 911 response codes. esituation_11_col column containing primary impression codes descriptions related situation. esituation_12_col column containing secondary impression codes descriptions related situation. evitals_23_col column containing Glasgow Coma Scale (GCS) score. evitals_26_col column containing AVPU (alert, verbal, pain, unresponsive) scale value. evitals_29_col column containing stroke scale score achieved assessment. evitals_30_col column containing stroke scale type descriptors (e.g., FAST, NIH, etc.). ... Additional arguments passed dplyr::summarize() function customization results.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stroke-01 Calculation ‚Äî stroke_01","text":"tibble summarizing results total population following columns: measure: name measure calculated. pop: Population type (). numerator: Count incidents beta-agonist medications administered. denominator: Total count incidents. prop: Proportion incidents involving beta-agonist medications. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stroke-01 Calculation ‚Äî stroke_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stroke-01 Calculation ‚Äî stroke_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_11 = c(rep(\"I60\", 3), rep(\"I61\", 2)),     esituation_12 = c(rep(\"I63\", 2), rep(\"I64\", 3)),     evitals_23 = c(16, 15, 14, 13, 12),     evitals_26 = c(\"Alert\", \"Painful\", \"Verbal\", \"Unresponsive\", \"Alert\"),     evitals_29 = rep(\"positive\", 5),     evitals_30 = rep(\"a pain scale\", 5)   )    # Run the function   stroke_01(     df = test_data,     erecord_01_col = erecord_01,     eresponse_05_col = eresponse_05,     esituation_11_col = esituation_11,     esituation_12_col = esituation_12,     evitals_23_col = evitals_23,     evitals_26_col = evitals_26,     evitals_29_col = evitals_29,     evitals_30_col = evitals_30   ) #>  #> ‚îÄ‚îÄ Stroke-01 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Stroke-01 ‚îÄ‚îÄ #>  #> Running `stroke_01_population()`  [Working on 1 of 11 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 2 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 3 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 4 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 5 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 6 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 7 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `stroke_01_population()`  [Working on 8 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `stroke_01_population()`  [Working on 9 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `stroke_01_population()`  [Working on 10 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `stroke_01_population()`  [Working on 11 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Stroke-01 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.16s. #>  #> # A tibble: 1 √ó 6 #>   measure   pop   numerator denominator  prop prop_label #>   <chr>     <chr>     <int>       <int> <dbl> <chr>      #> 1 Stroke-01 All           5           5     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Stroke-01 Populations ‚Äî stroke_01_population","title":"Stroke-01 Populations ‚Äî stroke_01_population","text":"Filters data target populations Stroke-01, categorizes records identify needed information calculations. Identifies key categories related stroke-related incidents EMS dataset, specifically focusing cases 911 called stroke, stroke scale administered. .","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stroke-01 Populations ‚Äî stroke_01_population","text":"","code":"stroke_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   evitals_23_col,   evitals_26_col,   evitals_29_col,   evitals_30_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stroke-01 Populations ‚Äî stroke_01_population","text":"df data frame tibble containing dataset. row represent unique patient encounter. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. eresponse_05_col column containing EMS response codes, include 911 response codes. esituation_11_col column containing primary impression codes descriptions related situation. esituation_12_col column containing secondary impression codes descriptions related situation. evitals_23_col column containing Glasgow Coma Scale (GCS) score. evitals_26_col column containing AVPU (alert, verbal, pain, unresponsive) scale value. evitals_29_col column containing stroke scale score achieved assessment. evitals_30_col column containing stroke scale type descriptors (e.g., FAST, NIH, etc.).","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stroke-01 Populations ‚Äî stroke_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stroke-01 Populations ‚Äî stroke_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/stroke_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stroke-01 Populations ‚Äî stroke_01_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_11 = c(rep(\"I60\", 3), rep(\"I61\", 2)),     esituation_12 = c(rep(\"I63\", 2), rep(\"I64\", 3)),   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_23 = c(16, 15, 14, 13, 12),     evitals_26 = c(\"Alert\", \"Painful\", \"Verbal\", \"Unresponsive\", \"Alert\"),     evitals_29 = rep(\"positive\", 5),     evitals_30 = rep(\"a pain scale\", 5)   )    # test the success of the function   result <- stroke_01_population(patient_scene_table = patient_table,                               response_table = response_table,                               situation_table = situation_table,                               vitals_table = vitals_table,                               erecord_01_col = erecord_01,                               eresponse_05_col = eresponse_05,                               esituation_11_col = esituation_11,                               esituation_12_col = esituation_12,                               evitals_29_col = evitals_29,                               evitals_23_col = evitals_23,                               evitals_26_col = evitals_26,                               evitals_30_col = evitals_30                               ) #> Running `stroke_01_population()`  [Working on 1 of 11 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 2 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 3 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 4 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 5 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 6 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `stroke_01_population()`  [Working on 7 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `stroke_01_population()`  [Working on 8 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `stroke_01_population()`  [Working on 9 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `stroke_01_population()`  [Working on 10 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `stroke_01_population()`  [Working on 11 of 11 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 7 √ó 2 #>   filter                              count #>   <chr>                               <int> #> 1 911 calls                               5 #> 2 Stroke cases                            5 #> 3 GCUS <= 9                               0 #> 4 AVPU = Unresponsive                     1 #> 5 Non-Null Stroke Scale Score or Type     5 #> 6 Initial population                      5 #> 7 Total dataset                           5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/summarize_measure.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Measure ‚Äî summarize_measure","title":"Summarize Measure ‚Äî summarize_measure","text":"Calculates measure numerator, denominator, proportions NEMSQA measure.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/summarize_measure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Measure ‚Äî summarize_measure","text":"","code":"summarize_measure(data, measure_name, population_name, numerator_col, ...)"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/summarize_measure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Measure ‚Äî summarize_measure","text":"data dataframe tibble containing filtered calculated fields. measure_name string containing measure description. population_name string containing population description. numerator_col tidyselect column containing numerator. ... (optional) additional arguments","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/summarize_measure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Measure ‚Äî summarize_measure","text":"Summarized information","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/summarize_measure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize Measure ‚Äî summarize_measure","text":"Used throughout package calculate measure summaries.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/summarize_measure.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize Measure ‚Äî summarize_measure","text":"Samuel Kordik, BBA, BS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Syncope-01 Calculation ‚Äî syncope_01","title":"Syncope-01 Calculation ‚Äî syncope_01","text":"syncope_01 function processes EMS dataset identify potential syncope (fainting) cases based specific criteria calculates related ECG measures. function dplyr::filters data 911 response calls, assesses primary associated symptoms syncope, determines age-based populations (adult pediatric), aggregates results unique patient encounters.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syncope-01 Calculation ‚Äî syncope_01","text":"","code":"syncope_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_09_col,   esituation_10_col,   esituation_11_col,   esituation_12_col,   evitals_04_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syncope-01 Calculation ‚Äî syncope_01","text":"df Main data frame containing EMS records. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient age (numeric). epatient_16_col Column patient age units (e.g., \"Years\", \"Months\"). eresponse_05_col Column containing response type codes, specifically 911 codes. esituation_09_col Column primary symptoms associated patient encounter. esituation_10_col Column associated symptoms. esituation_11_col Column primary impression code. esituation_12_col Column secondary impression codes. evitals_04_col Column ECG information available. ... Additional arguments passed dplyr::summarize grouped summaries.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syncope-01 Calculation ‚Äî syncope_01","text":"tibble summarizing results three population groups (Adults, Peds) following columns: measure: name measure calculated. pop: Population type (Adults, Peds). numerator: Count incidents beta-agonist medications administered. denominator: Total count incidents. prop: Proportion incidents involving beta-agonist medications. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Syncope-01 Calculation ‚Äî syncope_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syncope-01 Calculation ‚Äî syncope_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_09 = c(rep(\"R55\", 3), rep(\"R40.4\", 2)),     esituation_10 = c(rep(\"R40.4\", 2), rep(\"R55\", 3)),     esituation_11 = c(rep(\"R55\", 3), rep(\"R40.4\", 2)),     esituation_12 = c(rep(\"R40.4\", 2), rep(\"R55\", 3)),     evitals_04 = rep(\"15 Lead\", 5)   )    # Run function   syncope_01(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_09_col = esituation_09,     esituation_10_col = esituation_10,     esituation_11_col = esituation_11,     esituation_12_col = esituation_12,     evitals_04_col = evitals_04   ) #>  #> ‚îÄ‚îÄ Syncope-01 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Syncope-01 ‚îÄ‚îÄ #>  #> Running `syncope_01_population()`  [Working on 1 of 10 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `syncope_01_population()`  [Working on 2 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `syncope_01_population()`  [Working on 3 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `syncope_01_population()`  [Working on 4 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `syncope_01_population()`  [Working on 5 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `syncope_01_population()`  [Working on 6 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `syncope_01_population()`  [Working on 7 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `syncope_01_population()`  [Working on 8 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `syncope_01_population()`  [Working on 9 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `syncope_01_population()`  [Working on 10 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Syncope-01 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.16s. #>  #> # A tibble: 2 √ó 6 #>   measure    pop    numerator denominator  prop prop_label #>   <chr>      <chr>      <int>       <int> <dbl> <chr>      #> 1 Syncope-01 Adults         3           3     1 100%       #> 2 Syncope-01 Peds           1           1     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Syncope-01 Populations ‚Äî syncope_01_population","title":"Syncope-01 Populations ‚Äî syncope_01_population","text":"Filters data target populations Syncope-01, categorizes records identify needed information calculations. Identifies key categories identify potential syncope (fainting) cases based specific criteria calculates related ECG measures. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syncope-01 Populations ‚Äî syncope_01_population","text":"","code":"syncope_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_09_col,   esituation_10_col,   esituation_11_col,   esituation_12_col,   evitals_04_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syncope-01 Populations ‚Äî syncope_01_population","text":"df Main data frame containing EMS records. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column containing unique record identifiers encounter. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column representing patient age (numeric). epatient_16_col Column patient age units (e.g., \"Years\", \"Months\"). eresponse_05_col Column containing response type codes, specifically 911 codes. esituation_09_col Column primary symptoms associated patient encounter. esituation_10_col Column associated symptoms. esituation_11_col Column primary impression code. esituation_12_col Column secondary impression codes. evitals_04_col Column ECG information available.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syncope-01 Populations ‚Äî syncope_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Syncope-01 Populations ‚Äî syncope_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/syncope_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syncope-01 Populations ‚Äî syncope_01_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_09 = c(rep(\"R55\", 3), rep(\"R40.4\", 2)),     esituation_10 = c(rep(\"R40.4\", 2), rep(\"R55\", 3)),     esituation_11 = c(rep(\"R55\", 3), rep(\"R40.4\", 2)),     esituation_12 = c(rep(\"R40.4\", 2), rep(\"R55\", 3)),   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_04 = rep(\"15 Lead\", 5)    )    # test the success of the function   result <- syncope_01_population(patient_scene_table = patient_table,                          response_table = response_table,                          situation_table = situation_table,                          vitals_table = vitals_table,                          erecord_01_col = erecord_01,                          epatient_15_col = epatient_15,                          epatient_16_col = epatient_16,                          eresponse_05_col = eresponse_05,                          esituation_09_col = esituation_09,                          esituation_10_col = esituation_10,                          esituation_11_col = esituation_11,                          esituation_12_col = esituation_12,                          evitals_04_col = evitals_04                          ) #> Running `syncope_01_population()`  [Working on 1 of 10 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `syncope_01_population()`  [Working on 2 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `syncope_01_population()`  [Working on 3 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `syncope_01_population()`  [Working on 4 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `syncope_01_population()`  [Working on 5 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `syncope_01_population()`  [Working on 6 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `syncope_01_population()`  [Working on 7 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `syncope_01_population()`  [Working on 8 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `syncope_01_population()`  [Working on 9 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `syncope_01_population()`  [Working on 10 of 10 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 7 √ó 2 #>   filter             count #>   <chr>              <int> #> 1 911 calls              5 #> 2 Syncope cases          5 #> 3 ECG performed          5 #> 4 Adults denominator     2 #> 5 Peds denominator       3 #> 6 Initial population     5 #> 7 Total dataset          5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":null,"dir":"Reference","previous_headings":"","what":"TBI-01 Calculation ‚Äî tbi_01","title":"TBI-01 Calculation ‚Äî tbi_01","text":"function screens potential traumatic brain injury (TBI) cases based specific criteria patient dataset. produces subset data calculated variables TBI identification.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TBI-01 Calculation ‚Äî tbi_01","text":"","code":"tbi_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   transport_disposition_col,   evitals_06_col,   evitals_12_col,   evitals_16_col,   evitals_23_col,   evitals_26_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TBI-01 Calculation ‚Äî tbi_01","text":"df data frame tibble containing patient data. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col Column name df patient‚Äôs unique record ID. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name df patient‚Äôs age value. epatient_16_col Column name df patient‚Äôs age unit (e.g., years, months). eresponse_05_col Column name df response codes type EMS call. esituation_11_col Column name df primary provider impression. esituation_12_col Column name df secondary provider impression. transport_disposition_col Column name df transport disposition. evitals_06_col Column name df systolic blood pressure (SBP). evitals_12_col Column name df pulse oximetry values. evitals_16_col Column name df ETCO2 values. values. evitals_23_col Column name df Glasgow Coma Scale (GCS) scores. evitals_26_col Column name df AVPU (alert, verbal, painful, unresponsive) values. ... Additional parameters passed dplyr::summarize dplyr functions.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TBI-01 Calculation ‚Äî tbi_01","text":"tibble summarizing results three population groups (Adults, Peds) following columns: measure: name measure calculated. pop: Population type (Adults, Peds). numerator: Count incidents SP02, ETCO2, SBP measured. denominator: Total count incidents. prop: Proportion incidents SP02, ETCO2, SBP measured. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TBI-01 Calculation ‚Äî tbi_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TBI-01 Calculation ‚Äî tbi_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_11 = c(rep(\"S02\", 3), rep(\"S06\", 2)),     esituation_12 = c(rep(\"S09.90\", 2), rep(\"S06.0X9\", 3)),     evitals_06 = c(85, 80, 100, 90, 82),     evitals_12 = c(95, 96, 97, 98, 99),     evitals_16 = c(35, 36, 37, 38, 39),     evitals_23 = rep(8, 5),     evitals_26 = c(\"Verbal\", \"Painful\", \"Unresponsive\", \"Verbal\", \"Painful\"),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # Run function   tbi_01(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_11_col = esituation_11,     esituation_12_col = esituation_12,     evitals_06_col = evitals_06,     evitals_12_col = evitals_12,     evitals_16_col = evitals_16,     evitals_23_col = evitals_23,     evitals_26_col = evitals_26,     transport_disposition_col = edisposition_30   ) #>  #> ‚îÄ‚îÄ TBI-01 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for TBI-01 ‚îÄ‚îÄ #>  #> Running `tbi_01_population()`  [Working on 1 of 15 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 2 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 5 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 6 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 7 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 8 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 9 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 10 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `tbi_01_population()`  [Working on 12 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `tbi_01_population()`  [Working on 13 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `tbi_01_population()`  [Working on 14 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `tbi_01_population()`  [Working on 15 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating TBI-01 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.18s. #>  #> # A tibble: 2 √ó 6 #>   measure pop    numerator denominator  prop prop_label #>   <chr>   <chr>      <int>       <int> <dbl> <chr>      #> 1 TBI-01  Adults         3           3     1 100%       #> 2 TBI-01  Peds           2           2     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"TBI-01 Populations ‚Äî tbi_01_population","title":"TBI-01 Populations ‚Äî tbi_01_population","text":"function screens potential traumatic brain injury (TBI) cases based specific criteria patient dataset. produces subset data calculated variables TBI identification.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TBI-01 Populations ‚Äî tbi_01_population","text":"","code":"tbi_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   esituation_11_col,   esituation_12_col,   transport_disposition_col,   evitals_06_col,   evitals_12_col,   evitals_16_col,   evitals_23_col,   evitals_26_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TBI-01 Populations ‚Äî tbi_01_population","text":"df data frame tibble containing patient data. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col Column name df patient‚Äôs unique record ID. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name df patient‚Äôs age value. epatient_16_col Column name df patient‚Äôs age unit (e.g., years, months). eresponse_05_col Column name df response codes type EMS call. esituation_11_col Column name df primary provider impression. esituation_12_col Column name df secondary provider impression. transport_disposition_col Column name df transport disposition. evitals_06_col Column name df systolic blood pressure (SBP). evitals_12_col Column name df pulse oximetry values. evitals_16_col Column name df ETC02 values. values. evitals_23_col Column name df Glasgow Coma Scale (GCS) scores. evitals_26_col Column name df AVPU (alert, verbal, painful, unresponsive) values.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TBI-01 Populations ‚Äî tbi_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TBI-01 Populations ‚Äî tbi_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/tbi_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TBI-01 Populations ‚Äî tbi_01_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_11 = c(rep(\"S02\", 3), rep(\"S06\", 2)),     esituation_12 = c(rep(\"S09.90\", 2), rep(\"S06.0X9\", 3)),   )     # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_06 = c(85, 80, 100, 90, 82),     evitals_12 = c(95, 96, 97, 98, 99),     evitals_16 = c(35, 36, 37, 38, 39),     evitals_23 = rep(8, 5),     evitals_26 = c(\"Verbal\", \"Painful\", \"Unresponsive\", \"Verbal\", \"Painful\")   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )  # test the success of the function   result <- tbi_01_population(patient_scene_table = patient_table,                          response_table = response_table,                          situation_table = situation_table,                          vitals_table = vitals_table,                          disposition_table = disposition_table,                          erecord_01_col = erecord_01,                          epatient_15_col = epatient_15,                          epatient_16_col = epatient_16,                          eresponse_05_col = eresponse_05,                          esituation_11_col = esituation_11,                          esituation_12_col = esituation_12,                          evitals_06_col = evitals_06,                          evitals_12_col = evitals_12,                          evitals_16_col = evitals_16,                          evitals_23_col = evitals_23,                          evitals_26_col = evitals_26,                          transport_disposition_col = edisposition_30                      ) #> Running `tbi_01_population()`  [Working on 1 of 15 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 2 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 5 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 6 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 7 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 8 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 9 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `tbi_01_population()`  [Working on 10 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `tbi_01_population()`  [Working on 12 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `tbi_01_population()`  [Working on 13 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `tbi_01_population()`  [Working on 14 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `tbi_01_population()`  [Working on 15 of 15 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 10 √ó 2 #>    filter                                   count #>    <chr>                                    <int> #>  1 911 calls                                    5 #>  2 TBI cases                                    5 #>  3 GCS < 15                                     5 #>  4 AVPU is verbal, painful, or unresponsive     5 #>  5 Transports                                   5 #>  6 Oxygen level, ETC02, SBP are documented      5 #>  7 Adults denominator                           2 #>  8 Peds denominator                             3 #>  9 Initial population                           5 #> 10 Total dataset                                5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-01 Calculation ‚Äî trauma_01","title":"Trauma-01 Calculation ‚Äî trauma_01","text":"function processes EMS data calculate Trauma-01 performance measure, evaluates percentage trauma patients assessed pain using numeric scale. function filters summarizes data based specified inclusion criteria.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-01 Calculation ‚Äî trauma_01","text":"","code":"trauma_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   evitals_23_col,   evitals_26_col,   evitals_27_col,   edisposition_28_col,   transport_disposition_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-01 Calculation ‚Äî trauma_01","text":"df data frame tibble containing EMS records. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col Column name representing EMS record ID. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col Column name patient's age numeric format. epatient_16_col Column name unit age (e.g., \"Years\", \"Months\"). esituation_02_col Column name indicating situation involved injury. eresponse_05_col Column name type EMS response (e.g., 911 call). evitals_23_col Column name Glasgow Coma Scale (GCS) total score. evitals_26_col Column name AVPU (Alert, Voice, Pain, Unresponsive) status. evitals_27_col Column name pain scale assessment. edisposition_28_col Column name patient care disposition details. transport_disposition_col Column name transport disposition details. ... Additional arguments passed dplyr::summarize function custom summarization.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-01 Calculation ‚Äî trauma_01","text":"tibble summarizing results three population groups (, Adults, Peds) following columns: measure: name measure calculated. pop: Population type (, Adults, Peds). numerator: Count incidents pain scale administered. denominator: Total count incidents. prop: Proportion incidents pain scale administered. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-01 Calculation ‚Äî trauma_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-01 Calculation ‚Äî trauma_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_02 = rep(\"Yes\", 5),     evitals_23 = rep(15, 5),     evitals_26 = rep(\"Alert\", 5),     evitals_27 = c(0, 2, 4, 6, 8),     edisposition_28 = rep(4228001, 5),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # Run function   trauma_01(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_02_col = esituation_02,     evitals_23_col = evitals_23,     evitals_26_col = evitals_26,     evitals_27_col = evitals_27,     edisposition_28_col = edisposition_28,     transport_disposition_col = edisposition_30   ) #>  #> ‚îÄ‚îÄ Trauma-01 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Trauma-01 ‚îÄ‚îÄ #>  #> Running `trauma_01_population()`  [Working on 1 of 14 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 2 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 3 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 4 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 5 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 6 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 7 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 8 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 9 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 10 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 11 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 12 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 13 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 14 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Trauma-01 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.21s. #>  #> # A tibble: 3 √ó 6 #>   measure   pop    numerator denominator  prop prop_label #>   <chr>     <chr>      <int>       <int> <dbl> <chr>      #> 1 Trauma-01 Adults         3           3     1 100%       #> 2 Trauma-01 Peds           1           1     1 100%       #> 3 Trauma-01 All            5           5     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-01 Population ‚Äî trauma_01_population","title":"Trauma-01 Population ‚Äî trauma_01_population","text":"Filters data target populations Trauma-08, categorizes records identify needed information calculations. Identifies key categories records 911 requests patients injury assessed pain based specific criteria calculates related ECG measures. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-01 Population ‚Äî trauma_01_population","text":"","code":"trauma_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   evitals_23_col,   evitals_26_col,   evitals_27_col,   edisposition_28_col,   transport_disposition_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-01 Population ‚Äî trauma_01_population","text":"df data frame tibble containing EMS records. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data.frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data.frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col Column name representing EMS record ID. incident_date_col Column name incident date. Default NULL. patient_DOB_col Column name patient's date birth. Default NULL. epatient_15_col Column name patient's age numeric format. epatient_16_col Column name unit age (e.g., \"Years\", \"Months\"). esituation_02_col Column name indicating situation involved injury. eresponse_05_col Column name type EMS response (e.g., 911 call). evitals_23_col Column name Glasgow Coma Scale (GCS) total score. evitals_26_col Column name AVPU (Alert, Voice, Pain, Unresponsive) status. evitals_27_col Column name pain scale assessment. edisposition_28_col Column name patient care disposition details. transport_disposition_col Column name transport disposition details.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-01 Population ‚Äî trauma_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-01 Population ‚Äî trauma_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-01 Population ‚Äî trauma_01_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_02 = rep(\"Yes\", 5),   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_23 = rep(15, 5),     evitals_26 = rep(\"Alert\", 5),     evitals_27 = c(0, 2, 4, 6, 8)   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_28 = rep(4228001, 5),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # test the success of the function   result <- trauma_01_population(patient_scene_table = patient_table,                      response_table = response_table,                      situation_table = situation_table,                      vitals_table = vitals_table,                      disposition_table = disposition_table,                      erecord_01_col = erecord_01,                      incident_date_col = incident_date,                      patient_DOB_col = patient_dob,                      epatient_15_col = epatient_15,                      epatient_16_col = epatient_16,                      eresponse_05_col = eresponse_05,                      esituation_02_col = esituation_02,                      evitals_23_col = evitals_23,                      evitals_26_col = evitals_26,                      evitals_27_col = evitals_27,                      edisposition_28_col = edisposition_28,                      transport_disposition_col = edisposition_30                      ) #> Running `trauma_01_population()`  [Working on 1 of 14 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 2 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 3 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 4 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 5 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 6 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 7 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `trauma_01_population()`  [Working on 8 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 9 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 10 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 11 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 12 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 13 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_01_population()`  [Working on 14 of 14 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 11 √ó 2 #>    filter                              count #>    <chr>                               <int> #>  1 911 calls                               5 #>  2 GCS is 15                               5 #>  3 AVPU is alert                           5 #>  4 Transports                              5 #>  5 Injury cases                            5 #>  6 Patient evaluated and care provided     5 #>  7 Pain scale administered                 5 #>  8 Adults denominator                      2 #>  9 Peds denominator                        3 #> 10 Initial population                      5 #> 11 Total dataset                           5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-03 Calculation ‚Äî trauma_03","title":"Trauma-03 Calculation ‚Äî trauma_03","text":"function calculates \"Trauma-03\" measure, evaluates pain scale reassessment trauma patients, using comprehensive data frame EMS records. function processes input data create fact dimension tables, identifies eligible patients, summarizes results adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-03 Calculation ‚Äî trauma_03","text":"","code":"trauma_03(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   edisposition_28_col,   transport_disposition_col,   evitals_01_col,   evitals_27_col = NULL,   evitals_27_initial_col = NULL,   evitals_27_last_col = NULL,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-03 Calculation ‚Äî trauma_03","text":"df data frame tibble containing EMS data relevant columns. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. edisposition_28_col column patient care disposition details. transport_disposition_col column patient transport disposition. evitals_01_col column time pain scale measurement. evitals_27_col column full set pain scale scores. evitals_27_initial_col column initial pain scale score. evitals_27_last_col column last pain scale score. ... Additional arguments passed helper functions customization.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-03 Calculation ‚Äî trauma_03","text":"tibble summarizing results three population groups (, Adults, Peds) following columns: measure: name measure calculated. pop: Population type (, Adults, Peds). numerator: Count incidents reduction patient pain. denominator: Total count incidents. prop: Proportion incidents reduction patient pain. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-03 Calculation ‚Äî trauma_03","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-03 Calculation ‚Äî trauma_03","text":"","code":"# Synthetic test data # for testing a single pain scale column   test_data2 <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_02 = rep(\"Yes\", 5),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 12:00:00\", \"2025-01-05     18:00:00\", \"2025-02-01 06:00:00\", \"2025-01-01 01:00:00\", \"2025-06-01     14:00:00\")),     edisposition_28 = rep(4228001, 5),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # Expand data so each erecord_01 has 2 rows (one for each pain score)   test_data_expanded2 <- test_data2 |>     tidyr::uncount(weights = 2) |>  # Duplicate each row twice     # Assign pain scores     dplyr::mutate(evitals_27 = c(0, 0, 2, 1, 4, 3, 6, 5, 8, 7)) |>     dplyr::group_by(erecord_01) |>     dplyr::mutate(     # Lower score = later time       time_offset = dplyr::if_else(dplyr::row_number() == 1, -5, 0),       evitals_01 = evitals_01 + lubridate::dminutes(time_offset)     ) |>     dplyr::ungroup() |>     dplyr::select(-time_offset)  # Remove temporary column  # Run function with the single pain score column   trauma_03(     df = test_data_expanded2,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_02_col = esituation_02,     evitals_01_col = evitals_01,     evitals_27_initial_col = NULL,     evitals_27_last_col = NULL,     evitals_27_col = evitals_27,     edisposition_28_col = edisposition_28,     transport_disposition_col = edisposition_30   ) #>  #> ‚îÄ‚îÄ Trauma-03 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Trauma-03 ‚îÄ‚îÄ #>  #> Running `trauma_03_population()`  [Working on 1 of 17 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 2 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 3 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 4 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 5 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 6 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 7 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 8 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 9 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 10 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_03_population()`  [Working on 11 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_03_population()`  [Working on 12 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_03_population()`  [Working on 13 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_03_population()`  [Working on 17 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Trauma-03 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.19s. #>  #> # A tibble: 3 √ó 6 #>   measure   pop    numerator denominator  prop prop_label #>   <chr>     <chr>      <int>       <int> <dbl> <chr>      #> 1 Trauma-03 Adults         2           2     1 100%       #> 2 Trauma-03 Peds           1           1     1 100%       #> 3 Trauma-03 All            4           4     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-03 Populations ‚Äî trauma_03_population","title":"Trauma-03 Populations ‚Äî trauma_03_population","text":"Filters data target populations Trauma-08, categorizes records identify needed information calculations. Identifies key categories records 911 request patients whose pain score lowered EMS encounter. based specific criteria calculates related ECG measures. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-03 Populations ‚Äî trauma_03_population","text":"","code":"trauma_03_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   evitals_01_col,   evitals_27_col = NULL,   evitals_27_initial_col = NULL,   evitals_27_last_col = NULL,   edisposition_28_col,   transport_disposition_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-03 Populations ‚Äî trauma_03_population","text":"df data frame tibble containing EMS data relevant columns. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. evitals_01_col column time pain scale measurement. evitals_27_col column pain scale score. Default NULL. evitals_27_initial_col column initial pain scale score. Default NULL. evitals_27_last_col column last pain scale score. Default NULL. edisposition_28_col column patient care disposition details. transport_disposition_col column patient transport disposition.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-03 Populations ‚Äî trauma_03_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-03 Populations ‚Äî trauma_03_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_03_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-03 Populations ‚Äî trauma_03_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)    )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_02 = rep(\"Yes\", 5),   )    # vitals table for a single pain scale column   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_01 = lubridate::as_datetime(c(\"2025-01-01 12:00:00\", \"2025-01-05     18:00:00\", \"2025-02-01 06:00:00\", \"2025-01-01 01:00:00\", \"2025-06-01     14:00:00\"))   ) |>     tidyr::uncount(weights = 2) |>  # Duplicate each row twice     # Assign pain scores     dplyr::mutate(evitals_27 = c(0, 0, 2, 1, 4, 3, 6, 5, 8, 7)) |>     dplyr::group_by(erecord_01) |>     dplyr::mutate(     # Lower score = later time       time_offset = dplyr::if_else(dplyr::row_number() == 1, -5, 0),       evitals_01 = evitals_01 + lubridate::dminutes(time_offset)     ) |>     dplyr::ungroup() |>     dplyr::select(-time_offset)  # Remove temporary column    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_28 = rep(4228001, 5),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )  # test the success of the function # use the single pain scale column   result <- trauma_03_population(patient_scene_table = patient_table,                         response_table = response_table,                         situation_table = situation_table,                         vitals_table = vitals_table,                         disposition_table = disposition_table,                         erecord_01_col = erecord_01,                         incident_date_col = incident_date,                         patient_DOB_col = patient_dob,                         epatient_15_col = epatient_15,                         epatient_16_col = epatient_16,                         eresponse_05_col = eresponse_05,                         esituation_02_col = esituation_02,                         evitals_01_col = evitals_01,                         evitals_27_initial_col = NULL,                         evitals_27_last_col = NULL,                         evitals_27_col = evitals_27,                         edisposition_28_col = edisposition_28,                         transport_disposition_col = edisposition_30                         ) #> Running `trauma_03_population()`  [Working on 1 of 17 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 2 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 3 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 4 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 5 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 6 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 7 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 8 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 9 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `trauma_03_population()`  [Working on 10 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_03_population()`  [Working on 11 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_03_population()`  [Working on 12 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_03_population()`  [Working on 13 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_03_population()`  [Working on 17 of 17 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 10 √ó 2 #>    filter                                                       count #>    <chr>                                                        <int> #>  1 911 calls                                                        5 #>  2 Non-missing vital sign date-time with initial pain score > 0     4 #>  3 Transports                                                       5 #>  4 Injury cases                                                     5 #>  5 Patient evaluated and care provided                              5 #>  6 Pain scale decreased                                             4 #>  7 Adults denominator                                               1 #>  8 Peds denominator                                                 3 #>  9 Initial population                                               4 #> 10 Total dataset                                                    5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-04 Calculations ‚Äî trauma_04","title":"Trauma-04 Calculations ‚Äî trauma_04","text":"function processes EMS data generate set binary variables indicating whether specific trauma triage criteria met. output data frame enriched indicators analysis.  final outcome whether EMS record documents use verified trauma center levels 1-5 hospital capability documentation.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-04 Calculations ‚Äî trauma_04","text":"","code":"trauma_04(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   exam_table = NULL,   procedures_table = NULL,   injury_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   eresponse_10_col,   transport_disposition_col,   edisposition_23_col,   evitals_06_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_15_col,   evitals_21_col,   eexam_16_col,   eexam_20_col,   eexam_23_col,   eexam_25_col,   eprocedures_03_col,   einjury_01_col,   einjury_03_col,   einjury_04_col,   einjury_09_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-04 Calculations ‚Äî trauma_04","text":"df data frame tibble containing EMS data relevant columns. patient_scene_table data.frame tibble containing epatient escene fields fact table. response_table data.frame tibble containing eresponse fields needed measure's calculations. situation_table data.frame tibble containing esituation fields needed measure's calculations. vitals_table data.frame tibble containing evitals fields needed measure's calculations. exam_table data.frame tibble containing eexam fields needed measure's calculations. procedures_table data.frame tibble containing eprocedures fields needed measure's calculations. injury_table data.frame tibble containing einjury fields needed measure's calculations. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. eresponse_10_col Column name containing scene delay information. transport_disposition_col column patient transport disposition. edisposition_23_col Column name containing trauma hospital verification information. evitals_06_col Column name containing systolic blood pressure (SBP) values. evitals_10_col Column name containing heart rate values. evitals_12_col Column name containing pulse oximetry values. evitals_14_col Column name containing capillary refill information. evitals_15_col Column name containing respiratory effort values. evitals_21_col Column name containing Glasgow Coma Scale (GCS) Motor values. eexam_16_col Column name containing extremities assessment details. eexam_20_col Column name containing neurological assessment details. eexam_23_col Column name containing lung assessment details. eexam_25_col Column name containing chest assessment details. eprocedures_03_col Column name containing airway management tourniquet usage details. einjury_01_col Column name containing injury cause details. einjury_03_col Column name containing trauma triage steps 1 2 information. einjury_04_col Column name containing trauma triage steps 3 4 information. einjury_09_col Column name containing fall height information. ... Additional arguments passed helper functions customization.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-04 Calculations ‚Äî trauma_04","text":"tibble summarizing results three age groups (< 10 yrs, 10‚Äì65 yrs, >= 65 yrs) following columns: measure: name measure calculated. pop: Population type (< 10 yrs, 10‚Äì65 yrs, >= 65 yrs). numerator: Count incidents trauma hospital verified trauma center levels 1 5. denominator: Total count incidents. prop: Proportion incidents trauma hospital verified trauma center levels 1 5. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-04 Calculations ‚Äî trauma_04","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-04 Calculations ‚Äî trauma_04","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     eresponse_10 = rep(2210011, 5),     esituation_02 = rep(\"Yes\", 5),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_15 = c(\"apneic\", \"labored\", \"rapid\", \"shallow\", \"weak/agonal\"),     evitals_21 = c(5, 4, 3, 2, 1),     eexam_16 = c(3516043, 3516067, 3516043, 3516067, 3516067),     eexam_20 = c(3520045, 3520043, 3520019, 3520017, 3520017),     eexam_23 = c(3523011, 3523003, 3523001, 3523011, 3523003),     eexam_25 = c(3525039, 3525023, 3525005, 3525039, 3525023),     edisposition_23 = c(9908029, 9908027, 9908025, 9908023, 9908021),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007),     eprocedures_03 = c(424979004, 427753009, 429705000, 47545007, 243142003),     einjury_01 = c(\"V20\", \"V36\", \"V86\", \"V39\", \"V32\"),     einjury_03 = c(2903011, 2903009, 2903005, 3903003, 2903001),     einjury_04 = c(2904013, 2904011, 2904009, 2904007, 2904001),     einjury_09 = c(11, 12, 13, 14, 15)   )    # Run function with the first and last pain score columns   trauma_04(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     eresponse_10_col = eresponse_10,     esituation_02_col = esituation_02,     evitals_06_col = evitals_06,     evitals_10_col = evitals_10,     evitals_12_col = evitals_12,     evitals_14_col = evitals_14,     evitals_15_col = evitals_15,     evitals_21_col = evitals_21,     eexam_16_col = eexam_16,     eexam_20_col = eexam_20,     eexam_23_col = eexam_23,     eexam_25_col = eexam_25,     edisposition_23_col = edisposition_23,     transport_disposition_col = edisposition_30,     eprocedures_03_col = eprocedures_03,     einjury_01_col = einjury_01,     einjury_03_col = einjury_03,     einjury_04_col = einjury_04,     einjury_09_col = einjury_09   ) #>  #> ‚îÄ‚îÄ Trauma-04 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Trauma-04 ‚îÄ‚îÄ #>  #> Running `trauma_04_population()`  [Working on 1 of 31 tasks] ‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 2 of 31 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 3 of 31 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 4 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 5 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 6 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 7 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 8 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 9 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 10 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 11 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 12 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 13 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 14 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 15 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 16 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 17 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 18 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 19 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 20 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 21 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 22 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 23 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 24 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 25 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 26 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 27 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 28 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 29 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 30 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 31 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Trauma-04 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.43s. #>  #> # A tibble: 3 √ó 6 #>   measure   pop       numerator denominator  prop prop_label #>   <chr>     <chr>         <int>       <int> <dbl> <chr>      #> 1 Trauma-04 >= 65 yrs         0           0     0 0%         #> 2 Trauma-04 10-64 yrs         3           3     1 100%       #> 3 Trauma-04 < 10 yrs          2           2     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-04 Populations ‚Äî trauma_04_population","title":"Trauma-04 Populations ‚Äî trauma_04_population","text":"function processes EMS data generate population needed calculated Trauma-04 NEMSQA measure.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-04 Populations ‚Äî trauma_04_population","text":"","code":"trauma_04_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   exam_table = NULL,   procedures_table = NULL,   injury_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   eresponse_10_col,   transport_disposition_col,   edisposition_23_col,   evitals_06_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_15_col,   evitals_21_col,   eexam_16_col,   eexam_20_col,   eexam_23_col,   eexam_25_col,   eprocedures_03_col,   einjury_01_col,   einjury_03_col,   einjury_04_col,   einjury_09_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-04 Populations ‚Äî trauma_04_population","text":"df data frame tibble containing EMS data relevant columns. patient_scene_table data.frame tibble containing epatient escene fields fact table. response_table data.frame tibble containing eresponse fields needed measure's calculations. situation_table data.frame tibble containing esituation fields needed measure's calculations. vitals_table data.frame tibble containing evitals fields needed measure's calculations. exam_table data.frame tibble containing eexam fields needed measure's calculations. procedures_table data.frame tibble containing eprocedures fields needed measure's calculations. injury_table data.frame tibble containing einjury fields needed measure's calculations. disposition_table data.frame tibble containing edisposition fields needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col column indicating incident date. Must class Date similar. patient_DOB_col column representing patient's date birth. Must class Date similar. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. eresponse_10_col Column name containing scene delay information. transport_disposition_col column patient transport disposition. edisposition_23_col Column name containing trauma hospital verification information. evitals_06_col Column name containing systolic blood pressure (SBP) values. evitals_10_col Column name containing heart rate values. evitals_12_col Column name containing pulse oximetry values. evitals_14_col Column name containing capillary refill information. evitals_15_col Column name containing respiratory effort values. evitals_21_col Column name containing Glasgow Coma Scale (GCS) Motor values. eexam_16_col Column name containing extremities assessment details. eexam_20_col Column name containing neurological assessment details. eexam_23_col Column name containing lung assessment details. eexam_25_col Column name containing chest assessment details. eprocedures_03_col Column name containing airway management tourniquet usage details. einjury_01_col Column name containing injury cause details. einjury_03_col Column name containing trauma triage steps 1 2 information. einjury_04_col Column name containing trauma triage steps 3 4 information. einjury_09_col Column name containing fall height information.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-04 Populations ‚Äî trauma_04_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-04 Populations ‚Äî trauma_04_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_04_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-04 Populations ‚Äî trauma_04_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\",                               \"2025-02-01\", \"2025-01-01\",                               \"2025-06-01\")                               ),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\",                             \"2023-02-01\", \"2023-01-01\",                             \"1970-06-01\")                             ),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5),     eresponse_10 = rep(2210011, 5)   )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_02 = rep(\"Yes\", 5),   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_15 = c(\"apneic\", \"labored\", \"rapid\", \"shallow\", \"weak/agonal\"),     evitals_21 = c(5, 4, 3, 2, 1)   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_23 = c(9908029, 9908027, 9908025, 9908023, 9908021),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # injury table   injury_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     einjury_01 = c(\"V20\", \"V36\", \"V86\", \"V39\", \"V32\"),     einjury_03 = c(2903011, 2903009, 2903005, 3903003, 2903001),     einjury_04 = c(2904013, 2904011, 2904009, 2904007, 2904001),     einjury_09 = c(11, 12, 13, 14, 15)   )    # exam table   exam_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eexam_16 = c(3516043, 3516067, 3516043, 3516067, 3516067),     eexam_20 = c(3520045, 3520043, 3520019, 3520017, 3520017),     eexam_23 = c(3523011, 3523003, 3523001, 3523011, 3523003),     eexam_25 = c(3525039, 3525023, 3525005, 3525039, 3525023)   )    # procedures table   procedures_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eprocedures_03 = c(424979004, 427753009, 429705000, 47545007, 243142003)   )    # test the success of the function   result <- trauma_04_population(patient_scene_table = patient_table,                         response_table = response_table,                         situation_table = situation_table,                         vitals_table = vitals_table,                         disposition_table = disposition_table,                       exam_table = exam_table,                       injury_table = injury_table,                       procedures_table = procedures_table,                       erecord_01_col = erecord_01,                       incident_date_col = incident_date,                       patient_DOB_col = patient_dob,                       epatient_15_col = epatient_15,                       epatient_16_col = epatient_16,                       eresponse_05_col = eresponse_05,                       eresponse_10_col = eresponse_10,                       esituation_02_col = esituation_02,                       evitals_06_col = evitals_06,                       evitals_10_col = evitals_10,                       evitals_12_col = evitals_12,                       evitals_14_col = evitals_14,                       evitals_15_col = evitals_15,                       evitals_21_col = evitals_21,                       eexam_16_col = eexam_16,                       eexam_20_col = eexam_20,                       eexam_23_col = eexam_23,                       eexam_25_col = eexam_25,                       edisposition_23_col = edisposition_23,                       transport_disposition_col = edisposition_30,                       eprocedures_03_col = eprocedures_03,                       einjury_01_col = einjury_01,                       einjury_03_col = einjury_03,                       einjury_04_col = einjury_04,                       einjury_09_col = einjury_09                       ) #> Running `trauma_04_population()`  [Working on 1 of 31 tasks] ‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 2 of 31 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 3 of 31 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 4 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 5 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 6 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 7 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 8 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 9 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 10 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 11 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 12 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 13 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 14 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 15 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 16 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `trauma_04_population()`  [Working on 17 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 18 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 19 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 20 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 21 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 22 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 23 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 24 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 25 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 26 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 27 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 28 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 29 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 30 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_04_population()`  [Working on 31 of 31 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 29 √ó 2 #>    filter                                                                  count #>    <chr>                                                                   <int> #>  1 Situation possible injury                                                   5 #>  2 911 calls                                                                   5 #>  3 Transports                                                                  5 #>  4 GCS Motor 1-5                                                               5 #>  5 Breath sounds absent, decreased, increased respiratory effort               5 #>  6 Flail segment, retraction, accessory muscles used in breathing              5 #>  7 Respiratory effort apneic, labored, mech. assist, rapid, shallow, weak‚Ä¶     5 #>  8 Airway management procedures                                                5 #>  9 Pulse oximetry < 90                                                         5 #> 10 SBP < 110                                                                   5 #> # ‚Ñπ 19 more rows"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-08 Calculation ‚Äî trauma_08","title":"Trauma-08 Calculation ‚Äî trauma_08","text":"function calculates Trauma-08 measure, evaluates ","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-08 Calculation ‚Äî trauma_08","text":"","code":"trauma_08(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   transport_disposition_col,   evitals_06_col,   evitals_14_col,   evitals_23_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-08 Calculation ‚Äî trauma_08","text":"df data frame tibble containing EMS data relevant columns. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column specifying unique patient records. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column indicating patient‚Äôs age numeric form. epatient_16_col column specifying unit patient age (e.g., \"Years\", \"Days\"). esituation_02_col column containing information nature patient‚Äôs condition (e.g., injury type). eresponse_05_col column specifying type response (e.g., 911 codes). transport_disposition_col column specifying transport disposition patient. evitals_06_col column containing systolic blood pressure (SBP) data initial vital signs. evitals_14_col column containing respiratory rate data initial vital signs. evitals_23_col column containing total Glasgow Coma Scale (GCS) scores initial vital signs. ... Additional arguments passed summarize_measure function.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-08 Calculation ‚Äî trauma_08","text":"tibble summarizing results three population groups (, Adults, Peds) following columns: measure: name measure calculated. pop: Population type (, Adults, Peds). numerator: Count incidents respiratory rate, SBP, GCS vitals taken. denominator: Total count incidents. prop: Proportion incidents respiratory rate, SBP, GCS vitals taken. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-08 Calculation ‚Äî trauma_08","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-08 Calculation ‚Äî trauma_08","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     esituation_02 = rep(\"Yes\", 5),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_23 = c(6, 7, 8, 8, 7),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # Run function with the first and last pain score columns   trauma_08(     df = test_data,     erecord_01_col = erecord_01,     incident_date_col = NULL,     patient_DOB_col = NULL,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     esituation_02_col = esituation_02,     evitals_06_col = evitals_06,     evitals_14_col = evitals_14,     evitals_23_col = evitals_23,     transport_disposition_col = edisposition_30   ) #>  #> ‚îÄ‚îÄ Trauma-08 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Trauma-08 ‚îÄ‚îÄ #>  #> Running `trauma_08_population()`  [Working on 1 of 12 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_08_population()`  [Working on 2 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_08_population()`  [Working on 3 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_08_population()`  [Working on 4 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_08_population()`  [Working on 7 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_08_population()`  [Working on 8 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_08_population()`  [Working on 9 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_08_population()`  [Working on 10 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_08_population()`  [Working on 11 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_08_population()`  [Working on 12 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Trauma-08 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.14s. #>  #> # A tibble: 2 √ó 6 #>   measure   pop    numerator denominator  prop prop_label #>   <chr>     <chr>      <int>       <int> <dbl> <chr>      #> 1 Trauma-08 Adults         3           3     1 100%       #> 2 Trauma-08 Peds           2           2     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-08 Populations ‚Äî trauma_08_population","title":"Trauma-08 Populations ‚Äî trauma_08_population","text":"Filters data target populations Trauma-08, categorizes records identify needed information calculations. Identifies key categories records 911 requests patients trauma GCS, systolic blood pressure, respiratory rate documented based specific criteria calculates related ECG measures. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-08 Populations ‚Äî trauma_08_population","text":"","code":"trauma_08_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   transport_disposition_col,   evitals_06_col,   evitals_14_col,   evitals_23_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-08 Populations ‚Äî trauma_08_population","text":"df data frame tibble containing EMS data relevant columns. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. situation_table data frame tibble containing esituation fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. erecord_01_col column specifying unique patient records. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column indicating patient‚Äôs age numeric form. epatient_16_col column specifying unit patient age (e.g., \"Years\", \"Days\"). esituation_02_col column containing information nature patient‚Äôs condition (e.g., injury type). eresponse_05_col column specifying type response (e.g., 911 codes). transport_disposition_col column specifying transport disposition patient. evitals_06_col column containing systolic blood pressure (SBP) data initial vital signs. evitals_14_col column containing respiratory rate data initial vital signs. evitals_23_col column containing total Glasgow Coma Scale (GCS) scores initial vital signs.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-08 Populations ‚Äî trauma_08_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-08 Populations ‚Äî trauma_08_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_08_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-08 Populations ‚Äî trauma_08_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",     \"2023-01-01\", \"1970-06-01\")),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5)   )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_02 = rep(\"Yes\", 5)   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_23 = c(6, 7, 8, 8, 7),   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )  # test the success of the function   result <- trauma_08_population(patient_scene_table = patient_table,                       response_table = response_table,                       situation_table = situation_table,                       vitals_table = vitals_table,                       disposition_table = disposition_table,                       erecord_01_col = erecord_01,                       incident_date_col = incident_date,                       patient_DOB_col = patient_dob,                       epatient_15_col = epatient_15,                       epatient_16_col = epatient_16,                       eresponse_05_col = eresponse_05,                       esituation_02_col = esituation_02,                       evitals_06_col = evitals_06,                       evitals_14_col = evitals_14,                       evitals_23_col = evitals_23,                       transport_disposition_col = edisposition_30                       ) #> Running `trauma_08_population()`  [Working on 1 of 12 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_08_population()`  [Working on 2 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_08_population()`  [Working on 3 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_08_population()`  [Working on 4 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_08_population()`  [Working on 7 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_08_population()`  [Working on 8 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_08_population()`  [Working on 9 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_08_population()`  [Working on 10 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_08_population()`  [Working on 11 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_08_population()`  [Working on 12 of 12 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 8 √ó 2 #>   filter                    count #>   <chr>                     <int> #> 1 911 calls                     5 #> 2 Transports                    5 #> 3 Injury cases                  5 #> 4 Non-null RR, SBP, and GCS     5 #> 5 Adults denominator            2 #> 6 Peds denominator              3 #> 7 Initial population            5 #> 8 Total dataset                 5"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-14 Calculation ‚Äî trauma_14","title":"Trauma-14 Calculation ‚Äî trauma_14","text":"function processes EMS data generate set binary variables indicating whether specific trauma triage criteria met. output #' data frame enriched indicators analysis.  final outcome whether EMS record documents use #' pre-hospital trauma activation.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-14 Calculation ‚Äî trauma_14","text":"","code":"trauma_14(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   situation_table = NULL,   vitals_table = NULL,   exam_table = NULL,   procedures_table = NULL,   injury_table = NULL,   disposition_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   eresponse_10_col,   transport_disposition_col,   edisposition_24_col,   evitals_06_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_15_col,   evitals_21_col,   eexam_16_col,   eexam_20_col,   eexam_23_col,   eexam_25_col,   eprocedures_03_col,   einjury_01_col,   einjury_03_col,   einjury_04_col,   einjury_09_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-14 Calculation ‚Äî trauma_14","text":"df data frame tibble containing EMS data relevant columns. patient_scene_table data frame tibble containing fields epatient escene needed measure's calculations. response_table data frame tibble containing fields eresponse needed measure's calculations. situation_table data frame tibble containing fields esituation needed measure's calculations. vitals_table data frame tibble containing fields evitals needed measure's calculations. exam_table data frame tibble containing fields eexam needed measure's calculations. procedures_table data frame tibble containing fields eprocedures needed measure's calculations. injury_table data frame tibble containing fields einjury needed measure's calculations. disposition_table data frame tibble containing fields edisposition needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. eresponse_10_col Column name containing scene delay information. transport_disposition_col column patient transport disposition. edisposition_24_col Column name containing pre-hospital trauma alert information. evitals_06_col Column name containing systolic blood pressure (SBP) values. evitals_10_col Column name containing heart rate values. evitals_12_col Column name containing pulse oximetry values. evitals_14_col Column name containing capillary refill information. evitals_15_col Column name containing respiratory effort values. evitals_21_col Column name containing Glasgow Coma Scale (GCS) Motor values. eexam_16_col Column name containing extremities assessment details. eexam_20_col Column name containing neurological assessment details. eexam_23_col Column name containing lung assessment details. eexam_25_col Column name containing chest assessment details. eprocedures_03_col Column name containing airway management tourniquet usage details. einjury_01_col Column name containing injury cause details. einjury_03_col Column name containing trauma triage steps 1 2 information. einjury_04_col Column name containing trauma triage steps 3 4 information. einjury_09_col Column name containing fall height information. ... Additional arguments passed helper functions customization.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-14 Calculation ‚Äî trauma_14","text":"tibble summarizing results three age groups (< 10 yrs, 10‚Äì65 yrs, >= 65 yrs) following columns: measure: name measure calculated. pop: Population type (< 10 yrs, 10‚Äì65 yrs, >= 65 yrs). numerator: Count incidents pre-hospital trauma alert called. denominator: Total count incidents. prop: Proportion incidents pre-hospital trauma alert called. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-14 Calculation ‚Äî trauma_14","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-14 Calculation ‚Äî trauma_14","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     eresponse_10 = rep(2210011, 5),     esituation_02 = rep(\"Yes\", 5),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_15 = c(\"apneic\", \"labored\", \"rapid\", \"shallow\", \"weak/agonal\"),     evitals_21 = c(5, 4, 3, 2, 1),     eexam_16 = c(3516043, 3516067, 3516043, 3516067, 3516067),     eexam_20 = c(3520045, 3520043, 3520019, 3520017, 3520017),     eexam_23 = c(3523011, 3523003, 3523001, 3523011, 3523003),     eexam_25 = c(3525039, 3525023, 3525005, 3525039, 3525023),     edisposition_24 = c(4224017, 4224003, 4224017, 4224003, 4224017),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007),     eprocedures_03 = c(424979004, 427753009, 429705000, 47545007, 243142003),     einjury_01 = c(\"V20\", \"V36\", \"V86\", \"V39\", \"V32\"),     einjury_03 = c(2903011, 2903009, 2903005, 3903003, 2903001),     einjury_04 = c(2904013, 2904011, 2904009, 2904007, 2904001),     einjury_09 = c(11, 12, 13, 14, 15)   )    # Run function with the first and last pain score columns   trauma_14(     df = test_data,     erecord_01_col = erecord_01,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     eresponse_10_col = eresponse_10,     esituation_02_col = esituation_02,     evitals_06_col = evitals_06,     evitals_10_col = evitals_10,     evitals_12_col = evitals_12,     evitals_14_col = evitals_14,     evitals_15_col = evitals_15,     evitals_21_col = evitals_21,     eexam_16_col = eexam_16,     eexam_20_col = eexam_20,     eexam_23_col = eexam_23,     eexam_25_col = eexam_25,     edisposition_24_col = edisposition_24,     transport_disposition_col = edisposition_30,     eprocedures_03_col = eprocedures_03,     einjury_01_col = einjury_01,     einjury_03_col = einjury_03,     einjury_04_col = einjury_04,     einjury_09_col = einjury_09   ) #>  #> ‚îÄ‚îÄ Trauma-14 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for Trauma-14 ‚îÄ‚îÄ #>  #> Running `trauma_14_population()`  [Working on 1 of 33 tasks] ‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 2 of 33 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 3 of 33 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 4 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 5 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 6 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 7 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 8 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 9 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 10 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 11 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 12 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 13 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 14 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 15 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 16 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 17 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 18 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 19 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 20 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 21 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 22 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 23 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 24 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 25 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 26 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 27 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 28 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 29 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 30 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 31 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 32 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 33 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating Trauma-14 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.46s. #>  #> # A tibble: 3 √ó 6 #>   measure   pop       numerator denominator  prop prop_label #>   <chr>     <chr>         <int>       <int> <dbl> <chr>      #> 1 Trauma-14 >= 65 yrs         0           0     0 0%         #> 2 Trauma-14 10-64 yrs         3           3     1 100%       #> 3 Trauma-14 < 10 yrs          2           2     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Trauma-14 Population ‚Äî trauma_14_population","title":"Trauma-14 Population ‚Äî trauma_14_population","text":"function processes EMS data generate population needed calculate Trauma-14 NEMSQA measure.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trauma-14 Population ‚Äî trauma_14_population","text":"","code":"trauma_14_population(   df = NULL,   patient_scene_table = NULL,   situation_table = NULL,   response_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   exam_table = NULL,   procedures_table = NULL,   injury_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   esituation_02_col,   eresponse_05_col,   eresponse_10_col,   transport_disposition_col,   edisposition_24_col,   evitals_06_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_15_col,   evitals_21_col,   eexam_16_col,   eexam_20_col,   eexam_23_col,   eexam_25_col,   eprocedures_03_col,   einjury_01_col,   einjury_03_col,   einjury_04_col,   einjury_09_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trauma-14 Population ‚Äî trauma_14_population","text":"df data frame tibble containing EMS data relevant columns. patient_scene_table data frame tibble containing fields epatient escene needed measure's calculations. situation_table data frame tibble containing fields esituation needed measure's calculations. response_table data frame tibble containing fields eresponse needed measure's calculations. disposition_table data frame tibble containing fields edisposition needed measure's calculations. vitals_table data frame tibble containing fields evitals needed measure's calculations. exam_table data frame tibble containing fields eexam needed measure's calculations. procedures_table data frame tibble containing fields eprocedures needed measure's calculations. injury_table data frame tibble containing fields einjury needed measure's calculations. erecord_01_col column representing EMS record unique identifier. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column patient age numeric value. epatient_16_col column patient age unit (e.g., \"Years\", \"Months\"). esituation_02_col column containing information presence injury. eresponse_05_col column representing 911 response type. eresponse_10_col Column name containing scene delay information. transport_disposition_col column patient transport disposition. edisposition_24_col Column name containing pre-hospital trauma alert information. evitals_06_col Column name containing systolic blood pressure (SBP) values. evitals_10_col Column name containing heart rate values. evitals_12_col Column name containing pulse oximetry values. evitals_14_col Column name containing capillary refill information. evitals_15_col Column name containing respiratory effort values. evitals_21_col Column name containing Glasgow Coma Scale (GCS) Motor values. eexam_16_col Column name containing extremities assessment details. eexam_20_col Column name containing neurological assessment details. eexam_23_col Column name containing lung assessment details. eexam_25_col Column name containing chest assessment details. eprocedures_03_col Column name containing airway management tourniquet usage details. einjury_01_col Column name containing injury cause details. einjury_03_col Column name containing trauma triage steps 1 2 information. einjury_04_col Column name containing trauma triage steps 3 4 information. einjury_09_col Column name containing fall height information.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trauma-14 Population ‚Äî trauma_14_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Trauma-14 Population ‚Äî trauma_14_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/trauma_14_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trauma-14 Population ‚Äî trauma_14_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",     \"2023-01-01\", \"1970-06-01\")),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5),     eresponse_10 = rep(2210011, 5)   )    # situation table   situation_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     esituation_02 = rep(\"Yes\", 5),   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_15 = c(\"apneic\", \"labored\", \"rapid\", \"shallow\", \"weak/agonal\"),     evitals_21 = c(5, 4, 3, 2, 1)   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_24 = c(4224017, 4224003, 4224017, 4224003, 4224017),     edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)   )    # injury table   injury_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     einjury_01 = c(\"V20\", \"V36\", \"V86\", \"V39\", \"V32\"),     einjury_03 = c(2903011, 2903009, 2903005, 3903003, 2903001),     einjury_04 = c(2904013, 2904011, 2904009, 2904007, 2904001),     einjury_09 = c(11, 12, 13, 14, 15)   )    # exam table   exam_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eexam_16 = c(3516043, 3516067, 3516043, 3516067, 3516067),     eexam_20 = c(3520045, 3520043, 3520019, 3520017, 3520017),     eexam_23 = c(3523011, 3523003, 3523001, 3523011, 3523003),     eexam_25 = c(3525039, 3525023, 3525005, 3525039, 3525023)   )    # procedures table   procedures_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eprocedures_03 = c(424979004, 427753009, 429705000, 47545007, 243142003)   )    # test the success of the function   result <- trauma_14_population(patient_scene_table = patient_table,                       response_table = response_table,                       situation_table = situation_table,                       vitals_table = vitals_table,                       disposition_table = disposition_table,                       exam_table = exam_table,                       injury_table = injury_table,                       procedures_table = procedures_table,                       erecord_01_col = erecord_01,                       incident_date_col = incident_date,                       patient_DOB_col = patient_dob,                       epatient_15_col = epatient_15,                       epatient_16_col = epatient_16,                       eresponse_05_col = eresponse_05,                       eresponse_10_col = eresponse_10,                       esituation_02_col = esituation_02,                       evitals_06_col = evitals_06,                       evitals_10_col = evitals_10,                       evitals_12_col = evitals_12,                       evitals_14_col = evitals_14,                       evitals_15_col = evitals_15,                       evitals_21_col = evitals_21,                       eexam_16_col = eexam_16,                       eexam_20_col = eexam_20,                       eexam_23_col = eexam_23,                       eexam_25_col = eexam_25,                       edisposition_24_col = edisposition_24,                       transport_disposition_col = edisposition_30,                       eprocedures_03_col = eprocedures_03,                       einjury_01_col = einjury_01,                       einjury_03_col = einjury_03,                       einjury_04_col = einjury_04,                       einjury_09_col = einjury_09   ) #> Running `trauma_14_population()`  [Working on 1 of 33 tasks] ‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 2 of 33 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 3 of 33 tasks] ‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 4 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 5 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 6 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 7 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 8 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 9 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 10 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 11 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 12 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 13 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 14 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 15 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 16 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 17 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚Ä¶ #> Running `trauma_14_population()`  [Working on 18 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 19 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 20 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 21 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 22 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 23 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 24 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 25 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 26 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 27 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 28 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 29 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 30 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 31 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 32 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `trauma_14_population()`  [Working on 33 of 33 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 30 √ó 2 #>    filter                                                                  count #>    <chr>                                                                   <int> #>  1 Situation possible injury                                                   5 #>  2 911 calls                                                                   5 #>  3 Transports                                                                  5 #>  4 GCS Motor 1-5                                                               5 #>  5 Breath sounds absent, decreased, increased respiratory effort               5 #>  6 Flail segment, retraction, accessory muscles used in breathing              5 #>  7 Respiratory effort apneic, labored, mech. assist, rapid, shallow, weak‚Ä¶     5 #>  8 Airway management procedures                                                5 #>  9 Pulse oximetry < 90                                                         5 #> 10 SBP < 110                                                                   5 #> # ‚Ñπ 20 more rows"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":null,"dir":"Reference","previous_headings":"","what":"TTR-01 Calculation ‚Äî ttr_01","title":"TTR-01 Calculation ‚Äî ttr_01","text":"function calculates TTR-01 measure, evaluates completeness vitals documentation patients experiencing cardiac arrest also transported 911 response. determines total population, adult population, pediatric population meeting criteria TTR_01 measure.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TTR-01 Calculation ‚Äî ttr_01","text":"","code":"ttr_01(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   arrest_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   transport_disposition_col,   earrest_01_col,   evitals_06_col,   evitals_07_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_23_col,   evitals_26_col,   ... )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TTR-01 Calculation ‚Äî ttr_01","text":"df data frame tibble containing dataset analyze. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. arrest_table data frame tibble containing earrest fields needed measure's calculations. Default NULL. erecord_01_col column specifying unique patient records. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column indicating patient‚Äôs age numeric form. epatient_16_col column specifying unit patient age (e.g., \"Years\", \"Days\"). eresponse_05_col column specifying type response (e.g., 911 codes). transport_disposition_col column specifying transport disposition patient. earrest_01_col column containing cardiac arrest data. evitals_06_col column containing systolic blood pressure (SBP) data initial vital signs. evitals_07_col column containing diastolic blood pressure (DBP) data initial vital signs. evitals_10_col column containing heart rate data initial vital signs. evitals_12_col column containing spO2 data initial vital signs. evitals_14_col column containing respiratory rate data initial vital signs. evitals_23_col column containing total Glasgow Coma Scale (GCS) scores initial vital signs. evitals_26_col column containing alert, verbal, painful, unresponsive (AVPU) vital signs. ... Additional arguments passed summarize_measure function.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TTR-01 Calculation ‚Äî ttr_01","text":"tibble summarizing results three population groups (Adults, Peds) following columns: measure: name measure calculated. pop: Population type (Adults, Peds). numerator: Count incidents applicable vital signs taken. denominator: Total count incidents. prop: Proportion incidents applicable vital signs taken. prop_label: Proportion formatted percentage specified number decimal places.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TTR-01 Calculation ‚Äî ttr_01","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TTR-01 Calculation ‚Äî ttr_01","text":"","code":"# Synthetic test data   test_data <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",     \"2023-01-01\", \"1970-06-01\")),     epatient_15 = c(34, 5, 45, 2, 60),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Months\", \"Years\"),     eresponse_05 = rep(2205001, 5),     earrest_01 = rep(\"No\", 5),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_07 = c(80, 90, 50, 60, 87),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_23 = c(6, 7, 8, 9, 10),     evitals_26 = c(3326007, 3326005, 3326003, 3326001, 3326007),     edisposition_30 = c(4230013, 4230009, 4230013, 4230009, 4230013)   )    # Run function with the first and last pain score columns   ttr_01(     df = test_data,     erecord_01_col = erecord_01,     incident_date_col = incident_date,     patient_DOB_col = patient_dob,     epatient_15_col = epatient_15,     epatient_16_col = epatient_16,     eresponse_05_col = eresponse_05,     earrest_01_col = earrest_01,     evitals_06_col = evitals_06,     evitals_07_col = evitals_07,     evitals_10_col = evitals_10,     evitals_12_col = evitals_12,     evitals_14_col = evitals_14,     evitals_23_col = evitals_23,     evitals_26_col = evitals_26,     transport_disposition_col = edisposition_30   ) #>  #> ‚îÄ‚îÄ TTR-01 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> ‚îÄ‚îÄ Gathering Records for TTR-01 ‚îÄ‚îÄ #>  #> Running `ttr_01_population()`  [Working on 1 of 13 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 2 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 3 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 4 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 5 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 6 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 7 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 8 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 9 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `ttr_01_population()`  [Working on 10 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `ttr_01_population()`  [Working on 13 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>  #>  #>  #> ‚îÄ‚îÄ Calculating TTR-01 ‚îÄ‚îÄ #>  #>  #> ‚úî Function completed in 0.16s. #>  #> # A tibble: 2 √ó 6 #>   measure pop    numerator denominator  prop prop_label #>   <chr>   <chr>      <int>       <int> <dbl> <chr>      #> 1 TTR-01  Adults         3           3     1 100%       #> 2 TTR-01  Peds           3           3     1 100%"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":null,"dir":"Reference","previous_headings":"","what":"TTR-01 Populations ‚Äî ttr_01_population","title":"TTR-01 Populations ‚Äî ttr_01_population","text":"Filters data target populations TTR-01, categorizes records identify needed information calculations. Identifies key categories records 911 requests patients transported EMS basic set vital signs documented based specific criteria calculates related ECG measures. function segments data age adult pediatric populations.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TTR-01 Populations ‚Äî ttr_01_population","text":"","code":"ttr_01_population(   df = NULL,   patient_scene_table = NULL,   response_table = NULL,   disposition_table = NULL,   vitals_table = NULL,   arrest_table = NULL,   erecord_01_col,   incident_date_col = NULL,   patient_DOB_col = NULL,   epatient_15_col,   epatient_16_col,   eresponse_05_col,   transport_disposition_col,   earrest_01_col,   evitals_06_col,   evitals_07_col,   evitals_10_col,   evitals_12_col,   evitals_14_col,   evitals_23_col,   evitals_26_col )"},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TTR-01 Populations ‚Äî ttr_01_population","text":"df data frame tibble containing dataset analyze. Default NULL. patient_scene_table data frame tibble containing epatient escene fields fact table. Default NULL. response_table data frame tibble containing eresponse fields needed measure's calculations. Default NULL. disposition_table data frame tibble containing edisposition fields needed measure's calculations. Default NULL. vitals_table data frame tibble containing evitals fields needed measure's calculations. Default NULL. arrest_table data frame tibble containing earrest fields needed measure's calculations. Default NULL. erecord_01_col column specifying unique patient records. incident_date_col Column contains incident date. defaults NULL optional case available due PII restrictions. patient_DOB_col Column contains patient's date birth. defaults NULL optional case available due PII restrictions. epatient_15_col column indicating patient‚Äôs age numeric form. epatient_16_col column specifying unit patient age (e.g., \"Years\", \"Days\"). eresponse_05_col column specifying type response (e.g., 911 codes). transport_disposition_col column specifying transport disposition patient. earrest_01_col column containing cardiac arrest data. evitals_06_col column containing systolic blood pressure (SBP) data initial vital signs. evitals_07_col column containing diastolic blood pressure (DBP) data initial vital signs. evitals_10_col column containing heart rate data initial vital signs. evitals_12_col column containing spO2 data initial vital signs. evitals_14_col column containing respiratory rate data initial vital signs. evitals_23_col column containing total Glasgow Coma Scale (GCS) scores initial vital signs. evitals_26_col column containing alert, verbal, painful, unresponsive (AVPU) vital signs.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TTR-01 Populations ‚Äî ttr_01_population","text":"list contains following: tibble counts filtering step, tibble population interest tibble initial population tibble total dataset computations","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TTR-01 Populations ‚Äî ttr_01_population","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/reference/ttr_01_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TTR-01 Populations ‚Äî ttr_01_population","text":"","code":"# create tables to test correct functioning    # patient table   patient_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     incident_date = as.Date(c(\"2025-01-01\", \"2025-01-05\", \"2025-02-01\",     \"2025-01-01\", \"2025-06-01\")),     patient_dob = as.Date(c(\"2000-01-01\", \"2020-01-01\", \"2023-02-01\",     \"2023-01-01\", \"1970-06-01\")),     epatient_15 = c(25, 5, 2, 2, 55),  # Ages     epatient_16 = c(\"Years\", \"Years\", \"Years\", \"Years\", \"Years\")    )    # response table   response_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     eresponse_05 = rep(2205001, 5),   )    # arrest table   arrest_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     earrest_01 = rep(\"No\", 5)   )    # vitals table   vitals_table <- tibble::tibble(      erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     evitals_06 = c(100, 90, 80, 70, 85),     evitals_07 = c(80, 90, 50, 60, 87),     evitals_10 = c(110, 89, 88, 71, 85),     evitals_12 = c(50, 60, 70, 80, 75),     evitals_14 = c(30, 9, 8, 7, 31),     evitals_23 = c(6, 7, 8, 9, 10),     evitals_26 = c(3326007, 3326005, 3326003, 3326001, 3326007),   )    # disposition table   disposition_table <- tibble::tibble(     erecord_01 = c(\"R1\", \"R2\", \"R3\", \"R4\", \"R5\"),     edisposition_30 = c(4230013, 4230009, 4230013, 4230009, 4230013)   )    # test the success of the function   result <- ttr_01_population(patient_scene_table = patient_table,                         response_table = response_table,                         arrest_table = arrest_table,                         vitals_table = vitals_table,                         disposition_table = disposition_table,                         erecord_01_col = erecord_01,                         incident_date_col = incident_date,                         patient_DOB_col = patient_dob,                         epatient_15_col = epatient_15,                         epatient_16_col = epatient_16,                         eresponse_05_col = eresponse_05,                         earrest_01_col = earrest_01,                         evitals_06_col = evitals_06,                         evitals_07_col = evitals_07,                         evitals_10_col = evitals_10,                         evitals_12_col = evitals_12,                         evitals_14_col = evitals_14,                         evitals_23_col = evitals_23,                         evitals_26_col = evitals_26,                         transport_disposition_col = edisposition_30                    ) #> Running `ttr_01_population()`  [Working on 1 of 13 tasks] ‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 2 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 3 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 4 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 5 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 6 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 7 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 8 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚îÄ‚îÄ‚Ä¶ #> Running `ttr_01_population()`  [Working on 9 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `ttr_01_population()`  [Working on 10 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #> Running `ttr_01_population()`  [Working on 13 of 13 tasks] ‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚óè‚Ä¶ #>   # show the results of filtering at each step result$filter_process #> # A tibble: 8 √ó 2 #>   filter                                           count #>   <chr>                                            <int> #> 1 911 calls                                            5 #> 2 Non-transports                                       5 #> 3 Non-cardiac arrest                                   5 #> 4 Non-null SBP, DBP, HR, SPO2, RR, and GCS or AVPU     5 #> 5 Adults denominator                                   2 #> 6 Peds denominator                                     3 #> 7 Initial population                                   5 #> 8 Total dataset                                        5"},{"path":"https://bemts-hhs.github.io/nemsqar/news/index.html","id":"nemsqar-100","dir":"Changelog","previous_headings":"","what":"nemsqar 1.0.0","title":"nemsqar 1.0.0","text":"Initial CRAN submission.","code":""},{"path":"https://bemts-hhs.github.io/nemsqar/news/index.html","id":"nemsqar-010","dir":"Changelog","previous_headings":"","what":"nemsqar 0.1.0","title":"nemsqar 0.1.0","text":"nemsqar born! Developed functions first including whole process getting target population calculating performance. Adjusted calculation measure performance modular, addition *_population workhorse functions heavy lifting gathering records data provided function needed calculate measures. Created measure_## functions wrappers run *_population functions take data calculate measure performance based National EMS Quality Alliance (NEMSQA) measure technical documents. created airway_01() created airway_01_population() created airway_05() created airway_05_population() created airway_18() created airway_18_population() created asthma_01() created asthma_01_population() created hypoglycemia_01() created hypoglycemia_01_population() created pediatrics_03b() created pediatrics_03b_population() created respiratory_01() created respiratory_01_population() created respiratory_02() created respiratory_02_population() created results_summarize() created safety_01() created safety_01_population() created safety_02() created safety_02_population() created safety_04() created safety_04_population() created seizure_02() created seizure_02_population() created stroke_01() created stroke_01_population() created summarize_measure() created syncope_01() created syncope_01_population() created tbi_01() created tbi_01_population() created trauma_01() created trauma_01_population() created trauma_03() created trauma_03_population() created trauma_04() created trauma_04_population() created trauma_08() created trauma_08_population() created trauma_14() created trauma_14_population() created ttr_01() created ttr_01_population()","code":""}]
