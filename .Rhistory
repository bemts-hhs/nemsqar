})
testthat::test_that("stroke_01_population correctly classifies patient age", {
df <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
epatient_15 = c(34, 5, 45, 2, 60),  # Ages
epatient_16 = c("Years", "Years", "Years", "Months", "Years"),
eresponse_05 = rep(2205001, 5),
esituation_11 = c(rep("I60", 3), rep("I61", 2)),
esituation_12 = c(rep("I63", 2), rep("I64", 3)),
evitals_23 = c(16, 15, 14, 13, 12),
evitals_26 = c("Alert", "Painful", "Verbal", "Unresponsive", "Alert"),
evitals_29 = rep("positive", 5),
evitals_30 = rep("a pain scale", 5)
)
result <- stroke_01_population(df,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_29_col = evitals_29,
evitals_30_col = evitals_30
)
testthat::expect_true(all(result$adults$system_age_adult == TRUE))
testthat::expect_true(all(result$adults$system_age_minor == FALSE))
})
testthat::test_that("stroke_01_population correctly filters 911 calls", {
df <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
epatient_15 = c(34, 5, 45, 2, 60),  # Ages
epatient_16 = c("Years", "Years", "Years", "Months", "Years"),
eresponse_05 = rep(2205001, 5),
esituation_11 = c(rep("I60", 3), rep("I61", 2)),
esituation_12 = c(rep("I63", 2), rep("I64", 3)),
evitals_23 = c(16, 15, 14, 13, 12),
evitals_26 = c("Alert", "Painful", "Verbal", "Unresponsive", "Alert"),
evitals_29 = rep("positive", 5),
evitals_30 = rep("a pain scale", 5)
)
result <- stroke_01_population(df,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
evitals_29_col = evitals_29,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_30_col = evitals_30
)
emergency_calls <- result$filter_process |>
dplyr::filter(filter == "911 calls") |>
dplyr::pull(count)
testthat::expect_equal(nrow(result$filter_process), 7)
testthat::expect_equal(emergency_calls, 5)
})
testthat::test_that("stroke_01_population runs correctly with table inputs", {
# create tables to test correct functioning
patient_table <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
incident_date = as.Date(c("2025-01-01", "2025-01-05", "2025-02-01", "2025-01-01", "2025-06-01")),
patient_dob = as.Date(c("2000-01-01", "2020-01-01", "2023-02-01", "2023-01-01", "1970-06-01")),
epatient_15 = c(25, 5, 2, 2, 55),  # Ages
epatient_16 = c("Years", "Years", "Years", "Years", "Years")
)
response_table <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
eresponse_05 = rep(2205001, 5)
)
situation_table <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
esituation_11 = c(rep("I60", 3), rep("I61", 2)),
esituation_12 = c(rep("I63", 2), rep("I64", 3)),
)
vitals_table <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
evitals_23 = c(16, 15, 14, 13, 12),
evitals_26 = c("Alert", "Painful", "Verbal", "Unresponsive", "Alert"),
evitals_29 = rep("positive", 5),
evitals_30 = rep("a pain scale", 5)
)
# test the success of the function
result <- stroke_01_population(patient_scene_table = patient_table,
response_table = response_table,
situation_table = situation_table,
vitals_table = vitals_table,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
evitals_29_col = evitals_29,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_30_col = evitals_30
)
testthat::expect_equal(nrow(result$filter_process), 7)
testthat::expect_true(is.list(result))
})
testthat::test_that("stroke_01 produces expected results", {
# Synthetic test data
test_data <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
epatient_15 = c(34, 5, 45, 2, 60),  # Ages
epatient_16 = c("Years", "Years", "Years", "Months", "Years"),
eresponse_05 = rep(2205001, 5),
esituation_11 = c(rep("I60", 3), rep("I61", 2)),
esituation_12 = c(rep("I63", 2), rep("I64", 3)),
evitals_23 = c(16, 15, 14, 13, 12),
evitals_26 = c("Alert", "Painful", "Verbal", "Unresponsive", "Alert"),
evitals_29 = rep("positive", 5),
evitals_30 = rep("a pain scale", 5)
)
# Run function
result <- stroke_01(
df = test_data,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_29_col = evitals_29,
evitals_30_col = evitals_30
)
# Check structure
testthat::expect_s3_class(result, "data.frame")
testthat::expect_true(all(c("measure", "pop", "numerator", "denominator", "prop", "prop_label") %in% names(result)))
# Check calculations
testthat::expect_equal(sum(result$numerator), 5)  # Three cases had Albuterol
testthat::expect_equal(sum(result$denominator), 5)  # Four cases met inclusion criteria
testthat::expect_equal(result$prop[result$pop == "All"], 1)
testthat::expect_equal(nrow(result), 1)
# create tables to test correct functioning
patient_table <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
incident_date = as.Date(c("2025-01-01", "2025-01-05", "2025-02-01", "2025-01-01", "2025-06-01")),
patient_dob = as.Date(c("2000-01-01", "2020-01-01", "2023-02-01", "2023-01-01", "1970-06-01")),
epatient_15 = c(25, 5, 2, 2, 55),  # Ages
epatient_16 = c("Years", "Years", "Years", "Years", "Years")
)
response_table <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
eresponse_05 = rep(2205001, 5)
)
situation_table <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
esituation_11 = c(rep("I60", 3), rep("I61", 2)),
esituation_12 = c(rep("I63", 2), rep("I64", 3)),
)
vitals_table <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
evitals_23 = c(16, 15, 14, 13, 12),
evitals_26 = c("Alert", "Painful", "Verbal", "Unresponsive", "Alert"),
evitals_29 = rep("positive", 5),
evitals_30 = rep("a pain scale", 5)
)
# test the success of the function
result_2 <- stroke_01(patient_scene_table = patient_table,
response_table = response_table,
situation_table = situation_table,
vitals_table = vitals_table,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
evitals_29_col = evitals_29,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_30_col = evitals_30
)
# Check calculations
testthat::expect_equal(sum(result_2$numerator), 5)  # Three cases had Albuterol
testthat::expect_equal(sum(result_2$denominator), 5)  # Four cases met inclusion criteria
testthat::expect_equal(result_2$prop[result_2$pop == "All"], 1)
testthat::expect_equal(nrow(result_2), 1)
})
testthat::test_that("stroke_01 handles missing data correctly", {
# Synthetic test data
missing_data <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
epatient_15 = c(34, 5, 45, 2, 60),  # Ages
epatient_16 = c("Years", "Years", "Years", "Months", "Years"),
eresponse_05 = rep(2205001, 5),
esituation_11 = c(rep("I60", 3), rep("I61", 2)),
esituation_12 = c(rep("I63", 2), rep("I64", 3)),
evitals_23 = c(16, 15, NA_integer_, 13, NA_integer_),
evitals_26 = c("Alert", "Painful", "Verbal", NA_character_, NA_character_),
evitals_29 = rep("positive", 5),
evitals_30 = rep("a pain scale", 5)
)
result <- stroke_01(
df = missing_data,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
evitals_29_col = evitals_29,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_30_col = evitals_30
)
testthat::expect_true(nrow(result) > 0)
testthat::expect_true(all(!is.na(result$denominator)))
})
testthat::test_that("stroke_01 returns empty result for non-matching criteria", {
# Synthetic test data
non_matching_data <- tibble::tibble(
erecord_01 = c("R1", "R2"),
epatient_15 = c(30, 50),
epatient_16 = c("Years", "Years"),
eresponse_05 = c("Non-911 Call", "Non-911 Call"),
esituation_11 = c("Non-Respiratory", "Non-Respiratory"),
esituation_12 = c("Not Asthma", "Not Asthma"),
emedications_03 = c("None", "None"),
evitals_29 = c(60, 59),
evitals_23 = c(16, 15),
evitals_26 = c("Alert", "Painful"),
evitals_30 = rep("710925007", 2)
)
result <- stroke_01(
df = non_matching_data,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
emedications_03_col = emedications_03,
evitals_29_col = evitals_29,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_30_col = evitals_30
)
testthat::expect_equal(sum(result$denominator), 0)
})
args(stroke_01)
testthat::test_that("stroke_01 returns empty result for non-matching criteria", {
# Synthetic test data
non_matching_data <- tibble::tibble(
erecord_01 = c("R1", "R2"),
epatient_15 = c(30, 50),
epatient_16 = c("Years", "Years"),
eresponse_05 = c("Non-911 Call", "Non-911 Call"),
esituation_11 = c("Non-Respiratory", "Non-Respiratory"),
esituation_12 = c("Not Asthma", "Not Asthma"),
emedications_03 = c("None", "None"),
evitals_29 = c(60, 59),
evitals_23 = c(16, 15),
evitals_26 = c("Alert", "Painful"),
evitals_30 = rep("710925007", 2)
)
result <- stroke_01(
df = non_matching_data,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
emedications_03_col = emedications_03,
evitals_29_col = evitals_29,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_30_col = evitals_30
)
testthat::expect_equal(sum(result$denominator), 0)
})
# Synthetic test data
non_matching_data <- tibble::tibble(
erecord_01 = c("R1", "R2"),
epatient_15 = c(30, 50),
epatient_16 = c("Years", "Years"),
eresponse_05 = c("Non-911 Call", "Non-911 Call"),
esituation_11 = c("Non-Respiratory", "Non-Respiratory"),
esituation_12 = c("Not Asthma", "Not Asthma"),
emedications_03 = c("None", "None"),
evitals_29 = c(60, 59),
evitals_23 = c(16, 15),
evitals_26 = c("Alert", "Painful"),
evitals_30 = rep("710925007", 2)
)
result <- stroke_01(
df = non_matching_data,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
emedications_03_col = emedications_03,
evitals_29_col = evitals_29,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_30_col = evitals_30
)
result
sum(result$denominator
sum(result$denominator)
sum(result$denominator)
rm(list = ls())
renv::status()
check()
devtools::check()
testthat::test_that("stroke_01 returns empty result for non-matching criteria", {
# Synthetic test data
non_matching_data <- tibble::tibble(
erecord_01 = c("R1", "R2"),
epatient_15 = c(30, 50),
epatient_16 = c("Years", "Years"),
eresponse_05 = c("Non-911 Call", "Non-911 Call"),
esituation_11 = c("Non-Respiratory", "Non-Respiratory"),
esituation_12 = c("Not Asthma", "Not Asthma"),
emedications_03 = c("None", "None"),
evitals_29 = c(60, 59),
evitals_23 = c(16, 15),
evitals_26 = c("Alert", "Painful"),
evitals_30 = rep("710925007", 2)
)
result <- stroke_01(
df = non_matching_data,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
emedications_03_col = emedications_03,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_29_col = evitals_29,
evitals_30_col = evitals_30
)
testthat::expect_equal(sum(result$denominator), 0)
})
testthat::test_that("stroke_01 returns empty result for non-matching criteria", {
# Synthetic test data
non_matching_data <- tibble::tibble(
erecord_01 = c("R1", "R2"),
epatient_15 = c(30, 50),
epatient_16 = c("Years", "Years"),
eresponse_05 = c("Non-911 Call", "Non-911 Call"),
esituation_11 = c("Non-Respiratory", "Non-Respiratory"),
esituation_12 = c("Not Asthma", "Not Asthma"),
emedications_03 = c("None", "None"),
evitals_29 = c(60, 59),
evitals_23 = c(16, 15),
evitals_26 = c("Alert", "Painful"),
evitals_30 = rep("710925007", 2)
)
result <- stroke_01(
df = non_matching_data,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
emedications_03_col = emedications_03,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_29_col = evitals_29,
evitals_30_col = evitals_30
)
testthat::expect_equal(sum(result$denominator), 0)
})
testthat::test_that("stroke_01 returns empty result for non-matching criteria", {
# Synthetic test data
non_matching_data <- tibble::tibble(
erecord_01 = c("R1", "R2"),
epatient_15 = c(30, 50),
epatient_16 = c("Years", "Years"),
eresponse_05 = c("Non-911 Call", "Non-911 Call"),
esituation_11 = c("Non-Respiratory", "Non-Respiratory"),
esituation_12 = c("Not Asthma", "Not Asthma"),
emedications_03 = c("None", "None"),
evitals_29 = c(60, 59),
evitals_23 = c(16, 15),
evitals_26 = c("Alert", "Painful"),
evitals_30 = rep("710925007", 2)
)
result <- stroke_01(
df = non_matching_data,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
emedications_03_col = emedications_03,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_29_col = evitals_29,
evitals_30_col = evitals_30
)
testthat::expect_equal(sum(result$denominator), 0)
})
# Synthetic test data
non_matching_data <- tibble::tibble(
erecord_01 = c("R1", "R2"),
epatient_15 = c(30, 50),
epatient_16 = c("Years", "Years"),
eresponse_05 = c("Non-911 Call", "Non-911 Call"),
esituation_11 = c("Non-Respiratory", "Non-Respiratory"),
esituation_12 = c("Not Asthma", "Not Asthma"),
emedications_03 = c("None", "None"),
evitals_29 = c(60, 59),
evitals_23 = c(16, 15),
evitals_26 = c("Alert", "Painful"),
evitals_30 = rep("710925007", 2)
)
result <- stroke_01(
df = non_matching_data,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
emedications_03_col = emedications_03,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_29_col = evitals_29,
evitals_30_col = evitals_30
)
result
testthat::test_that("trauma_01_population correctly classifies patient age", {
df <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
epatient_15 = c(34, 5, 45, 2, 60),  # Ages
epatient_16 = c("Years", "Years", "Years", "Months", "Years"),
eresponse_05 = rep(2205001, 5),
esituation_02 = rep("Yes", 5),
evitals_23 = rep(15, 5),
evitals_26 = rep("Alert", 5),
evitals_27 = c(0, 2, 4, 6, 8),
edisposition_28 = rep(4228001, 5),
edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)
)
result <- trauma_01_population(df,
erecord_01_col = erecord_01,
epatient_15_col = epatient_15,
epatient_16_col = epatient_16,
eresponse_05_col = eresponse_05,
esituation_02_col = esituation_02,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_27_col = evitals_27,
edisposition_28_col = edisposition_28,
transport_disposition_col = edisposition_30
)
testthat::expect_true(all(result$adults$system_age_adult == TRUE))
testthat::expect_true(all(result$adults$system_age_minor == FALSE))
})
testthat::test_that("trauma_01_population correctly classifies patient age", {
df <- tibble::tibble(
erecord_01 = c("R1", "R2", "R3", "R4", "R5"),
incident_date = as.Date(c("2025-01-01", "2025-01-05", "2025-02-01", "2025-01-01", "2025-06-01")),
patient_dob = as.Date(c("2000-01-01", "2020-01-01", "2023-02-01", "2023-01-01", "1970-06-01")),
epatient_15 = c(25, 5, 2, 2, 55),  # Ages
epatient_16 = c("Years", "Years", "Years", "Years", "Years"),
eresponse_05 = rep(2205001, 5),
esituation_02 = rep("Yes", 5),
evitals_23 = rep(15, 5),
evitals_26 = rep("Alert", 5),
evitals_27 = c(0, 2, 4, 6, 8),
edisposition_28 = rep(4228001, 5),
edisposition_30 = c(4230001, 4230003, 4230001, 4230007, 4230007)
)
result <- trauma_01_population(df,
erecord_01_col = erecord_01,
epatient_15_col = epatient_15,
epatient_16_col = epatient_16,
incident_date_col = incident_date,
patient_DOB_col = patient_dob,
eresponse_05_col = eresponse_05,
esituation_02_col = esituation_02,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_27_col = evitals_27,
edisposition_28_col = edisposition_28,
transport_disposition_col = edisposition_30
)
testthat::expect_true(all(result$adults$system_age_adult == TRUE))
testthat::expect_true(all(result$adults$system_age_minor == FALSE))
})
testthat::test_that("stroke_01 returns empty result for non-matching criteria", {
# Synthetic test data
non_matching_data <- tibble::tibble(
erecord_01 = c("R1", "R2"),
epatient_15 = c(30, 50),
epatient_16 = c("Years", "Years"),
eresponse_05 = c("Non-911 Call", "Non-911 Call"),
esituation_11 = c("Non-Respiratory", "Non-Respiratory"),
esituation_12 = c("Not Asthma", "Not Asthma"),
emedications_03 = c("None", "None"),
evitals_29 = c(60, 59),
evitals_23 = c(16, 15),
evitals_26 = c("Alert", "Painful"),
evitals_30 = rep("710925007", 2)
)
result <- stroke_01(
df = non_matching_data,
erecord_01_col = erecord_01,
eresponse_05_col = eresponse_05,
esituation_11_col = esituation_11,
esituation_12_col = esituation_12,
emedications_03_col = emedications_03,
evitals_23_col = evitals_23,
evitals_26_col = evitals_26,
evitals_29_col = evitals_29,
evitals_30_col = evitals_30
)
testthat::expect_equal(sum(result$denominator), 0)
})
library(testthat)
library(devtools)
test_coverage_active_file()
test_coverage_active_file()
test_coverage()
unload()
test_coverage()
check()
check(manual = T, cran = T)
use_pkgdown_github_pages()
use_github_action("test-coverage")
build_readme()
