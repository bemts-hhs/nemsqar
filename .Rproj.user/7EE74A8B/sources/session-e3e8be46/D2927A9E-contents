###_____________________________________________________________________________
### Trauma-14 test using the new table functions
###_____________________________________________________________________________

# data import

# patient table
trauma_14_patient_table <- readr::read_csv("C:/Users/nfoss0/OneDrive - State of Iowa HHS/Analytics/BEMTS/EMS DATA FOR ALL SCRIPTS/NEMSQA/tables/nemsqa_patient_scene_data_Export_2023.csv") |>
  janitor::clean_names(case = "screaming_snake", sep_out = "_") |>
  dplyr::mutate(dplyr::across(c(INCIDENT_DATE, PATIENT_DATE_OF_BIRTH_E_PATIENT_17), ~  lubridate::mdy(stringr::str_remove_all(., pattern = "\\s\\d+:\\d+(:\\d+\\s(AM|PM))?")
  )))

# response table
trauma_14_response_table <- readr::read_csv("C:/Users/nfoss0/OneDrive - State of Iowa HHS/Analytics/BEMTS/EMS DATA FOR ALL SCRIPTS/NEMSQA/tables/nemsqa_response_data_Export_2023.csv") |>
  janitor::clean_names(case = "screaming_snake", sep_out = "_") |>
  dplyr::mutate(INCIDENT_DATE = lubridate::mdy(stringr::str_remove_all(INCIDENT_DATE, pattern = "\\s\\d+:\\d+(:\\d+\\s(AM|PM))?")
  ))

# situations table
trauma_14_situation_table <- readr::read_csv("C:/Users/nfoss0/OneDrive - State of Iowa HHS/Analytics/BEMTS/EMS DATA FOR ALL SCRIPTS/NEMSQA/tables/nemsqa_situation_data_Export_2023.csv") |>
  janitor::clean_names(case = "screaming_snake", sep_out = "_") |>
  dplyr::mutate(INCIDENT_DATE = lubridate::mdy(stringr::str_remove_all(INCIDENT_DATE, pattern = "\\s\\d+:\\d+(:\\d+\\s(AM|PM))?")
  ))

# medications table
trauma_14_medications_table <- readr::read_csv("C:/Users/nfoss0/OneDrive - State of Iowa HHS/Analytics/BEMTS/EMS DATA FOR ALL SCRIPTS/NEMSQA/tables/nemsqa_medications_data_Export_2023.csv") |>
  janitor::clean_names(case = "screaming_snake", sep_out = "_") |>
  dplyr::mutate(INCIDENT_DATE = lubridate::mdy(stringr::str_remove_all(INCIDENT_DATE, pattern = "\\s\\d+:\\d+(:\\d+\\s(AM|PM))?")
  ))

# vitals table
trauma_14_vitals_table <- readr::read_csv("C:/Users/nfoss0/OneDrive - State of Iowa HHS/Analytics/BEMTS/EMS DATA FOR ALL SCRIPTS/NEMSQA/tables/nemsqa_vitals_data_Export_2023.csv") |>
  janitor::clean_names(case = "screaming_snake", sep_out = "_") |>
  dplyr::mutate(INCIDENT_DATE = lubridate::mdy(stringr::str_remove_all(INCIDENT_DATE, pattern = "\\s\\d+:\\d+(:\\d+\\s(AM|PM))?")
  ))

# exam table
trauma_14_exam_table <- readr::read_csv("C:/Users/nfoss0/OneDrive - State of Iowa HHS/Analytics/BEMTS/EMS DATA FOR ALL SCRIPTS/NEMSQA/tables/nemsqa_exam_data_Export_2023.csv") |>
  janitor::clean_names(case = "screaming_snake", sep_out = "_") |>
  dplyr::mutate(INCIDENT_DATE = lubridate::mdy(stringr::str_remove_all(INCIDENT_DATE, pattern = "\\s\\d+:\\d+(:\\d+\\s(AM|PM))?")
  ))

# procedures table
trauma_14_procedures_table <- readr::read_csv("C:/Users/nfoss0/OneDrive - State of Iowa HHS/Analytics/BEMTS/EMS DATA FOR ALL SCRIPTS/NEMSQA/tables/nemsqa_procedures_data_Export_2023.csv") |>
  janitor::clean_names(case = "screaming_snake", sep_out = "_") |>
  dplyr::mutate(INCIDENT_DATE = lubridate::mdy(stringr::str_remove_all(INCIDENT_DATE, pattern = "\\s\\d+:\\d+(:\\d+\\s(AM|PM))?")
  ))

# injury table
trauma_14_injury_table <- readr::read_csv("C:/Users/nfoss0/OneDrive - State of Iowa HHS/Analytics/BEMTS/EMS DATA FOR ALL SCRIPTS/NEMSQA/tables/nemsqa_injury_data_Export_2023.csv") |>
  janitor::clean_names(case = "screaming_snake", sep_out = "_") |>
  dplyr::mutate(INCIDENT_DATE = lubridate::mdy(stringr::str_remove_all(INCIDENT_DATE, pattern = "\\s\\d+:\\d+(:\\d+\\s(AM|PM))?")
  ))

# disposition table
trauma_14_disposition_table <- readr::read_csv("C:/Users/nfoss0/OneDrive - State of Iowa HHS/Analytics/BEMTS/EMS DATA FOR ALL SCRIPTS/NEMSQA/tables/nemsqa_disposition_data_Export_2023.csv") |>
  janitor::clean_names(case = "screaming_snake", sep_out = "_") |>
  dplyr::mutate(INCIDENT_DATE = lubridate::mdy(stringr::str_remove_all(INCIDENT_DATE, pattern = "\\s\\d+:\\d+(:\\d+\\s(AM|PM))?")
                             ),
         dplyr::across(c(TRANSPORT_DISPOSITION_3_4_IT_DISPOSITION_102_3_5_E_DISPOSITION_30, DISPOSITION_INCIDENT_PATIENT_DISPOSITION_WITH_CODE_3_4_E_DISPOSITION_12_3_5_IT_DISPOSITION_112), ~ dplyr::if_else(is.na(.), "None", .)),
         TRANSPORT_DISPOSITION_3_4_IT_DISPOSITION_102_3_5_E_DISPOSITION_30 = stringr::str_c(TRANSPORT_DISPOSITION_3_4_IT_DISPOSITION_102_3_5_E_DISPOSITION_30, ", ", DISPOSITION_INCIDENT_PATIENT_DISPOSITION_WITH_CODE_3_4_E_DISPOSITION_12_3_5_IT_DISPOSITION_112)
         )

# run the population function
trauma_population_14_table <- trauma_14_population(

  patient_scene_table = trauma_14_patient_table,
  response_table = trauma_14_response_table,
  situation_table = trauma_14_situation_table,
  vitals_table = trauma_14_vitals_table,
  exam_table = trauma_14_exam_table,
  procedures_table = trauma_14_procedures_table,
  injury_table = trauma_14_injury_table,
  disposition_table = trauma_14_disposition_table,
  erecord_01_col = INCIDENT_PATIENT_CARE_REPORT_NUMBER_PCR_E_RECORD_01,
  incident_date_col = INCIDENT_DATE,
  patient_DOB_col = PATIENT_DATE_OF_BIRTH_E_PATIENT_17,
  epatient_15_col = PATIENT_AGE_E_PATIENT_15,
  epatient_16_col = PATIENT_AGE_UNITS_E_PATIENT_16,
  esituation_02_col = SITUATION_POSSIBLE_INJURY_WITH_CODE_E_SITUATION_02,
  eresponse_05_col = RESPONSE_TYPE_OF_SERVICE_REQUESTED_WITH_CODE_E_RESPONSE_05,
  eresponse_10_col = RESPONSE_TYPE_OF_SCENE_DELAY_LIST_E_RESPONSE_10,
  transport_disposition_col = TRANSPORT_DISPOSITION_3_4_IT_DISPOSITION_102_3_5_E_DISPOSITION_30,
  edisposition_24_col = DISPOSITION_TEAM_PRE_ARRIVAL_ALERT_E_DISPOSITION_24,
  evitals_06_col = VITALS_SYSTOLIC_BLOOD_PRESSURE_SBP_E_VITALS_06,
  evitals_10_col = VITALS_HEART_RATE_E_VITALS_10,
  evitals_12_col = VITALS_PULSE_OXIMETRY_E_VITALS_12,
  evitals_14_col = VITALS_RESPIRATORY_RATE_E_VITALS_14,
  evitals_15_col = VITALS_RESPIRATORY_EFFORT_E_VITALS_15,
  evitals_21_col = VITALS_GLASGOW_COMA_SCORE_GCS_MOTOR_E_VITALS_21,
  eexam_16_col = PATIENT_EXTREMITY_ASSESSMENT_FINDINGS_LIST_E_EXAM_16,
  eexam_20_col = PATIENT_NEUROLOGICAL_ASSESSMENT_FINDINGS_LIST_E_EXAM_20,
  eexam_23_col = PATIENT_LUNG_ASSESSMENT_FINDINGS_LIST_3_4_IT_EXAM_100_3_5_E_EXAM_23,
  eexam_25_col = PATIENT_CHEST_EXCLUSIVE_ASSESSMENT_FINDINGS_LIST_3_4_IT_EXAM_102_3_5_E_EXAM_25,
  eprocedures_03_col = PATIENT_ATTEMPTED_PROCEDURE_DESCRIPTIONS_AND_CODES_LIST_E_PROCEDURES_03,
  einjury_01_col = INJURY_CAUSE_OF_INJURY_DESCRIPTION_AND_CODE_LIST_E_INJURY_01,
  einjury_03_col = INJURY_TRAUMA_CENTER_TRIAGE_CRITERIA_STEPS_1_AND_2_LIST_E_INJURY_03,
  einjury_04_col = INJURY_VEHICULAR_PEDESTRIAN_OR_OTHER_INJURY_RISK_FACTOR_TRIAGE_CRITERIA_STEPS_3_AND_4_LIST_E_INJURY_04,
  einjury_09_col = INJURY_HEIGHT_OF_FALL_IN_FEET_E_INJURY_09

)

# run the wrapper function with all arguments
trauma_14(patient_scene_table = trauma_14_patient_table,
          response_table = trauma_14_response_table,
          situation_table = trauma_14_situation_table,
          vitals_table = trauma_14_vitals_table,
          exam_table = trauma_14_exam_table,
          procedures_table = trauma_14_procedures_table,
          injury_table = trauma_14_injury_table,
          disposition_table = trauma_14_disposition_table,
          erecord_01_col = INCIDENT_PATIENT_CARE_REPORT_NUMBER_PCR_E_RECORD_01,
          incident_date_col = INCIDENT_DATE,
          patient_DOB_col = PATIENT_DATE_OF_BIRTH_E_PATIENT_17,
          epatient_15_col = PATIENT_AGE_E_PATIENT_15,
          epatient_16_col = PATIENT_AGE_UNITS_E_PATIENT_16,
          esituation_02_col = SITUATION_POSSIBLE_INJURY_WITH_CODE_E_SITUATION_02,
          eresponse_05_col = RESPONSE_TYPE_OF_SERVICE_REQUESTED_WITH_CODE_E_RESPONSE_05,
          eresponse_10_col = RESPONSE_TYPE_OF_SCENE_DELAY_LIST_E_RESPONSE_10,
          transport_disposition_col = TRANSPORT_DISPOSITION_3_4_IT_DISPOSITION_102_3_5_E_DISPOSITION_30,
          edisposition_24_col = DISPOSITION_TEAM_PRE_ARRIVAL_ALERT_E_DISPOSITION_24,
          evitals_06_col = VITALS_SYSTOLIC_BLOOD_PRESSURE_SBP_E_VITALS_06,
          evitals_10_col = VITALS_HEART_RATE_E_VITALS_10,
          evitals_12_col = VITALS_PULSE_OXIMETRY_E_VITALS_12,
          evitals_14_col = VITALS_RESPIRATORY_RATE_E_VITALS_14,
          evitals_15_col = VITALS_RESPIRATORY_EFFORT_E_VITALS_15,
          evitals_21_col = VITALS_GLASGOW_COMA_SCORE_GCS_MOTOR_E_VITALS_21,
          eexam_16_col = PATIENT_EXTREMITY_ASSESSMENT_FINDINGS_LIST_E_EXAM_16,
          eexam_20_col = PATIENT_NEUROLOGICAL_ASSESSMENT_FINDINGS_LIST_E_EXAM_20,
          eexam_23_col = PATIENT_LUNG_ASSESSMENT_FINDINGS_LIST_3_4_IT_EXAM_100_3_5_E_EXAM_23,
          eexam_25_col = PATIENT_CHEST_EXCLUSIVE_ASSESSMENT_FINDINGS_LIST_3_4_IT_EXAM_102_3_5_E_EXAM_25,
          eprocedures_03_col = PATIENT_ATTEMPTED_PROCEDURE_DESCRIPTIONS_AND_CODES_LIST_E_PROCEDURES_03,
          einjury_01_col = INJURY_CAUSE_OF_INJURY_DESCRIPTION_AND_CODE_LIST_E_INJURY_01,
          einjury_03_col = INJURY_TRAUMA_CENTER_TRIAGE_CRITERIA_STEPS_1_AND_2_LIST_E_INJURY_03,
          einjury_04_col = INJURY_VEHICULAR_PEDESTRIAN_OR_OTHER_INJURY_RISK_FACTOR_TRIAGE_CRITERIA_STEPS_3_AND_4_LIST_E_INJURY_04,
          einjury_09_col = INJURY_HEIGHT_OF_FALL_IN_FEET_E_INJURY_09
          )

# run the wrapper function with NULL date arguments

trauma_14(patient_scene_table = trauma_14_patient_table,
          response_table = trauma_14_response_table,
          situation_table = trauma_14_situation_table,
          vitals_table = trauma_14_vitals_table,
          exam_table = trauma_14_exam_table,
          procedures_table = trauma_14_procedures_table,
          injury_table = trauma_14_injury_table,
          disposition_table = trauma_14_disposition_table,
          erecord_01_col = INCIDENT_PATIENT_CARE_REPORT_NUMBER_PCR_E_RECORD_01,
          incident_date_col = NULL,
          patient_DOB_col = NULL,
          epatient_15_col = PATIENT_AGE_E_PATIENT_15,
          epatient_16_col = PATIENT_AGE_UNITS_E_PATIENT_16,
          esituation_02_col = SITUATION_POSSIBLE_INJURY_WITH_CODE_E_SITUATION_02,
          eresponse_05_col = RESPONSE_TYPE_OF_SERVICE_REQUESTED_WITH_CODE_E_RESPONSE_05,
          eresponse_10_col = RESPONSE_TYPE_OF_SCENE_DELAY_LIST_E_RESPONSE_10,
          transport_disposition_col = TRANSPORT_DISPOSITION_3_4_IT_DISPOSITION_102_3_5_E_DISPOSITION_30,
          edisposition_24_col = DISPOSITION_TEAM_PRE_ARRIVAL_ALERT_E_DISPOSITION_24,
          evitals_06_col = VITALS_SYSTOLIC_BLOOD_PRESSURE_SBP_E_VITALS_06,
          evitals_10_col = VITALS_HEART_RATE_E_VITALS_10,
          evitals_12_col = VITALS_PULSE_OXIMETRY_E_VITALS_12,
          evitals_14_col = VITALS_RESPIRATORY_RATE_E_VITALS_14,
          evitals_15_col = VITALS_RESPIRATORY_EFFORT_E_VITALS_15,
          evitals_21_col = VITALS_GLASGOW_COMA_SCORE_GCS_MOTOR_E_VITALS_21,
          eexam_16_col = PATIENT_EXTREMITY_ASSESSMENT_FINDINGS_LIST_E_EXAM_16,
          eexam_20_col = PATIENT_NEUROLOGICAL_ASSESSMENT_FINDINGS_LIST_E_EXAM_20,
          eexam_23_col = PATIENT_LUNG_ASSESSMENT_FINDINGS_LIST_3_4_IT_EXAM_100_3_5_E_EXAM_23,
          eexam_25_col = PATIENT_CHEST_EXCLUSIVE_ASSESSMENT_FINDINGS_LIST_3_4_IT_EXAM_102_3_5_E_EXAM_25,
          eprocedures_03_col = PATIENT_ATTEMPTED_PROCEDURE_DESCRIPTIONS_AND_CODES_LIST_E_PROCEDURES_03,
          einjury_01_col = INJURY_CAUSE_OF_INJURY_DESCRIPTION_AND_CODE_LIST_E_INJURY_01,
          einjury_03_col = INJURY_TRAUMA_CENTER_TRIAGE_CRITERIA_STEPS_1_AND_2_LIST_E_INJURY_03,
          einjury_04_col = INJURY_VEHICULAR_PEDESTRIAN_OR_OTHER_INJURY_RISK_FACTOR_TRIAGE_CRITERIA_STEPS_3_AND_4_LIST_E_INJURY_04,
          einjury_09_col = INJURY_HEIGHT_OF_FALL_IN_FEET_E_INJURY_09
          )
